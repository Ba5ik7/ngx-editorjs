{"version":3,"file":"node_modules_mermaid_dist_stateDiagram-d53d2428_js.js","mappings":"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","sources":["./node_modules/mermaid/dist/stateDiagram-d53d2428.js"],"sourcesContent":["import { d as db, p as parser, s as styles } from \"./styles-47a825a5.js\";\nimport { line, curveBasis, select } from \"d3\";\nimport { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { g as getConfig, e as common, l as log } from \"./commonDb-573409be.js\";\nimport { u as utils, k as configureSvgSize } from \"./utils-d622194a.js\";\nimport \"./mermaidAPI-3ae0f2f0.js\";\nimport \"stylis\";\nimport \"dompurify\";\nimport \"lodash-es/isEmpty.js\";\nimport \"dayjs\";\nimport \"khroma\";\nimport \"@braintree/sanitize-url\";\nimport \"lodash-es/memoize.js\";\nconst idCache = {};\nconst set = (key, val) => {\n  idCache[key] = val;\n};\nconst get = (k) => idCache[k];\nconst keys = () => Object.keys(idCache);\nconst size = () => keys().length;\nconst idCache$1 = {\n  get,\n  set,\n  keys,\n  size\n};\nconst drawStartState = (g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit);\nconst drawDivider = (g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0);\nconst drawSimpleState = (g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n};\nconst drawDescrState = (g, stateDef) => {\n  const addTspan = function(textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  };\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\n    \"y\",\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\n  ).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function(descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst addTitleAndBox = (g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc)\n    ;\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\n    \"height\",\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n  ).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst drawEndState = (g) => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\n    \"cx\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  ).attr(\n    \"cy\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  );\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n};\nconst drawForkJoinState = (g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n};\nconst _drawLongText = (_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line2 of lines) {\n    const txt = line2.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n};\nconst drawNote = (text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n};\nconst drawState = function(elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  idCache$1.set(id, stateInfo);\n  return stateInfo;\n};\nlet edgeCount = 0;\nconst drawEdge = function(elem, path, relation) {\n  const getRelationType = function(type) {\n    switch (type) {\n      case db.relationType.AGGREGATION:\n        return \"aggregation\";\n      case db.relationType.EXTENSION:\n        return \"extension\";\n      case db.relationType.COMPOSITION:\n        return \"composition\";\n      case db.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  };\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  svgPath.attr(\n    \"marker-end\",\n    \"url(\" + url + \"#\" + getRelationType(db.relationType.DEPENDENCY) + \"End)\"\n  );\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const { x, y } = utils.calcLabelPosition(path.points);\n    const rows = common.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundstmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundstmp.width);\n      minX = Math.min(minX, boundstmp.x);\n      log.info(boundstmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n};\nlet conf;\nconst transformationLog = {};\nconst setConf = function() {\n};\nconst insertMarkers = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n};\nconst draw = function(text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const graph = new graphlib.Graph({\n    multigraph: true,\n    compound: true,\n    // acyclicer: 'greedy',\n    rankdir: \"RL\"\n    // ranksep: '20'\n  });\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\n    \"viewBox\",\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\n  );\n};\nconst getLabelWidth = (text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n};\nconst renderDoc = (doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  diagObj.db.extract(doc);\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys2 = Object.keys(states);\n  for (const key of keys2) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      }\n    } else {\n      node = drawState(diagram2, stateDef);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function(relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common.getRows(relation.title).length,\n        labelpos: \"c\"\n      },\n      \"id\" + cnt\n    );\n  });\n  layout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function(v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\n        \"transform\",\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\n      );\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function(e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n};\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["d","db","p","parser","s","styles","line","curveBasis","select","layout","graphlib","g","getConfig","e","common","l","log","u","utils","k","configureSvgSize","idCache","set","key","val","get","keys","Object","size","length","idCache$1","drawStartState","append","attr","state","sizeUnit","padding","drawDivider","style","textHeight","drawSimpleState","stateDef","fontSize","text","id","classBox","node","getBBox","insert","width","height","radius","drawDescrState","addTspan","textEl","txt","isFirst2","tSpan","title","descriptions","titleBox","titleHeight","description","dividerMargin","isFirst","isSecond","forEach","descr","descrLine","descrBox","Math","max","addTitleAndBox","altBkg","pad","dblPad","orgBox","orgWidth","orgX","x","titleShift","titleWidth","startX","graphBox","doc","abs","lineY","drawEndState","miniPadding","drawForkJoinState","forkWidth","forkHeight","parentId","tmp","_drawLongText","_text","y","textElem","replace","lines","split","lineBreakRegex","tHeight","noteMargin","line2","trim","span","textBounds","textWidth","drawNote","note","rectElem","drawState","elem","stateInfo","label","type","stateBox","edgeCount","drawEdge","path","relation","getRelationType","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","points","filter","Number","isNaN","lineData","lineFunction","curve","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","calcLabelPosition","rows","getRows","titleRows","maxWidth","minX","i","boundstmp","min","info","push","boxHeight","heightAdj","bounds","conf","transformationLog","setConf","insertMarkers","draw","_version","diagObj","securityLevel","sandboxElement","root","nodes","contentDocument","body","document","debug","diagram2","graph","Graph","multigraph","compound","rankdir","setDefaultEdgeLabel","rootDoc","getRootDoc","renderDoc","svgWidth","useMaxWidth","getLabelWidth","fontSizeFactor","domDocument","edgeFreeDoc","stmt","setGraph","ranker","ranksep","edgeLengthFactor","nodeSep","isMultiGraph","extract","states","getStates","relations","getRelations","keys2","sub","boxBounds","compositTitleSize","noteDef","position","setNode","setParent","nodeCount","cnt","setEdge","id1","id2","labelHeight","labelpos","svgElem","v","warn","JSON","stringify","dividers","querySelectorAll","divider","parent","parentElement","pWidth","pShift","parseInt","getAttribute","setAttribute","edges","edge","w","renderer","diagram","init","cnf","clear"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}