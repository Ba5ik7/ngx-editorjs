{"version":3,"file":"default-node_modules_mermaid_dist_createText-1f5f8f92_js.js","mappings":"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","sources":["./node_modules/@khanacademy/simple-markdown/dist/es/index.js","./node_modules/mermaid/dist/createText-1f5f8f92.js"],"sourcesContent":["/* eslint-disable prefer-spread, no-regex-spaces, no-unused-vars, guard-for-in, no-console, no-var */\n\n/**\n * Simple-Markdown\n * ===============\n *\n * Simple-Markdown's primary goal is to be easy to adapt. It aims\n * to be compliant with John Gruber's [Markdown Syntax page][1],\n * but compatiblity with other markdown implementations' edge-cases\n * will be sacrificed where it conflicts with simplicity or\n * extensibility.\n *\n * If your goal is to simply embed a standard markdown implementation\n * in your website, simple-markdown is probably not the best library\n * for you (although it should work). But if you have struggled to\n * customize an existing library to meet your needs, simple-markdown\n * might be able to help.\n *\n * Many of the regexes and original logic has been adapted from\n * the wonderful [marked.js](https://github.com/chjj/marked)\n */\n// Flow Type Definitions:\n// We want to clarify our defaultRules types a little bit more so clients can\n// reuse defaultRules built-ins. So we make some stronger guarantess when\n// we can:\n// End Flow Definitions\nvar CR_NEWLINE_R = /\\r\\n?/g;\nvar TAB_R = /\\t/g;\nvar FORMFEED_R = /\\f/g;\n/**\n * Turn various whitespace into easy-to-process whitespace\n */\n\nvar preprocess = function preprocess(source) {\n  return source.replace(CR_NEWLINE_R, \"\\n\").replace(FORMFEED_R, \"\").replace(TAB_R, \"    \");\n};\n\nvar populateInitialState = function populateInitialState(givenState, defaultState) {\n  var state = givenState || {};\n\n  if (defaultState != null) {\n    for (var prop in defaultState) {\n      // $FlowFixMe\n      if (Object.prototype.hasOwnProperty.call(defaultState, prop)) {\n        state[prop] = defaultState[prop];\n      }\n    }\n  }\n\n  return state;\n};\n/**\n * Creates a parser for a given set of rules, with the precedence\n * specified as a list of rules.\n *\n * @param {SimpleMarkdown.ParserRules} rules\n *     an object containing\n *     rule type -> {match, order, parse} objects\n *     (lower order is higher precedence)\n * @param {SimpleMarkdown.OptionalState} [defaultState]\n *\n * @returns {SimpleMarkdown.Parser}\n *     The resulting parse function, with the following parameters:\n *     @source: the input source string to be parsed\n *     @state: an optional object to be threaded through parse\n *         calls. Allows clients to add stateful operations to\n *         parsing, such as keeping track of how many levels deep\n *         some nesting is. For an example use-case, see passage-ref\n *         parsing in src/widgets/passage/passage-markdown.jsx\n */\n\n\nvar parserFor = function parserFor(rules, defaultState) {\n  // Sorts rules in order of increasing order, then\n  // ascending rule name in case of ties.\n  var ruleList = Object.keys(rules).filter(function (type) {\n    var rule = rules[type];\n\n    if (rule == null || rule.match == null) {\n      return false;\n    }\n\n    var order = rule.order;\n\n    if ((typeof order !== \"number\" || !isFinite(order)) && typeof console !== \"undefined\") {\n      console.warn(\"simple-markdown: Invalid order for rule `\" + type + \"`: \" + String(order));\n    }\n\n    return true;\n  });\n  ruleList.sort(function (typeA, typeB) {\n    var ruleA = rules[typeA];\n    var ruleB = rules[typeB];\n    var orderA = ruleA.order;\n    var orderB = ruleB.order; // First sort based on increasing order\n\n    if (orderA !== orderB) {\n      return orderA - orderB;\n    }\n\n    var secondaryOrderA = ruleA.quality ? 0 : 1;\n    var secondaryOrderB = ruleB.quality ? 0 : 1;\n\n    if (secondaryOrderA !== secondaryOrderB) {\n      return secondaryOrderA - secondaryOrderB; // Then based on increasing unicode lexicographic ordering\n    } else if (typeA < typeB) {\n      return -1;\n    } else if (typeA > typeB) {\n      return 1;\n    } else {\n      // Rules should never have the same name,\n      // but this is provided for completeness.\n      return 0;\n    }\n  });\n  var latestState;\n\n  var nestedParse = function nestedParse(source, state) {\n    var result = [];\n    state = state || latestState;\n    latestState = state;\n\n    while (source) {\n      // store the best match, it's rule, and quality:\n      var ruleType = null;\n      var rule = null;\n      var capture = null;\n      var quality = NaN; // loop control variables:\n\n      var i = 0;\n      var currRuleType = ruleList[0]; // $FlowFixMe\n\n      var currRule = rules[currRuleType];\n\n      do {\n        var currOrder = currRule.order;\n        var prevCaptureStr = state.prevCapture == null ? \"\" : state.prevCapture[0];\n        var currCapture = currRule.match(source, state, prevCaptureStr);\n\n        if (currCapture) {\n          var currQuality = currRule.quality ? currRule.quality(currCapture, state, prevCaptureStr) : 0; // This should always be true the first time because\n          // the initial quality is NaN (that's why there's the\n          // condition negation).\n\n          if (!(currQuality <= quality)) {\n            ruleType = currRuleType;\n            rule = currRule;\n            capture = currCapture;\n            quality = currQuality;\n          }\n        } // Move on to the next item.\n        // Note that this makes `currRule` be the next item\n\n\n        i++;\n        currRuleType = ruleList[i]; // $FlowFixMe\n\n        currRule = rules[currRuleType];\n      } while ( // keep looping while we're still within the ruleList\n      currRule && ( // if we don't have a match yet, continue\n      !capture || // or if we have a match, but the next rule is\n      // at the same order, and has a quality measurement\n      // functions, then this rule must have a quality\n      // measurement function (since they are sorted before\n      // those without), and we need to check if there is\n      // a better quality match\n      currRule.order === currOrder && currRule.quality)); // TODO(aria): Write tests for these\n\n\n      if (rule == null || capture == null) {\n        throw new Error(\"Could not find a matching rule for the below \" + \"content. The rule with highest `order` should \" + \"always match content provided to it. Check \" + \"the definition of `match` for '\" + ruleList[ruleList.length - 1] + \"'. It seems to not match the following source:\\n\" + source);\n      }\n\n      if (capture.index) {\n        // If present and non-zero, i.e. a non-^ regexp result:\n        throw new Error(\"`match` must return a capture starting at index 0 \" + \"(the current parse index). Did you forget a ^ at the \" + \"start of the RegExp?\");\n      }\n\n      var parsed = rule.parse(capture, nestedParse, state); // We maintain the same object here so that rules can\n      // store references to the objects they return and\n      // modify them later. (oops sorry! but this adds a lot\n      // of power--see reflinks.)\n\n      if (Array.isArray(parsed)) {\n        // $FlowFixMe\n        Array.prototype.push.apply(result, parsed);\n      } else {\n        if (parsed == null || typeof parsed !== \"object\") {\n          throw new Error(\"parse() function returned invalid parse result: '\".concat(parsed, \"'\"));\n        } // We also let rules override the default type of\n        // their parsed node if they would like to, so that\n        // there can be a single output function for all links,\n        // even if there are several rules to parse them.\n\n\n        if (parsed.type == null) {\n          // $FlowFixMe\n          parsed.type = ruleType;\n        }\n\n        result.push(parsed);\n      }\n\n      state.prevCapture = capture;\n      source = source.substring(state.prevCapture[0].length);\n    } // $FlowFixMe\n\n\n    return result;\n  };\n\n  var outerParse = function outerParse(source, state) {\n    latestState = populateInitialState(state, defaultState);\n\n    if (!latestState.inline && !latestState.disableAutoBlockNewlines) {\n      source = source + \"\\n\\n\";\n    } // We store the previous capture so that match functions can\n    // use some limited amount of lookbehind. Lists use this to\n    // ensure they don't match arbitrary '- ' or '* ' in inline\n    // text (see the list rule for more information). This stores\n    // the full regex capture object, if there is one.\n\n\n    latestState.prevCapture = null;\n    return nestedParse(preprocess(source), latestState);\n  }; // $FlowFixMe\n\n\n  return outerParse;\n}; // Creates a match function for an inline scoped element from a regex\n\n\nvar inlineRegex = function inlineRegex(regex) {\n  var match = function match(source, state, prevCapture) {\n    if (state.inline) {\n      // $FlowFixMe\n      return regex.exec(source);\n    } else {\n      return null;\n    }\n  };\n\n  match.regex = regex;\n  return match;\n}; // Creates a match function for a block scoped element from a regex\n\n\nvar blockRegex = function blockRegex(regex) {\n  // $FlowFixMe\n  var match = function match(source, state) {\n    if (state.inline) {\n      return null;\n    } else {\n      return regex.exec(source);\n    }\n  };\n\n  match.regex = regex;\n  return match;\n}; // Creates a match function from a regex, ignoring block/inline scope\n\n\nvar anyScopeRegex = function anyScopeRegex(regex) {\n  // $FlowFixMe\n  var match = function match(source, state) {\n    return regex.exec(source);\n  };\n\n  match.regex = regex;\n  return match;\n};\n\nvar TYPE_SYMBOL = typeof Symbol === \"function\" && Symbol.for && Symbol.for(\"react.element\") || 0xeac7;\n\nvar reactElement = function reactElement(type, key, props) {\n  var element = {\n    $$typeof: TYPE_SYMBOL,\n    type: type,\n    key: key == null ? undefined : key,\n    ref: null,\n    props: props,\n    _owner: null\n  };\n  return element;\n};\n/** Returns a closed HTML tag.\n * @param {string} tagName - Name of HTML tag (eg. \"em\" or \"a\")\n * @param {string} content - Inner content of tag\n * @param {{ [attr: string]: SimpleMarkdown.Attr }} [attributes] - Optional extra attributes of tag as an object of key-value pairs\n *   eg. { \"href\": \"http://google.com\" }. Falsey attributes are filtered out.\n * @param {boolean} [isClosed] - boolean that controls whether tag is closed or not (eg. img tags).\n *   defaults to true\n */\n\n\nvar htmlTag = function htmlTag(tagName, content, attributes, isClosed) {\n  attributes = attributes || {};\n  isClosed = typeof isClosed !== \"undefined\" ? isClosed : true;\n  var attributeString = \"\";\n\n  for (var attr in attributes) {\n    var attribute = attributes[attr]; // Removes falsey attributes\n\n    if ( // $FlowFixMe\n    Object.prototype.hasOwnProperty.call(attributes, attr) && attribute) {\n      attributeString += \" \" + sanitizeText(attr) + '=\"' + sanitizeText(attribute) + '\"';\n    }\n  }\n\n  var unclosedTag = \"<\" + tagName + attributeString + \">\";\n\n  if (isClosed) {\n    return unclosedTag + content + \"</\" + tagName + \">\";\n  } else {\n    return unclosedTag;\n  }\n};\n\nvar EMPTY_PROPS = {};\n/**\n * @param {string | null | undefined} url - url to sanitize\n * @returns {string | null} - url if safe, or null if a safe url could not be made\n */\n\nvar sanitizeUrl = function sanitizeUrl(url) {\n  if (url == null) {\n    return null;\n  }\n\n  try {\n    var prot = new URL(url, \"https://localhost\").protocol;\n\n    if (prot.indexOf(\"javascript:\") === 0 || prot.indexOf(\"vbscript:\") === 0 || prot.indexOf(\"data:\") === 0) {\n      return null;\n    }\n  } catch (e) {\n    // invalid URLs should throw a TypeError\n    // see for instance: `new URL(\"\");`\n    return null;\n  }\n\n  return url;\n};\n\nvar SANITIZE_TEXT_R = /[<>&\"']/g;\nvar SANITIZE_TEXT_CODES = {\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  \"&\": \"&amp;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#x27;\",\n  \"/\": \"&#x2F;\",\n  \"`\": \"&#96;\"\n};\n\nvar sanitizeText = function sanitizeText(text) {\n  return String(text).replace(SANITIZE_TEXT_R, function (chr) {\n    return SANITIZE_TEXT_CODES[chr];\n  });\n};\n\nvar UNESCAPE_URL_R = /\\\\([^0-9A-Za-z\\s])/g;\n\nvar unescapeUrl = function unescapeUrl(rawUrlString) {\n  return rawUrlString.replace(UNESCAPE_URL_R, \"$1\");\n};\n/**\n * Parse some content with the parser `parse`, with state.inline\n * set to true. Useful for block elements; not generally necessary\n * to be used by inline elements (where state.inline is already true.\n */\n\n\nvar parseInline = function parseInline(parse, content, state) {\n  var isCurrentlyInline = state.inline || false;\n  state.inline = true;\n  var result = parse(content, state);\n  state.inline = isCurrentlyInline;\n  return result;\n};\n\nvar parseBlock = function parseBlock(parse, content, state) {\n  var isCurrentlyInline = state.inline || false;\n  state.inline = false;\n  var result = parse(content + \"\\n\\n\", state);\n  state.inline = isCurrentlyInline;\n  return result;\n};\n\nvar parseCaptureInline = function parseCaptureInline(capture, parse, state) {\n  return {\n    content: parseInline(parse, capture[1], state)\n  };\n};\n\nvar ignoreCapture = function ignoreCapture() {\n  return {};\n}; // recognize a `*` `-`, `+`, `1.`, `2.`... list bullet\n\n\nvar LIST_BULLET = \"(?:[*+-]|\\\\d+\\\\.)\"; // recognize the start of a list item:\n// leading space plus a bullet plus a space (`   * `)\n\nvar LIST_ITEM_PREFIX = \"( *)(\" + LIST_BULLET + \") +\";\nvar LIST_ITEM_PREFIX_R = new RegExp(\"^\" + LIST_ITEM_PREFIX); // recognize an individual list item:\n//  * hi\n//    this is part of the same item\n//\n//    as is this, which is a new paragraph in the same item\n//\n//  * but this is not part of the same item\n\nvar LIST_ITEM_R = new RegExp(LIST_ITEM_PREFIX + \"[^\\\\n]*(?:\\\\n\" + \"(?!\\\\1\" + LIST_BULLET + \" )[^\\\\n]*)*(\\n|$)\", \"gm\");\nvar BLOCK_END_R = /\\n{2,}$/;\nvar INLINE_CODE_ESCAPE_BACKTICKS_R = /^ (?= *`)|(` *) $/g; // recognize the end of a paragraph block inside a list item:\n// two or more newlines at end end of the item\n\nvar LIST_BLOCK_END_R = BLOCK_END_R;\nvar LIST_ITEM_END_R = / *\\n+$/; // check whether a list item has paragraphs: if it does,\n// we leave the newlines at the end\n\nvar LIST_R = new RegExp(\"^( *)(\" + LIST_BULLET + \") \" + \"[\\\\s\\\\S]+?(?:\\n{2,}(?! )\" + \"(?!\\\\1\" + LIST_BULLET + \" )\\\\n*\" + // the \\\\s*$ here is so that we can parse the inside of nested\n// lists, where our content might end before we receive two `\\n`s\n\"|\\\\s*\\n*$)\");\nvar LIST_LOOKBEHIND_R = /(?:^|\\n)( *)$/;\n\nvar TABLES = function () {\n  var TABLE_ROW_SEPARATOR_TRIM = /^ *\\| *| *\\| *$/g;\n  var TABLE_CELL_END_TRIM = / *$/;\n  var TABLE_RIGHT_ALIGN = /^ *-+: *$/;\n  var TABLE_CENTER_ALIGN = /^ *:-+: *$/;\n  var TABLE_LEFT_ALIGN = /^ *:-+ *$/; // TODO: This needs a real type\n\n  var parseTableAlignCapture = function parseTableAlignCapture(alignCapture) {\n    if (TABLE_RIGHT_ALIGN.test(alignCapture)) {\n      return \"right\";\n    } else if (TABLE_CENTER_ALIGN.test(alignCapture)) {\n      return \"center\";\n    } else if (TABLE_LEFT_ALIGN.test(alignCapture)) {\n      return \"left\";\n    } else {\n      return null;\n    }\n  };\n\n  var parseTableAlign = function parseTableAlign(source, parse, state, trimEndSeparators) {\n    if (trimEndSeparators) {\n      source = source.replace(TABLE_ROW_SEPARATOR_TRIM, \"\");\n    }\n\n    var alignText = source.trim().split(\"|\");\n    return alignText.map(parseTableAlignCapture);\n  };\n\n  var parseTableRow = function parseTableRow(source, parse, state, trimEndSeparators) {\n    var prevInTable = state.inTable;\n    state.inTable = true;\n    var tableRow = parse(source.trim(), state);\n    state.inTable = prevInTable;\n    var cells = [[]];\n    tableRow.forEach(function (node, i) {\n      if (node.type === \"tableSeparator\") {\n        // Filter out empty table separators at the start/end:\n        if (!trimEndSeparators || i !== 0 && i !== tableRow.length - 1) {\n          // Split the current row:\n          cells.push([]);\n        }\n      } else {\n        if (node.type === \"text\" && (tableRow[i + 1] == null || tableRow[i + 1].type === \"tableSeparator\")) {\n          node.content = node.content.replace(TABLE_CELL_END_TRIM, \"\");\n        }\n\n        cells[cells.length - 1].push(node);\n      }\n    });\n    return cells;\n  };\n  /**\n   * @param {string} source\n   * @param {SimpleMarkdown.Parser} parse\n   * @param {SimpleMarkdown.State} state\n   * @param {boolean} trimEndSeparators\n   * @returns {SimpleMarkdown.ASTNode[][]}\n   */\n\n\n  var parseTableCells = function parseTableCells(source, parse, state, trimEndSeparators) {\n    var rowsText = source.trim().split(\"\\n\");\n    return rowsText.map(function (rowText) {\n      // $FlowFixMe\n      return parseTableRow(rowText, parse, state, trimEndSeparators);\n    });\n  };\n  /**\n   * @param {boolean} trimEndSeparators\n   * @returns {SimpleMarkdown.SingleNodeParseFunction}\n   */\n\n\n  var parseTable = function parseTable(trimEndSeparators) {\n    return function (capture, parse, state) {\n      state.inline = true;\n      var header = parseTableRow(capture[1], parse, state, trimEndSeparators);\n      var align = parseTableAlign(capture[2], parse, state, trimEndSeparators);\n      var cells = parseTableCells(capture[3], parse, state, trimEndSeparators);\n      state.inline = false;\n      return {\n        type: \"table\",\n        header: header,\n        align: align,\n        cells: cells\n      };\n    };\n  };\n\n  return {\n    parseTable: parseTable(true),\n    parseNpTable: parseTable(false),\n    TABLE_REGEX: /^ *(\\|.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/,\n    NPTABLE_REGEX: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/\n  };\n}();\n\nvar LINK_INSIDE = \"(?:\\\\[[^\\\\]]*\\\\]|[^\\\\[\\\\]]|\\\\](?=[^\\\\[]*\\\\]))*\";\nvar LINK_HREF_AND_TITLE = \"\\\\s*<?((?:\\\\([^)]*\\\\)|[^\\\\s\\\\\\\\]|\\\\\\\\.)*?)>?(?:\\\\s+['\\\"]([\\\\s\\\\S]*?)['\\\"])?\\\\s*\";\nvar AUTOLINK_MAILTO_CHECK_R = /mailto:/i;\n\nvar parseRef = function parseRef(capture, state, refNode) {\n  var ref = (capture[2] || capture[1]).replace(/\\s+/g, \" \").toLowerCase(); // We store information about previously seen defs on\n  // state._defs (_ to deconflict with client-defined\n  // state). If the def for this reflink/refimage has\n  // already been seen, we can use its target/source\n  // and title here:\n\n  if (state._defs && state._defs[ref]) {\n    var def = state._defs[ref]; // `refNode` can be a link or an image. Both use\n    // target and title properties.\n\n    refNode.target = def.target;\n    refNode.title = def.title;\n  } // In case we haven't seen our def yet (or if someone\n  // overwrites that def later on), we add this node\n  // to the list of ref nodes for that def. Then, when\n  // we find the def, we can modify this link/image AST\n  // node :).\n  // I'm sorry.\n\n\n  state._refs = state._refs || {};\n  state._refs[ref] = state._refs[ref] || [];\n\n  state._refs[ref].push(refNode);\n\n  return refNode;\n};\n\nvar currOrder = 0;\nvar defaultRules = {\n  Array: {\n    react: function react(arr, output, state) {\n      var oldKey = state.key;\n      var result = []; // map output over the ast, except group any text\n      // nodes together into a single string output.\n\n      for (var i = 0, key = 0; i < arr.length; i++, key++) {\n        // `key` is our numerical `state.key`, which we increment for\n        // every output node, but don't change for joined text nodes.\n        // (i, however, must change for joined text nodes)\n        state.key = \"\" + i;\n        var node = arr[i];\n\n        if (node.type === \"text\") {\n          node = {\n            type: \"text\",\n            content: node.content\n          };\n\n          for (; i + 1 < arr.length && arr[i + 1].type === \"text\"; i++) {\n            node.content += arr[i + 1].content;\n          }\n        }\n\n        result.push(output(node, state));\n      }\n\n      state.key = oldKey;\n      return result;\n    },\n    html: function html(arr, output, state) {\n      var result = \"\"; // map output over the ast, except group any text\n      // nodes together into a single string output.\n\n      for (var i = 0; i < arr.length; i++) {\n        var node = arr[i];\n\n        if (node.type === \"text\") {\n          node = {\n            type: \"text\",\n            content: node.content\n          };\n\n          for (; i + 1 < arr.length && arr[i + 1].type === \"text\"; i++) {\n            node.content += arr[i + 1].content;\n          }\n        }\n\n        result += output(node, state);\n      }\n\n      return result;\n    }\n  },\n  heading: {\n    order: currOrder++,\n    match: blockRegex(/^ *(#{1,6})([^\\n]+?)#* *(?:\\n *)+\\n/),\n    parse: function (_parse) {\n      function parse(_x, _x2, _x3) {\n        return _parse.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      return {\n        level: capture[1].length,\n        content: parseInline(parse, capture[2].trim(), state)\n      };\n    }),\n    react: function react(node, output, state) {\n      return reactElement(\"h\" + node.level, state.key, {\n        children: output(node.content, state)\n      });\n    },\n    html: function html(node, output, state) {\n      return htmlTag(\"h\" + node.level, output(node.content, state));\n    }\n  },\n  nptable: {\n    order: currOrder++,\n    match: blockRegex(TABLES.NPTABLE_REGEX),\n    parse: TABLES.parseNpTable,\n    react: null,\n    html: null\n  },\n  lheading: {\n    order: currOrder++,\n    match: blockRegex(/^([^\\n]+)\\n *(=|-){3,} *(?:\\n *)+\\n/),\n    parse: function (_parse2) {\n      function parse(_x4, _x5, _x6) {\n        return _parse2.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse2.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      return {\n        type: \"heading\",\n        level: capture[2] === \"=\" ? 1 : 2,\n        content: parseInline(parse, capture[1], state)\n      };\n    }),\n    react: null,\n    html: null\n  },\n  hr: {\n    order: currOrder++,\n    match: blockRegex(/^( *[-*_]){3,} *(?:\\n *)+\\n/),\n    parse: ignoreCapture,\n    react: function react(node, output, state) {\n      return reactElement(\"hr\", state.key, EMPTY_PROPS);\n    },\n    html: function html(node, output, state) {\n      return \"<hr>\";\n    }\n  },\n  codeBlock: {\n    order: currOrder++,\n    match: blockRegex(/^(?:    [^\\n]+\\n*)+(?:\\n *)+\\n/),\n    parse: function (_parse3) {\n      function parse(_x7, _x8, _x9) {\n        return _parse3.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse3.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      var content = capture[0].replace(/^    /gm, \"\").replace(/\\n+$/, \"\");\n      return {\n        lang: undefined,\n        content: content\n      };\n    }),\n    react: function react(node, output, state) {\n      var className = node.lang ? \"markdown-code-\" + node.lang : undefined;\n      return reactElement(\"pre\", state.key, {\n        children: reactElement(\"code\", null, {\n          className: className,\n          children: node.content\n        })\n      });\n    },\n    html: function html(node, output, state) {\n      var className = node.lang ? \"markdown-code-\" + node.lang : undefined;\n      var codeBlock = htmlTag(\"code\", sanitizeText(node.content), {\n        class: className\n      });\n      return htmlTag(\"pre\", codeBlock);\n    }\n  },\n  fence: {\n    order: currOrder++,\n    match: blockRegex(/^ *(`{3,}|~{3,}) *(?:(\\S+) *)?\\n([\\s\\S]+?)\\n?\\1 *(?:\\n *)+\\n/),\n    parse: function (_parse4) {\n      function parse(_x10, _x11, _x12) {\n        return _parse4.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse4.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      return {\n        type: \"codeBlock\",\n        lang: capture[2] || undefined,\n        content: capture[3]\n      };\n    }),\n    react: null,\n    html: null\n  },\n  blockQuote: {\n    order: currOrder++,\n    match: blockRegex(/^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+\\n{2,}/),\n    parse: function (_parse5) {\n      function parse(_x13, _x14, _x15) {\n        return _parse5.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse5.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      var content = capture[0].replace(/^ *> ?/gm, \"\");\n      return {\n        content: parse(content, state)\n      };\n    }),\n    react: function react(node, output, state) {\n      return reactElement(\"blockquote\", state.key, {\n        children: output(node.content, state)\n      });\n    },\n    html: function html(node, output, state) {\n      return htmlTag(\"blockquote\", output(node.content, state));\n    }\n  },\n  list: {\n    order: currOrder++,\n    // $FlowFixMe\n    match: function match(source, state) {\n      // We only want to break into a list if we are at the start of a\n      // line. This is to avoid parsing \"hi * there\" with \"* there\"\n      // becoming a part of a list.\n      // You might wonder, \"but that's inline, so of course it wouldn't\n      // start a list?\". You would be correct! Except that some of our\n      // lists can be inline, because they might be inside another list,\n      // in which case we can parse with inline scope, but need to allow\n      // nested lists inside this inline scope.\n      var prevCaptureStr = state.prevCapture == null ? \"\" : state.prevCapture[0];\n      var isStartOfLineCapture = LIST_LOOKBEHIND_R.exec(prevCaptureStr);\n      var isListBlock = state._list || !state.inline;\n\n      if (isStartOfLineCapture && isListBlock) {\n        source = isStartOfLineCapture[1] + source;\n        return LIST_R.exec(source);\n      } else {\n        return null;\n      }\n    },\n    parse: function (_parse6) {\n      function parse(_x16, _x17, _x18) {\n        return _parse6.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse6.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      var bullet = capture[2];\n      var ordered = bullet.length > 1;\n      var start = ordered ? +bullet : undefined;\n      var items = capture[0].replace(LIST_BLOCK_END_R, \"\\n\").match(LIST_ITEM_R); // We know this will match here, because of how the regexes are\n      // defined\n\n      var lastItemWasAParagraph = false;\n      var itemContent = items.map(function (item, i) {\n        // We need to see how far indented this item is:\n        var prefixCapture = LIST_ITEM_PREFIX_R.exec(item);\n        var space = prefixCapture ? prefixCapture[0].length : 0; // And then we construct a regex to \"unindent\" the subsequent\n        // lines of the items by that amount:\n\n        var spaceRegex = new RegExp(\"^ {1,\" + space + \"}\", \"gm\"); // Before processing the item, we need a couple things\n\n        var content = item // remove indents on trailing lines:\n        .replace(spaceRegex, \"\") // remove the bullet:\n        .replace(LIST_ITEM_PREFIX_R, \"\"); // I'm not sur4 why this is necessary again?\n        // Handling \"loose\" lists, like:\n        //\n        //  * this is wrapped in a paragraph\n        //\n        //  * as is this\n        //\n        //  * as is this\n\n        var isLastItem = i === items.length - 1;\n        var containsBlocks = content.indexOf(\"\\n\\n\") !== -1; // Any element in a list is a block if it contains multiple\n        // newlines. The last element in the list can also be a block\n        // if the previous item in the list was a block (this is\n        // because non-last items in the list can end with \\n\\n, but\n        // the last item can't, so we just \"inherit\" this property\n        // from our previous element).\n\n        var thisItemIsAParagraph = containsBlocks || isLastItem && lastItemWasAParagraph;\n        lastItemWasAParagraph = thisItemIsAParagraph; // backup our state for restoration afterwards. We're going to\n        // want to set state._list to true, and state.inline depending\n        // on our list's looseness.\n\n        var oldStateInline = state.inline;\n        var oldStateList = state._list;\n        state._list = true; // Parse inline if we're in a tight list, or block if we're in\n        // a loose list.\n\n        var adjustedContent;\n\n        if (thisItemIsAParagraph) {\n          state.inline = false;\n          adjustedContent = content.replace(LIST_ITEM_END_R, \"\\n\\n\");\n        } else {\n          state.inline = true;\n          adjustedContent = content.replace(LIST_ITEM_END_R, \"\");\n        }\n\n        var result = parse(adjustedContent, state); // Restore our state before returning\n\n        state.inline = oldStateInline;\n        state._list = oldStateList;\n        return result;\n      });\n      return {\n        ordered: ordered,\n        start: start,\n        items: itemContent\n      };\n    }),\n    react: function react(node, output, state) {\n      var ListWrapper = node.ordered ? \"ol\" : \"ul\";\n      return reactElement(ListWrapper, state.key, {\n        start: node.start,\n        children: node.items.map(function (item, i) {\n          return reactElement(\"li\", \"\" + i, {\n            children: output(item, state)\n          });\n        })\n      });\n    },\n    html: function html(node, output, state) {\n      var listItems = node.items.map(function (item) {\n        return htmlTag(\"li\", output(item, state));\n      }).join(\"\");\n      var listTag = node.ordered ? \"ol\" : \"ul\";\n      var attributes = {\n        start: node.start\n      };\n      return htmlTag(listTag, listItems, attributes);\n    }\n  },\n  def: {\n    order: currOrder++,\n    // TODO(aria): This will match without a blank line before the next\n    // block element, which is inconsistent with most of the rest of\n    // simple-markdown.\n    match: blockRegex(/^ *\\[([^\\]]+)\\]: *<?([^\\s>]*)>?(?: +[\"(]([^\\n]+)[\")])? *\\n(?: *\\n)*/),\n    parse: function (_parse7) {\n      function parse(_x19, _x20, _x21) {\n        return _parse7.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse7.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      var def = capture[1].replace(/\\s+/g, \" \").toLowerCase();\n      var target = capture[2];\n      var title = capture[3]; // Look for previous links/images using this def\n      // If any links/images using this def have already been declared,\n      // they will have added themselves to the state._refs[def] list\n      // (_ to deconflict with client-defined state). We look through\n      // that list of reflinks for this def, and modify those AST nodes\n      // with our newly found information now.\n      // Sorry :(.\n\n      if (state._refs && state._refs[def]) {\n        // `refNode` can be a link or an image\n        state._refs[def].forEach(function (refNode) {\n          refNode.target = target;\n          refNode.title = title;\n        });\n      } // Add this def to our map of defs for any future links/images\n      // In case we haven't found any or all of the refs referring to\n      // this def yet, we add our def to the table of known defs, so\n      // that future reflinks can modify themselves appropriately with\n      // this information.\n\n\n      state._defs = state._defs || {};\n      state._defs[def] = {\n        target: target,\n        title: title\n      }; // return the relevant parsed information\n      // for debugging only.\n\n      return {\n        def: def,\n        target: target,\n        title: title\n      };\n    }),\n    react: function react() {\n      return null;\n    },\n    html: function html() {\n      return \"\";\n    }\n  },\n  table: {\n    order: currOrder++,\n    match: blockRegex(TABLES.TABLE_REGEX),\n    parse: TABLES.parseTable,\n    react: function react(node, output, state) {\n      var getStyle = function getStyle(colIndex) {\n        return node.align[colIndex] == null ? {} : {\n          textAlign: node.align[colIndex]\n        };\n      };\n\n      var headers = node.header.map(function (content, i) {\n        return reactElement(\"th\", \"\" + i, {\n          style: getStyle(i),\n          scope: \"col\",\n          children: output(content, state)\n        });\n      });\n      var rows = node.cells.map(function (row, r) {\n        return reactElement(\"tr\", \"\" + r, {\n          children: row.map(function (content, c) {\n            return reactElement(\"td\", \"\" + c, {\n              style: getStyle(c),\n              children: output(content, state)\n            });\n          })\n        });\n      });\n      return reactElement(\"table\", state.key, {\n        children: [reactElement(\"thead\", \"thead\", {\n          children: reactElement(\"tr\", null, {\n            children: headers\n          })\n        }), reactElement(\"tbody\", \"tbody\", {\n          children: rows\n        })]\n      });\n    },\n    html: function html(node, output, state) {\n      var getStyle = function getStyle(colIndex) {\n        return node.align[colIndex] == null ? \"\" : \"text-align:\" + node.align[colIndex] + \";\";\n      };\n\n      var headers = node.header.map(function (content, i) {\n        return htmlTag(\"th\", output(content, state), {\n          style: getStyle(i),\n          scope: \"col\"\n        });\n      }).join(\"\");\n      var rows = node.cells.map(function (row) {\n        var cols = row.map(function (content, c) {\n          return htmlTag(\"td\", output(content, state), {\n            style: getStyle(c)\n          });\n        }).join(\"\");\n        return htmlTag(\"tr\", cols);\n      }).join(\"\");\n      var thead = htmlTag(\"thead\", htmlTag(\"tr\", headers));\n      var tbody = htmlTag(\"tbody\", rows);\n      return htmlTag(\"table\", thead + tbody);\n    }\n  },\n  newline: {\n    order: currOrder++,\n    match: blockRegex(/^(?:\\n *)*\\n/),\n    parse: ignoreCapture,\n    react: function react(node, output, state) {\n      return \"\\n\";\n    },\n    html: function html(node, output, state) {\n      return \"\\n\";\n    }\n  },\n  paragraph: {\n    order: currOrder++,\n    match: blockRegex(/^((?:[^\\n]|\\n(?! *\\n))+)(?:\\n *)+\\n/),\n    parse: parseCaptureInline,\n    react: function react(node, output, state) {\n      return reactElement(\"div\", state.key, {\n        className: \"paragraph\",\n        children: output(node.content, state)\n      });\n    },\n    html: function html(node, output, state) {\n      var attributes = {\n        class: \"paragraph\"\n      };\n      return htmlTag(\"div\", output(node.content, state), attributes);\n    }\n  },\n  escape: {\n    order: currOrder++,\n    // We don't allow escaping numbers, letters, or spaces here so that\n    // backslashes used in plain text still get rendered. But allowing\n    // escaping anything else provides a very flexible escape mechanism,\n    // regardless of how this grammar is extended.\n    match: inlineRegex(/^\\\\([^0-9A-Za-z\\s])/),\n    parse: function (_parse8) {\n      function parse(_x22, _x23, _x24) {\n        return _parse8.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse8.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      return {\n        type: \"text\",\n        content: capture[1]\n      };\n    }),\n    react: null,\n    html: null\n  },\n  tableSeparator: {\n    order: currOrder++,\n    // $FlowFixMe\n    match: function match(source, state) {\n      if (!state.inTable) {\n        return null;\n      }\n\n      return /^ *\\| */.exec(source);\n    },\n    parse: function parse() {\n      return {\n        type: \"tableSeparator\"\n      };\n    },\n    // These shouldn't be reached, but in case they are, be reasonable:\n    react: function react() {\n      return \" | \";\n    },\n    html: function html() {\n      return \" &vert; \";\n    }\n  },\n  autolink: {\n    order: currOrder++,\n    match: inlineRegex(/^<([^: >]+:\\/[^ >]+)>/),\n    parse: function (_parse9) {\n      function parse(_x25, _x26, _x27) {\n        return _parse9.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse9.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      return {\n        type: \"link\",\n        content: [{\n          type: \"text\",\n          content: capture[1]\n        }],\n        target: capture[1]\n      };\n    }),\n    react: null,\n    html: null\n  },\n  mailto: {\n    order: currOrder++,\n    match: inlineRegex(/^<([^ >]+@[^ >]+)>/),\n    parse: function (_parse10) {\n      function parse(_x28, _x29, _x30) {\n        return _parse10.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse10.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      var address = capture[1];\n      var target = capture[1]; // Check for a `mailto:` already existing in the link:\n\n      if (!AUTOLINK_MAILTO_CHECK_R.test(target)) {\n        target = \"mailto:\" + target;\n      }\n\n      return {\n        type: \"link\",\n        content: [{\n          type: \"text\",\n          content: address\n        }],\n        target: target\n      };\n    }),\n    react: null,\n    html: null\n  },\n  url: {\n    order: currOrder++,\n    match: inlineRegex(/^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/),\n    parse: function (_parse11) {\n      function parse(_x31, _x32, _x33) {\n        return _parse11.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse11.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      return {\n        type: \"link\",\n        content: [{\n          type: \"text\",\n          content: capture[1]\n        }],\n        target: capture[1],\n        title: undefined\n      };\n    }),\n    react: null,\n    html: null\n  },\n  link: {\n    order: currOrder++,\n    match: inlineRegex(new RegExp(\"^\\\\[(\" + LINK_INSIDE + \")\\\\]\\\\(\" + LINK_HREF_AND_TITLE + \"\\\\)\")),\n    parse: function (_parse12) {\n      function parse(_x34, _x35, _x36) {\n        return _parse12.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse12.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      var link = {\n        content: parse(capture[1], state),\n        target: unescapeUrl(capture[2]),\n        title: capture[3]\n      };\n      return link;\n    }),\n    react: function react(node, output, state) {\n      return reactElement(\"a\", state.key, {\n        href: sanitizeUrl(node.target),\n        title: node.title,\n        children: output(node.content, state)\n      });\n    },\n    html: function html(node, output, state) {\n      var attributes = {\n        href: sanitizeUrl(node.target),\n        title: node.title\n      };\n      return htmlTag(\"a\", output(node.content, state), attributes);\n    }\n  },\n  image: {\n    order: currOrder++,\n    match: inlineRegex(new RegExp(\"^!\\\\[(\" + LINK_INSIDE + \")\\\\]\\\\(\" + LINK_HREF_AND_TITLE + \"\\\\)\")),\n    parse: function (_parse13) {\n      function parse(_x37, _x38, _x39) {\n        return _parse13.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse13.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      var image = {\n        alt: capture[1],\n        target: unescapeUrl(capture[2]),\n        title: capture[3]\n      };\n      return image;\n    }),\n    react: function react(node, output, state) {\n      return reactElement(\"img\", state.key, {\n        src: sanitizeUrl(node.target),\n        alt: node.alt,\n        title: node.title\n      });\n    },\n    html: function html(node, output, state) {\n      var attributes = {\n        src: sanitizeUrl(node.target),\n        alt: node.alt,\n        title: node.title\n      };\n      return htmlTag(\"img\", \"\", attributes, false);\n    }\n  },\n  reflink: {\n    order: currOrder++,\n    match: inlineRegex(new RegExp( // The first [part] of the link\n    \"^\\\\[(\" + LINK_INSIDE + \")\\\\]\" + // The [ref] target of the link\n    \"\\\\s*\\\\[([^\\\\]]*)\\\\]\")),\n    parse: function (_parse14) {\n      function parse(_x40, _x41, _x42) {\n        return _parse14.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse14.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      return parseRef(capture, state, {\n        type: \"link\",\n        content: parse(capture[1], state)\n      });\n    }),\n    react: null,\n    html: null\n  },\n  refimage: {\n    order: currOrder++,\n    match: inlineRegex(new RegExp( // The first [part] of the link\n    \"^!\\\\[(\" + LINK_INSIDE + \")\\\\]\" + // The [ref] target of the link\n    \"\\\\s*\\\\[([^\\\\]]*)\\\\]\")),\n    parse: function (_parse15) {\n      function parse(_x43, _x44, _x45) {\n        return _parse15.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse15.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      return parseRef(capture, state, {\n        type: \"image\",\n        alt: capture[1]\n      });\n    }),\n    react: null,\n    html: null\n  },\n  em: {\n    order: currOrder\n    /* same as strong/u */\n    ,\n    match: inlineRegex(new RegExp( // only match _s surrounding words.\n    \"^\\\\b_\" + \"((?:__|\\\\\\\\[\\\\s\\\\S]|[^\\\\\\\\_])+?)_\" + \"\\\\b\" + // Or match *s:\n    \"|\" + // Only match *s that are followed by a non-space:\n    \"^\\\\*(?=\\\\S)(\" + // Match at least one of:\n    \"(?:\" + //  - `**`: so that bolds inside italics don't close the\n    //          italics\n    \"\\\\*\\\\*|\" + //  - escape sequence: so escaped *s don't close us\n    \"\\\\\\\\[\\\\s\\\\S]|\" + //  - whitespace: followed by a non-* (we don't\n    //          want ' *' to close an italics--it might\n    //          start a list)\n    \"\\\\s+(?:\\\\\\\\[\\\\s\\\\S]|[^\\\\s\\\\*\\\\\\\\]|\\\\*\\\\*)|\" + //  - non-whitespace, non-*, non-backslash characters\n    \"[^\\\\s\\\\*\\\\\\\\]\" + \")+?\" + // followed by a non-space, non-* then *\n    \")\\\\*(?!\\\\*)\")),\n    quality: function quality(capture) {\n      // precedence by length, `em` wins ties:\n      return capture[0].length + 0.2;\n    },\n    parse: function (_parse16) {\n      function parse(_x46, _x47, _x48) {\n        return _parse16.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse16.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      return {\n        content: parse(capture[2] || capture[1], state)\n      };\n    }),\n    react: function react(node, output, state) {\n      return reactElement(\"em\", state.key, {\n        children: output(node.content, state)\n      });\n    },\n    html: function html(node, output, state) {\n      return htmlTag(\"em\", output(node.content, state));\n    }\n  },\n  strong: {\n    order: currOrder\n    /* same as em */\n    ,\n    match: inlineRegex(/^\\*\\*((?:\\\\[\\s\\S]|[^\\\\])+?)\\*\\*(?!\\*)/),\n    quality: function quality(capture) {\n      // precedence by length, wins ties vs `u`:\n      return capture[0].length + 0.1;\n    },\n    parse: parseCaptureInline,\n    react: function react(node, output, state) {\n      return reactElement(\"strong\", state.key, {\n        children: output(node.content, state)\n      });\n    },\n    html: function html(node, output, state) {\n      return htmlTag(\"strong\", output(node.content, state));\n    }\n  },\n  u: {\n    order: currOrder++\n    /* same as em&strong; increment for next rule */\n    ,\n    match: inlineRegex(/^__((?:\\\\[\\s\\S]|[^\\\\])+?)__(?!_)/),\n    quality: function quality(capture) {\n      // precedence by length, loses all ties\n      return capture[0].length;\n    },\n    parse: parseCaptureInline,\n    react: function react(node, output, state) {\n      return reactElement(\"u\", state.key, {\n        children: output(node.content, state)\n      });\n    },\n    html: function html(node, output, state) {\n      return htmlTag(\"u\", output(node.content, state));\n    }\n  },\n  del: {\n    order: currOrder++,\n    match: inlineRegex(/^~~(?=\\S)((?:\\\\[\\s\\S]|~(?!~)|[^\\s~\\\\]|\\s(?!~~))+?)~~/),\n    parse: parseCaptureInline,\n    react: function react(node, output, state) {\n      return reactElement(\"del\", state.key, {\n        children: output(node.content, state)\n      });\n    },\n    html: function html(node, output, state) {\n      return htmlTag(\"del\", output(node.content, state));\n    }\n  },\n  inlineCode: {\n    order: currOrder++,\n    match: inlineRegex(/^(`+)([\\s\\S]*?[^`])\\1(?!`)/),\n    parse: function (_parse17) {\n      function parse(_x49, _x50, _x51) {\n        return _parse17.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse17.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      return {\n        content: capture[2].replace(INLINE_CODE_ESCAPE_BACKTICKS_R, \"$1\")\n      };\n    }),\n    react: function react(node, output, state) {\n      return reactElement(\"code\", state.key, {\n        children: node.content\n      });\n    },\n    html: function html(node, output, state) {\n      return htmlTag(\"code\", sanitizeText(node.content));\n    }\n  },\n  br: {\n    order: currOrder++,\n    match: anyScopeRegex(/^ {2,}\\n/),\n    parse: ignoreCapture,\n    react: function react(node, output, state) {\n      return reactElement(\"br\", state.key, EMPTY_PROPS);\n    },\n    html: function html(node, output, state) {\n      return \"<br>\";\n    }\n  },\n  text: {\n    order: currOrder++,\n    // Here we look for anything followed by non-symbols,\n    // double newlines, or double-space-newlines\n    // We break on any symbol characters so that this grammar\n    // is easy to extend without needing to modify this regex\n    match: anyScopeRegex(/^[\\s\\S]+?(?=[^0-9A-Za-z\\s\\u00c0-\\uffff]|\\n\\n| {2,}\\n|\\w+:\\S|$)/),\n    parse: function (_parse18) {\n      function parse(_x52, _x53, _x54) {\n        return _parse18.apply(this, arguments);\n      }\n\n      parse.toString = function () {\n        return _parse18.toString();\n      };\n\n      return parse;\n    }(function (capture, parse, state) {\n      return {\n        content: capture[0]\n      };\n    }),\n    react: function react(node, output, state) {\n      return node.content;\n    },\n    html: function html(node, output, state) {\n      return sanitizeText(node.content);\n    }\n  }\n};\n/** (deprecated) */\n\nvar ruleOutput = function ruleOutput( // $FlowFixMe\nrules, property) {\n  if (!property && typeof console !== \"undefined\") {\n    console.warn(\"simple-markdown ruleOutput should take 'react' or \" + \"'html' as the second argument.\");\n  }\n\n  var nestedRuleOutput = function nestedRuleOutput(ast, outputFunc, state) {\n    return rules[ast.type][property](ast, outputFunc, state);\n  };\n\n  return nestedRuleOutput;\n};\n/** (deprecated)\n */\n\n\nvar reactFor = function reactFor(outputFunc) {\n  var nestedOutput = function nestedOutput(ast, state) {\n    state = state || {};\n\n    if (Array.isArray(ast)) {\n      var oldKey = state.key;\n      var result = []; // map nestedOutput over the ast, except group any text\n      // nodes together into a single string output.\n\n      var lastResult = null;\n\n      for (var i = 0; i < ast.length; i++) {\n        state.key = \"\" + i;\n        var nodeOut = nestedOutput(ast[i], state);\n\n        if (typeof nodeOut === \"string\" && typeof lastResult === \"string\") {\n          lastResult = lastResult + nodeOut;\n          result[result.length - 1] = lastResult;\n        } else {\n          result.push(nodeOut);\n          lastResult = nodeOut;\n        }\n      }\n\n      state.key = oldKey;\n      return result;\n    } else {\n      return outputFunc(ast, nestedOutput, state);\n    }\n  };\n\n  return nestedOutput;\n};\n/** (deprecated)\n */\n\n\nvar htmlFor = function htmlFor(outputFunc) {\n  var nestedOutput = function nestedOutput(ast, state) {\n    state = state || {};\n\n    if (Array.isArray(ast)) {\n      return ast.map(function (node) {\n        return nestedOutput(node, state);\n      }).join(\"\");\n    } else {\n      return outputFunc(ast, nestedOutput, state);\n    }\n  };\n\n  return nestedOutput;\n};\n\nvar outputFor = function outputFor(rules, property) {\n  var defaultState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!property) {\n    throw new Error(\"simple-markdown: outputFor: `property` must be \" + \"defined. \" + \"if you just upgraded, you probably need to replace `outputFor` \" + \"with `reactFor`\");\n  }\n\n  var latestState; // $FlowFixMe[incompatible-type]\n\n  var arrayRule = rules.Array || defaultRules.Array; // Tricks to convince tsc that this var is not null:\n\n  var arrayRuleCheck = arrayRule[property];\n\n  if (!arrayRuleCheck) {\n    throw new Error(\"simple-markdown: outputFor: to join nodes of type `\" + property + \"` you must provide an `Array:` joiner rule with that type, \" + \"Please see the docs for details on specifying an Array rule.\");\n  }\n\n  var arrayRuleOutput = arrayRuleCheck;\n\n  var nestedOutput = function nestedOutput(ast, state) {\n    state = state || latestState;\n    latestState = state;\n\n    if (Array.isArray(ast)) {\n      return arrayRuleOutput(ast, nestedOutput, state);\n    } else {\n      return rules[ast.type][property](ast, nestedOutput, state);\n    }\n  };\n\n  var outerOutput = function outerOutput(ast, state) {\n    latestState = populateInitialState(state, defaultState);\n    return nestedOutput(ast, latestState);\n  };\n\n  return outerOutput;\n}; // $FlowFixMe[incompatible-call]\n\n\nvar defaultRawParse = parserFor(defaultRules);\n\nvar defaultBlockParse = function defaultBlockParse(source, state) {\n  state = state || {};\n  state.inline = false;\n  return defaultRawParse(source, state);\n};\n\nvar defaultInlineParse = function defaultInlineParse(source, state) {\n  state = state || {};\n  state.inline = true;\n  return defaultRawParse(source, state);\n};\n\nvar defaultImplicitParse = function defaultImplicitParse(source, state) {\n  var isBlock = BLOCK_END_R.test(source);\n  state = state || {};\n  state.inline = !isBlock;\n  return defaultRawParse(source, state);\n}; // $FlowFixMe[incompatible-call]\n\n\nvar defaultReactOutput = outputFor(defaultRules, \"react\"); // $FlowFixMe[incompatible-call]\n\nvar defaultHtmlOutput = outputFor(defaultRules, \"html\");\n\nvar markdownToReact = function markdownToReact(source, state) {\n  return defaultReactOutput(defaultBlockParse(source, state), state);\n};\n\nvar markdownToHtml = function markdownToHtml(source, state) {\n  return defaultHtmlOutput(defaultBlockParse(source, state), state);\n}; // TODO: This needs definition\n\n\nvar ReactMarkdown = function ReactMarkdown(props) {\n  var divProps = {};\n\n  for (var prop in props) {\n    if (prop !== \"source\" && // $FlowFixMe\n    Object.prototype.hasOwnProperty.call(props, prop)) {\n      divProps[prop] = props[prop];\n    }\n  }\n\n  divProps.children = markdownToReact(props.source);\n  return reactElement(\"div\", null, divProps);\n};\n\n// $FlowFixMe\nvar SimpleMarkdown = {\n  defaultRules: defaultRules,\n  parserFor: parserFor,\n  outputFor: outputFor,\n  inlineRegex: inlineRegex,\n  blockRegex: blockRegex,\n  anyScopeRegex: anyScopeRegex,\n  parseInline: parseInline,\n  parseBlock: parseBlock,\n  // default wrappers:\n  markdownToReact: markdownToReact,\n  markdownToHtml: markdownToHtml,\n  ReactMarkdown: ReactMarkdown,\n  defaultBlockParse: defaultBlockParse,\n  defaultInlineParse: defaultInlineParse,\n  defaultImplicitParse: defaultImplicitParse,\n  defaultReactOutput: defaultReactOutput,\n  defaultHtmlOutput: defaultHtmlOutput,\n  preprocess: preprocess,\n  sanitizeText: sanitizeText,\n  sanitizeUrl: sanitizeUrl,\n  unescapeUrl: unescapeUrl,\n  htmlTag: htmlTag,\n  reactElement: reactElement,\n  // deprecated:\n  defaultRawParse: defaultRawParse,\n  ruleOutput: ruleOutput,\n  reactFor: reactFor,\n  htmlFor: htmlFor,\n  defaultParse: function defaultParse() {\n    if (typeof console !== \"undefined\") {\n      console.warn(\"defaultParse is deprecated, please use `defaultImplicitParse`\");\n    }\n\n    return defaultImplicitParse.apply(null, arguments);\n  },\n  defaultOutput: function defaultOutput() {\n    if (typeof console !== \"undefined\") {\n      console.warn(\"defaultOutput is deprecated, please use `defaultReactOutput`\");\n    }\n\n    return defaultReactOutput.apply(null, arguments);\n  }\n};\n\nexport { SimpleMarkdown as default };\n","import \"d3\";\nimport { l as log } from \"./commonDb-573409be.js\";\nimport { d as decodeEntities } from \"./mermaidAPI-3ae0f2f0.js\";\nimport SimpleMarkdown from \"@khanacademy/simple-markdown\";\nfunction preprocessMarkdown(markdown) {\n  const withoutMultipleNewlines = markdown.replace(/\\n{2,}/g, \"\\n\");\n  const withoutExtraSpaces = withoutMultipleNewlines.replace(/^\\s+/gm, \"\");\n  return withoutExtraSpaces;\n}\nfunction markdownToLines(markdown) {\n  const preprocessedMarkdown = preprocessMarkdown(markdown);\n  const mdParse = SimpleMarkdown.defaultBlockParse;\n  const syntaxTree = mdParse(preprocessedMarkdown);\n  let lines = [[]];\n  let currentLine = 0;\n  function processNode(node, parentType) {\n    if (node.type === \"text\") {\n      const textLines = node.content.split(\"\\n\");\n      textLines.forEach((textLine, index) => {\n        if (index !== 0) {\n          currentLine++;\n          lines.push([]);\n        }\n        textLine.split(\" \").forEach((word) => {\n          if (word) {\n            lines[currentLine].push({ content: word, type: parentType || \"normal\" });\n          }\n        });\n      });\n    } else if (node.type === \"strong\" || node.type === \"em\") {\n      node.content.forEach((contentNode) => {\n        processNode(contentNode, node.type);\n      });\n    }\n  }\n  syntaxTree.forEach((treeNode) => {\n    if (treeNode.type === \"paragraph\") {\n      treeNode.content.forEach((contentNode) => {\n        processNode(contentNode);\n      });\n    }\n  });\n  return lines;\n}\nfunction markdownToHTML(markdown) {\n  const mdParse = SimpleMarkdown.defaultBlockParse;\n  const syntaxTree = mdParse(markdown);\n  function output(node) {\n    if (node.type === \"text\") {\n      return node.content.replace(/\\n/g, \"<br/>\");\n    } else if (node.type === \"strong\") {\n      return `<strong>${node.content.map(output).join(\"\")}</strong>`;\n    } else if (node.type === \"em\") {\n      return `<em>${node.content.map(output).join(\"\")}</em>`;\n    } else if (node.type === \"paragraph\") {\n      return `<p>${node.content.map(output).join(\"\")}</p>`;\n    } else {\n      return \"\";\n    }\n  }\n  return syntaxTree.map(output).join(\"\");\n}\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\nfunction addHtmlSpan(element, node, width, classes) {\n  const fo = element.append(\"foreignObject\");\n  const div = fo.append(\"xhtml:div\");\n  const label = node.label;\n  const labelClass = node.isNode ? \"nodeLabel\" : \"edgeLabel\";\n  div.html(\n    `<span class=\"${labelClass} ${classes}\" ` + (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : \"\") + \">\" + label + \"</span>\"\n  );\n  applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"table-cell\");\n  div.style(\"white-space\", \"nowrap\");\n  div.style(\"max-width\", width + \"px\");\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n  let bbox = div.node().getBoundingClientRect();\n  if (bbox.width === width) {\n    div.style(\"display\", \"table\");\n    div.style(\"white-space\", \"break-spaces\");\n    div.style(\"width\", width + \"px\");\n    bbox = div.node().getBoundingClientRect();\n  }\n  fo.style(\"width\", bbox.width);\n  fo.style(\"height\", bbox.height);\n  return fo.node();\n}\nfunction createTspan(textElement, lineIndex, lineHeight) {\n  return textElement.append(\"tspan\").attr(\"class\", \"text-outer-tspan\").attr(\"x\", 0).attr(\"y\", lineIndex * lineHeight - 0.1 + \"em\").attr(\"dy\", lineHeight + \"em\");\n}\nfunction createFormattedText(width, g, structuredText, addBackground = false) {\n  const lineHeight = 1.1;\n  const labelGroup = g.append(\"g\");\n  let bkg = labelGroup.insert(\"rect\").attr(\"class\", \"background\");\n  const textElement = labelGroup.append(\"text\").attr(\"y\", \"-10.1\");\n  let lineIndex = -1;\n  structuredText.forEach((line) => {\n    lineIndex++;\n    let tspan = createTspan(textElement, lineIndex, lineHeight);\n    let words = [...line].reverse();\n    let currentWord;\n    let wrappedLine = [];\n    while (words.length) {\n      currentWord = words.pop();\n      wrappedLine.push(currentWord);\n      updateTextContentAndStyles(tspan, wrappedLine);\n      if (tspan.node().getComputedTextLength() > width) {\n        wrappedLine.pop();\n        words.push(currentWord);\n        updateTextContentAndStyles(tspan, wrappedLine);\n        wrappedLine = [];\n        lineIndex++;\n        tspan = createTspan(textElement, lineIndex, lineHeight);\n      }\n    }\n  });\n  if (addBackground) {\n    const bbox = textElement.node().getBBox();\n    const padding = 2;\n    bkg.attr(\"x\", -padding).attr(\"y\", -padding).attr(\"width\", bbox.width + 2 * padding).attr(\"height\", bbox.height + 2 * padding);\n    return labelGroup.node();\n  } else {\n    return textElement.node();\n  }\n}\nfunction updateTextContentAndStyles(tspan, wrappedLine) {\n  tspan.text(\"\");\n  wrappedLine.forEach((word, index) => {\n    const innerTspan = tspan.append(\"tspan\").attr(\"font-style\", word.type === \"em\" ? \"italic\" : \"normal\").attr(\"class\", \"text-inner-tspan\").attr(\"font-weight\", word.type === \"strong\" ? \"bold\" : \"normal\");\n    if (index === 0) {\n      innerTspan.text(word.content);\n    } else {\n      innerTspan.text(\" \" + word.content);\n    }\n  });\n}\nconst createText = (el, text = \"\", {\n  style = \"\",\n  isTitle = false,\n  classes = \"\",\n  useHtmlLabels = true,\n  isNode = true,\n  width,\n  addSvgBackground = false\n} = {}) => {\n  log.info(\"createText\", text, style, isTitle, classes, useHtmlLabels, isNode, addSvgBackground);\n  if (useHtmlLabels) {\n    const htmlText = markdownToHTML(text);\n    const node = {\n      isNode,\n      label: decodeEntities(htmlText).replace(\n        /fa[blrs]?:fa-[\\w-]+/g,\n        (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n      ),\n      labelStyle: style.replace(\"fill:\", \"color:\")\n    };\n    let vertexNode = addHtmlSpan(el, node, width, classes);\n    return vertexNode;\n  } else {\n    const structuredText = markdownToLines(text);\n    const special = ['\"', \"'\", \".\", \",\", \":\", \";\", \"!\", \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\"];\n    let lastWord;\n    structuredText.forEach((line) => {\n      line.forEach((word) => {\n        if (special.includes(word.content) && lastWord) {\n          lastWord.content += word.content;\n          word.content = \"\";\n        }\n        lastWord = word;\n      });\n    });\n    const svgLabel = createFormattedText(width, el, structuredText, addSvgBackground);\n    return svgLabel;\n  }\n};\nexport {\n  createText as c\n};\n"],"names":["CR_NEWLINE_R","TAB_R","FORMFEED_R","preprocess","source","replace","populateInitialState","givenState","defaultState","state","prop","Object","prototype","hasOwnProperty","call","parserFor","rules","ruleList","keys","filter","type","rule","match","order","isFinite","console","warn","String","sort","typeA","typeB","ruleA","ruleB","orderA","orderB","secondaryOrderA","quality","secondaryOrderB","latestState","nestedParse","result","ruleType","capture","NaN","i","currRuleType","currRule","currOrder","prevCaptureStr","prevCapture","currCapture","currQuality","Error","length","index","parsed","parse","Array","isArray","push","apply","concat","substring","outerParse","inline","disableAutoBlockNewlines","inlineRegex","regex","exec","blockRegex","anyScopeRegex","TYPE_SYMBOL","Symbol","for","reactElement","key","props","element","$$typeof","undefined","ref","_owner","htmlTag","tagName","content","attributes","isClosed","attributeString","attr","attribute","sanitizeText","unclosedTag","EMPTY_PROPS","sanitizeUrl","url","prot","URL","protocol","indexOf","e","SANITIZE_TEXT_R","SANITIZE_TEXT_CODES","text","chr","UNESCAPE_URL_R","unescapeUrl","rawUrlString","parseInline","isCurrentlyInline","parseBlock","parseCaptureInline","ignoreCapture","LIST_BULLET","LIST_ITEM_PREFIX","LIST_ITEM_PREFIX_R","RegExp","LIST_ITEM_R","BLOCK_END_R","INLINE_CODE_ESCAPE_BACKTICKS_R","LIST_BLOCK_END_R","LIST_ITEM_END_R","LIST_R","LIST_LOOKBEHIND_R","TABLES","TABLE_ROW_SEPARATOR_TRIM","TABLE_CELL_END_TRIM","TABLE_RIGHT_ALIGN","TABLE_CENTER_ALIGN","TABLE_LEFT_ALIGN","parseTableAlignCapture","alignCapture","test","parseTableAlign","trimEndSeparators","alignText","trim","split","map","parseTableRow","prevInTable","inTable","tableRow","cells","forEach","node","parseTableCells","rowsText","rowText","parseTable","header","align","parseNpTable","TABLE_REGEX","NPTABLE_REGEX","LINK_INSIDE","LINK_HREF_AND_TITLE","AUTOLINK_MAILTO_CHECK_R","parseRef","refNode","toLowerCase","_defs","def","target","title","_refs","defaultRules","react","arr","output","oldKey","html","heading","_parse","_x","_x2","_x3","arguments","toString","level","children","nptable","lheading","_parse2","_x4","_x5","_x6","hr","codeBlock","_parse3","_x7","_x8","_x9","lang","className","class","fence","_parse4","_x10","_x11","_x12","blockQuote","_parse5","_x13","_x14","_x15","list","isStartOfLineCapture","isListBlock","_list","_parse6","_x16","_x17","_x18","bullet","ordered","start","items","lastItemWasAParagraph","itemContent","item","prefixCapture","space","spaceRegex","isLastItem","containsBlocks","thisItemIsAParagraph","oldStateInline","oldStateList","adjustedContent","ListWrapper","listItems","join","listTag","_parse7","_x19","_x20","_x21","table","getStyle","colIndex","textAlign","headers","style","scope","rows","row","r","c","cols","thead","tbody","newline","paragraph","escape","_parse8","_x22","_x23","_x24","tableSeparator","autolink","_parse9","_x25","_x26","_x27","mailto","_parse10","_x28","_x29","_x30","address","_parse11","_x31","_x32","_x33","link","_parse12","_x34","_x35","_x36","href","image","_parse13","_x37","_x38","_x39","alt","src","reflink","_parse14","_x40","_x41","_x42","refimage","_parse15","_x43","_x44","_x45","em","_parse16","_x46","_x47","_x48","strong","u","del","inlineCode","_parse17","_x49","_x50","_x51","br","_parse18","_x52","_x53","_x54","ruleOutput","property","nestedRuleOutput","ast","outputFunc","reactFor","nestedOutput","lastResult","nodeOut","htmlFor","outputFor","arrayRule","arrayRuleCheck","arrayRuleOutput","outerOutput","defaultRawParse","defaultBlockParse","defaultInlineParse","defaultImplicitParse","isBlock","defaultReactOutput","defaultHtmlOutput","markdownToReact","markdownToHtml","ReactMarkdown","divProps","SimpleMarkdown","defaultParse","defaultOutput","default","l","log","d","decodeEntities","preprocessMarkdown","markdown","withoutMultipleNewlines","withoutExtraSpaces","markdownToLines","preprocessedMarkdown","mdParse","syntaxTree","lines","currentLine","processNode","parentType","textLines","textLine","word","contentNode","treeNode","markdownToHTML","applyStyle","dom","styleFn","addHtmlSpan","width","classes","fo","append","div","label","labelClass","isNode","labelStyle","bbox","getBoundingClientRect","height","createTspan","textElement","lineIndex","lineHeight","createFormattedText","g","structuredText","addBackground","labelGroup","bkg","insert","line","tspan","words","reverse","currentWord","wrappedLine","pop","updateTextContentAndStyles","getComputedTextLength","getBBox","padding","innerTspan","createText","el","isTitle","useHtmlLabels","addSvgBackground","info","htmlText","s","vertexNode","special","lastWord","includes","svgLabel"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}