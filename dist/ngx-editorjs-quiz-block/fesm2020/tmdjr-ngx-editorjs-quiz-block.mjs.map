{"version":3,"file":"tmdjr-ngx-editorjs-quiz-block.mjs","sources":["../../../projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.service.ts","../../../projects/ngx-editorjs-quiz-block/src/lib/quiz-config/quiz-config.component.ts","../../../projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.component.ts","../../../projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.mediator.ts","../../../projects/ngx-editorjs-quiz-block/src/public-api.ts","../../../projects/ngx-editorjs-quiz-block/src/tmdjr-ngx-editorjs-quiz-block.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsQuizBlockService {\n\n  constructor() { }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatLegacyFormFieldModule as MatFormFieldModule } from '@angular/material/legacy-form-field';\nimport { MatLegacyInputModule as MatInputModule } from '@angular/material/legacy-input';\nimport { MatLegacyRadioModule as MatRatioModule } from '@angular/material/legacy-radio';\nimport { MatLegacySelectModule as MatSelectModule} from '@angular/material/legacy-select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'quiz-config',\n  standalone: true,\n  template: `\n    <div class=\"image-block-modal\" >\n      <form [formGroup]=\"quizConfigForm\">\n\n        <h2 mat-dialog-title>Quiz Configuration</h2>\n\n        <h3>1) Create a Question.</h3>\n        <mat-form-field appearance=\"outline\" color=\"accent\">\n          <mat-label>Question</mat-label>\n          <textarea #title matInput formControlName=\"question\"></textarea>\n          <mat-error *ngIf=\"quizConfigForm.get('question')?.errors\">{{quizConfigFormErrorMessages['question']}}</mat-error>\n        </mat-form-field>\n\n        <h3>2) Create the possible answers</h3>\n        <div formArrayName=\"ratioOptions\">\n          <div *ngFor=\"let option of ratioOptions.controls; let i = index\" [formGroupName]=\"i\">\n            <div class=\"ratio-option\">\n              <mat-radio-group formControlName=\"isCorrect\">\n                <mat-radio-button value=\"{{i}}\"></mat-radio-button>\n              </mat-radio-group>\n              <mat-form-field appearance=\"outline\" color=\"accent\" class=\"ratio-option-input\">\n                <mat-label>Option {{i + 1}}</mat-label>\n                <input matInput type=\"text\" formControlName=\"value\"/>\n              </mat-form-field>\n              <button mat-icon-button color=\"warn\" type=\"button\" (click)=\"removeRatioOption(i)\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </div>\n          </div>\n          <div class=\"answers-action-group\">\n            <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"addRatioOption()\">Add Answer</button>\n          </div>\n        </div>\n\n        <h3>3) Select correct answer</h3>\n        <mat-form-field appearance=\"outline\" color=\"accent\">\n          <mat-label>Answer</mat-label>\n          <mat-select formControlName=\"correctAnswer\">\n            <mat-option *ngFor=\"let option of ratioOptions.controls; let i = index\" [value]=\"option.get('value')?.value\">\n              {{ option.get('value')?.value }}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"quizConfigForm.get('correctAnswer')?.errors\">{{quizConfigFormErrorMessages['correctAnswer']}}</mat-error>\n        </mat-form-field>\n\n        <div class=\"action-group\">\n          <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"updateImage()\" [disabled]=\"quizConfigForm.invalid\">Save</button>\n          <button mat-flat-button color=\"warn\" type=\"button\" (click)=\"closeConfig()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  `,\n  styles: [`\n    :host {\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      padding: 20px;\n    }\n    :host form {\n      display: flex;\n      flex-direction: column;\n    }\n    :host form .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n    .answers-action-group {\n      padding-bottom: 20px;\n    }\n  `],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatRatioModule,\n    MatSelectModule,\n    MatIconModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class QuizConfigComponent implements OnInit {\n  constructor(private formBuilder: FormBuilder) { }\n  destory: Subject<boolean> = new Subject();\n\n  errorMessages: { [key: string]: string } = { required: 'Required' };\n  quizConfigFormErrorMessages: { [key: string]: string } = { question: '', correctAnswer: '' }\n\n  quizConfigForm!: FormGroup;\n\n  @Input() value!: { question: string, correctAnswer: string };\n  @Output() quizValue = new EventEmitter<{ question: string, correctAnswer: string }>();\n\n\n  ngOnInit(): void {\n    this.quizConfigForm = this.formBuilder.group({\n      question: [this.value.question ?? '', [Validators.required]],\n      correctAnswer: [this.value.correctAnswer ?? '', [Validators.required]],\n      ratioOptions: this.formBuilder.array([])\n    });\n\n    this.quizConfigForm.statusChanges\n    .pipe(takeUntil(this.destory))\n    .subscribe(() => this.setErrorsMessages(this.quizConfigForm, this.quizConfigFormErrorMessages));\n  }\n\n  ngOnDestroy(): void {\n    this.destory.next(true);\n  }\n\n  updateImage() {\n    this.quizValue.emit(this.quizConfigForm.value);\n  }\n\n  closeConfig() {\n    this.quizValue.emit(this.value);\n  }\n\n  get ratioOptions(): FormArray {\n    return this.quizConfigForm.get('ratioOptions') as FormArray;\n  }\n\n  addRatioOption(): void {\n    const option = this.formBuilder.group({\n      value: ['', [Validators.required]],\n      isCorrect: [false, [Validators.required]]\n    });\n    this.ratioOptions.push(option);\n  }\n\n  removeRatioOption(index: number): void {\n    this.ratioOptions.removeAt(index);\n  }\n\n  setErrorsMessages(formGroup: FormGroup, formControlMessages: { [key: string]: string }): void {\n    Object.keys(formGroup.controls).forEach(element => {\n      const errors = formGroup.get(element)?.errors;\n      if(errors) {         \n        const error = Object.keys(errors)[0];\n        formControlMessages[element] = this.errorMessages[error];\n      }\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BaseBlockComponent, AutofocusDirective } from '@tmdjr/ngx-editorjs';\nimport { QuizConfigComponent } from './quiz-config/quiz-config.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-quiz-block',\n  template: `\n    <ng-container *ngIf=\"_openEditQuizOverlay; else elseTemplate\">\n      <quiz-config [value]=\"_value\" (quizValue)=\"updateQuiz($event)\"></quiz-config>\n    </ng-container>\n    <ng-template #elseTemplate>\n      <div class=\"quiz-conatiner\">\n        <p class=\"flex-spacer\" #paragraph contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></p>\n        <button  \n          mat-mini-fab \n          class=\"image-block-button mat-elevation-z2\"\n          (click)=\"openEditQuizOverlay()\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </div>\n    </ng-template>\n  `,\n  styles: [`:host { display: flex; flex-direction: column; } p { font-size: 1.6rem; line-height: 3.2rem; }`],\n  imports: [\n    CommonModule,\n    AutofocusDirective,\n    MatButtonModule,\n    MatIconModule,\n    QuizConfigComponent\n  ]\n})\nexport class NgxEditorjsQuizBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  override useInlineToolbar = false;\n  override useInputType = false;\n\n  @ViewChild('paragraph') element!: ElementRef;\n\n  _openEditQuizOverlay = false;\n  _value: { question: string, correctAnswer: string } = { question: '', correctAnswer: '' };\n\n  override ngOnInit() {\n    !!this.value && (this._value = JSON.parse(this.value));\n    console.log('this.value', this.value);\n    super.ngOnInit();\n  }\n\n  ngAfterViewInit(): void {\n    super.viewChild = this.element;\n  }\n\n  override onMouseEnter(event: Event) {\n    super.onMouseEnter(event);\n  }\n\n  openEditQuizOverlay() {\n    this._openEditQuizOverlay = true;\n  }\n\n  updateQuiz(value: { question: string, correctAnswer: string }) {\n    console.log({\n      updateImage: value\n    })\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsQuizBlockComponent } from './ngx-editorjs-quiz-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-quiz-paragraph-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-quiz-block [blockId]=\"blockId\" [formControlName]=\"formControlName\"></ngx-editorjs-quiz-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsQuizBlockComponent\n  ],\n})\nexport class NgxEditorjsQuizBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n}\n","/*\n * Public API Surface of ngx-editorjs-quiz-block\n */\nexport * from './lib/ngx-editorjs-quiz-block.service';\nexport * from './lib/ngx-editorjs-quiz-block.component';\n// export * from './lib/ngx-editorjs-paragraph-client-block.component';\nexport * from './lib/ngx-editorjs-quiz-block.mediator';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["MatInputModule","MatButtonModule","MatFormFieldModule","MatRatioModule","MatSelectModule","i2","i3"],"mappings":"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"}