{"version":3,"file":"tmdjr-ngx-editorjs-quiz-block.mjs","sources":["../../../projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.service.ts","../../../projects/ngx-editorjs-quiz-block/src/lib/quiz-config/quiz-config.component.ts","../../../projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.component.ts","../../../projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-client-block.component.ts","../../../projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.mediator.ts","../../../projects/ngx-editorjs-quiz-block/src/public-api.ts","../../../projects/ngx-editorjs-quiz-block/src/tmdjr-ngx-editorjs-quiz-block.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsQuizBlockService {\n\n  constructor() { }\n}\n","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, ReactiveFormsModule, ValidatorFn, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule} from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Subject, takeUntil } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\n\ntype RatioOption = { value: string };\nexport type QuizConfig = {\n  question: string,\n  correctAnswer: string,\n  correctAnswerResponse: string,\n  incorrectAnswerResponse: string,\n  ratioOptions: RatioOption[]\n};\n\nfunction validateRatioOptions(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const optionsArray = control as FormArray;\n    if (optionsArray.controls.length < 2) {\n      return { 'notEnoughOptions': true };\n    }\n    return null;\n  };\n}\n\n\n@Component({\n  selector: 'quiz-config',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"quiz-block-modal\" >\n      <form [formGroup]=\"quizConfigForm\">\n\n        <h2 mat-dialog-title>Quiz Configuration</h2>\n\n        <h3>Create a Question.</h3>\n        <mat-form-field appearance=\"outline\" color=\"accent\">\n          <mat-label>Question</mat-label>\n          <textarea matInput formControlName=\"question\"></textarea>\n          <mat-error *ngIf=\"quizConfigForm.get('question')?.errors\">{{quizConfigFormErrorMessages['question']}}</mat-error>\n        </mat-form-field>\n\n        <ng-container *ngIf=\"quizConfigForm.get('question')?.valid\">\n          <h3>Create the possible answers <span>(Create at least 2 options)</span></h3>\n          <div formArrayName=\"ratioOptions\">\n            <div *ngFor=\"let option of ratioOptions.controls; let i = index\" [formGroupName]=\"i\">\n              <div class=\"radio-option-container\">\n                <mat-form-field appearance=\"outline\" color=\"accent\">\n                  <mat-label>Option {{i + 1}}</mat-label>\n                  <textarea matInput formControlName=\"value\"></textarea>\n                </mat-form-field>\n                <a mat-icon-button color=\"warn\" (click)=\"removeRatioOption(i)\">\n                  <mat-icon>delete</mat-icon>\n                </a>\n              </div>\n            </div>\n            <div class=\"answers-action-group\">\n              <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"addRatioOption()\">Add Answer</button>\n            </div>\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"quizConfigForm.get('question')?.valid && quizConfigForm.get('ratioOptions')?.valid\">\n          <h3>Select the correct answer</h3>\n          <mat-form-field appearance=\"outline\" color=\"accent\">\n            <mat-label>Answer</mat-label>\n            <mat-select formControlName=\"correctAnswer\">\n              <mat-option *ngFor=\"let option of ratioOptions.controls; let i = index\" [value]=\"option.get('value')?.value\">\n                {{ option.get('value')?.value }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"quizConfigForm.get('correctAnswer')?.errors\">{{quizConfigFormErrorMessages['correctAnswer']}}</mat-error>\n          </mat-form-field>\n        </ng-container>\n\n        <ng-container *ngIf=\"quizConfigForm.get('question')?.valid &&  quizConfigForm.get('ratioOptions')?.valid && quizConfigForm.get('correctAnswer')?.valid\">\n          <h3>Correct answer response.</h3>\n          <mat-form-field appearance=\"outline\" color=\"accent\">\n            <mat-label>Response</mat-label>\n            <textarea matInput formControlName=\"correctAnswerResponse\"></textarea>\n            <mat-error *ngIf=\"quizConfigForm.get('correctAnswerResponse')?.errors\">{{quizConfigFormErrorMessages['correctAnswerResponse']}}</mat-error>\n          </mat-form-field>\n        </ng-container>\n\n        <ng-container *ngIf=\"quizConfigForm.get('question')?.valid &&  quizConfigForm.get('ratioOptions')?.valid && quizConfigForm.get('correctAnswer')?.valid\">\n          <h3>Incorrect answer response.</h3>\n          <mat-form-field appearance=\"outline\" color=\"accent\">\n            <mat-label>Response</mat-label>\n            <textarea matInput formControlName=\"incorrectAnswerResponse\"></textarea>\n            <mat-error *ngIf=\"quizConfigForm.get('incorrectAnswerResponse')?.errors\">{{quizConfigFormErrorMessages['incorrectAnswerResponse']}}</mat-error>\n          </mat-form-field>\n        </ng-container>\n\n        <div class=\"action-group\">\n          <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"updateQuiz()\" [disabled]=\"quizConfigForm.invalid\">Save</button>\n          <button mat-flat-button color=\"warn\" type=\"button\" (click)=\"closeConfig()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  `,\n  styles: [`\n    :host {\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      padding: 20px;\n    }\n    :host form {\n      display: flex;\n      flex-direction: column;\n    }\n    :host form .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n    .answers-action-group {\n      padding-bottom: 20px;\n    }\n    .radio-option-container {\n      display: flex;\n      gap: 10px;\n    }\n    .radio-option-container mat-form-field {\n      flex: 1;\n    }\n  `],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatIconModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class QuizConfigComponent implements OnInit {\n  constructor(private formBuilder: FormBuilder) { }\n  destory: Subject<boolean> = new Subject();\n\n  errorMessages: { [key: string]: string } = { required: 'Required' };\n  quizConfigFormErrorMessages: { [key: string]: string } = { question: '', correctAnswer: '' }\n\n  quizConfigForm!: FormGroup;\n\n  get ratioOptions(): FormArray {\n    return this.quizConfigForm.get('ratioOptions') as FormArray;\n  }\n\n  @Input() value!: QuizConfig;\n  @Output() quizValue = new EventEmitter<QuizConfig>();\n\n  ngOnInit(): void {\n    this.quizConfigForm = this.formBuilder.group({\n      question: [this.value.question ?? '', [Validators.required]],\n      correctAnswer: [this.value.correctAnswer ?? undefined, [Validators.required]],\n      correctAnswerResponse: [this.value.correctAnswerResponse ?? '', [Validators.required]],\n      incorrectAnswerResponse: [this.value.incorrectAnswerResponse ?? '', [Validators.required]],\n      ratioOptions: this.formBuilder.array((this.value.ratioOptions ?? [])\n                    .map(option => this.formBuilder.group({ value: [option.value, Validators.required] })), validateRatioOptions())\n\n    });\n\n    this.quizConfigForm.statusChanges\n    .pipe(takeUntil(this.destory))\n    .subscribe(() => this.setErrorsMessages(this.quizConfigForm, this.quizConfigFormErrorMessages));\n  }\n\n  ngOnDestroy(): void {\n    this.destory.next(true);\n  }\n\n  updateQuiz() {\n    this.quizValue.emit(this.quizConfigForm.value);\n  }\n\n  closeConfig() {\n    this.quizValue.emit(this.value);\n  }\n\n  addRatioOption(): void {\n    const option = this.formBuilder.group({\n      value: ['', [Validators.required]]\n    });\n    this.ratioOptions.push(option);\n  }\n\n  removeRatioOption(index: number): void {\n    this.quizConfigForm.get('correctAnswer')?.setValue(undefined);\n    this.ratioOptions.removeAt(index);\n  }\n\n  setErrorsMessages(formGroup: FormGroup, formControlMessages: { [key: string]: string }): void {\n    Object.keys(formGroup.controls).forEach(element => {\n      const errors = formGroup.get(element)?.errors;\n      if(errors) {         \n        const error = Object.keys(errors)[0];\n        formControlMessages[element] = this.errorMessages[error];\n      }\n    });\n  }\n}\n\n\n","import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BaseBlockComponent } from '@tmdjr/ngx-editorjs';\nimport { QuizConfig, QuizConfigComponent } from './quiz-config/quiz-config.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-quiz-block',\n  template: `\n    <ng-container *ngIf=\"_openEditQuizOverlay; else elseTemplate\">\n      <quiz-config [value]=\"_value\" (quizValue)=\"updateQuiz($event)\"></quiz-config>\n    </ng-container>\n    <ng-template #elseTemplate>\n      <div class=\"quiz-conatiner\">\n        <h1>Quiz</h1>\n        <p #paragraph>{{ _value.question }}</p>\n        <mat-radio-group class=\"answer-ratio-group\" [value]=\"_value.correctAnswer\">\n          <mat-radio-button *ngFor=\"let option of _value.ratioOptions\" [value]=\"option.value\">{{ option.value }}</mat-radio-button>\n        </mat-radio-group>\n        <div class=\"action-group\">\n          <button mat-flat-button color=\"primary\" type=\"button\" (click)=\"openEditQuizOverlay()\">Edit</button>\n        </div>\n      </div>\n    </ng-template>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; padding-bottom: 22px; }\n    .answer-ratio-group {\n      display: flex;\n      flex-direction: column;\n      gap: 21px;\n    }\n    .quiz-conatiner {\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      padding: 20px;\n    }\n    .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n  `],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatIconModule,\n    QuizConfigComponent\n  ]\n})\nexport class NgxEditorjsQuizBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  override useInlineToolbar = false;\n  override useInputType = false;\n\n  @ViewChild('paragraph') element!: ElementRef;\n\n  _openEditQuizOverlay = false;\n  _value: QuizConfig = {\n    question: '',\n    correctAnswer: '',\n    ratioOptions: [],\n    correctAnswerResponse: '',\n    incorrectAnswerResponse: ''\n  };\n\n  override ngOnInit() {\n    !!this.value && (this._value = JSON.parse(this.value));\n    !this.value && this.openEditQuizOverlay();\n    super.ngOnInit();\n  }\n\n  ngAfterViewInit(): void {\n    super.viewChild = this.element;\n  }\n\n  override onMouseEnter(event: Event) {\n    super.onMouseEnter(event);\n  }\n\n  openEditQuizOverlay() {\n    this._openEditQuizOverlay = true;\n  }\n\n  updateQuiz(value: QuizConfig) {\n    this._value = value;\n    this.changeValue(JSON.stringify(value));\n    this._openEditQuizOverlay = false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { QuizConfig } from './quiz-config/quiz-config.component';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-image-client-block',\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatRadioModule,\n    FormsModule\n  ],\n  template: `\n    <div class=\"quiz-conatiner\">\n      <h1>Quiz</h1>\n      <p *ngIf=\"answerResponse\" [ngClass]=\"isAnswerCorrect ? 'successful-text' : 'failure-text'\" >{{ answerResponse }}</p>\n      <p #paragraph>{{ _value.question }}</p>\n      <mat-radio-group [(ngModel)]=\"userAnswer\" [disabled]=\"answerSubmited\">\n        <ol type=\"a\" class=\"answer-ratio-group\">\n          <li *ngFor=\"let option of _value.ratioOptions\">\n          <mat-radio-button [value]=\"option.value\">{{ option.value }}</mat-radio-button>\n          </li>\n        </ol>\n      </mat-radio-group>\n      <div class=\"action-group\">\n        <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"onQuizAnswerClick()\" [disabled]=\"!userAnswer || answerSubmited\">Submit</button>\n      </div>\n    </div>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; padding-bottom: 22px; }\n    .answer-ratio-group {\n      display: flex;\n      flex-direction: column;\n      gap: 21px;\n    }\n    .answer-ratio-group li::before {\n      content: \")\";\n      margin-right: 0.5em;\n    }\n    .quiz-conatiner {\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      padding: 20px;\n    }\n    .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n  `]\n})\nexport class NgxEditorjsQuizClientBlockComponent {\n\n  isAnswerCorrect: boolean | undefined = undefined;\n  answerResponse: string | undefined = undefined;\n  answerSubmited = false;\n  userAnswer: string | undefined = undefined;\n  _value: QuizConfig = {\n    question: '',\n    correctAnswer: '',\n    ratioOptions: [],\n    correctAnswerResponse: '',\n    incorrectAnswerResponse: ''\n  };\n\n  @Input() \n  set value(value: string) {\n    !!value && (this._value = JSON.parse(value));\n  }\n\n  onQuizAnswerClick() {\n    this.answerSubmited = true;\n    this.isAnswerCorrect = this.userAnswer === this._value.correctAnswer;\n    this.answerResponse = this.isAnswerCorrect ? this._value.correctAnswerResponse : this._value.incorrectAnswerResponse;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsQuizBlockComponent } from './ngx-editorjs-quiz-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-quiz-paragraph-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-quiz-block [blockId]=\"blockId\" [formControlName]=\"formControlName\"></ngx-editorjs-quiz-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsQuizBlockComponent\n  ],\n})\nexport class NgxEditorjsQuizBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n}\n","/*\n * Public API Surface of ngx-editorjs-quiz-block\n */\nexport * from './lib/ngx-editorjs-quiz-block.service';\nexport * from './lib/ngx-editorjs-quiz-block.component';\nexport * from './lib/ngx-editorjs-quiz-client-block.component';\nexport * from './lib/ngx-editorjs-quiz-block.mediator';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","i1","i4"],"mappings":"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"}