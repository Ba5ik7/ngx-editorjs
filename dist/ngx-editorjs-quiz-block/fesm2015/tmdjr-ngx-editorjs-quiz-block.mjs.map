{"version":3,"file":"tmdjr-ngx-editorjs-quiz-block.mjs","sources":["../../../projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.service.ts","../../../projects/ngx-editorjs-quiz-block/src/lib/quiz-config/quiz-config.component.ts","../../../projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.component.ts","../../../projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.mediator.ts","../../../projects/ngx-editorjs-quiz-block/src/public-api.ts","../../../projects/ngx-editorjs-quiz-block/src/tmdjr-ngx-editorjs-quiz-block.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsQuizBlockService {\n\n  constructor() { }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, ReactiveFormsModule, ValidatorFn, Validators } from '@angular/forms';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatLegacyFormFieldModule as MatFormFieldModule } from '@angular/material/legacy-form-field';\nimport { MatLegacyInputModule as MatInputModule } from '@angular/material/legacy-input';\nimport { MatLegacySelectModule as MatSelectModule} from '@angular/material/legacy-select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Subject, takeUntil } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\n\ntype RatioOption = { value: string };\nexport type QuizConfig = { question: string, correctAnswer: string, ratioOptions: RatioOption[] };\n\nfunction validateRatioOptions(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const optionsArray = control as FormArray;\n    if (optionsArray.controls.length < 2) {\n      return { 'notEnoughOptions': true };\n    }\n    return null;\n  };\n}\n\n\n@Component({\n  selector: 'quiz-config',\n  standalone: true,\n  template: `\n    <div class=\"image-block-modal\" >\n      <form [formGroup]=\"quizConfigForm\">\n\n        <h1 mat-dialog-title>Quiz Configuration</h1>\n\n        <h2>1) Create a Question.</h2>\n        <mat-form-field appearance=\"outline\" color=\"accent\">\n          <mat-label>Question</mat-label>\n          <textarea #title matInput formControlName=\"question\"></textarea>\n          <mat-error *ngIf=\"quizConfigForm.get('question')?.errors\">{{quizConfigFormErrorMessages['question']}}</mat-error>\n        </mat-form-field>\n\n        <ng-container *ngIf=\"quizConfigForm.get('question')?.valid\">\n          <h2>2) Create the possible answers <span>(Create at least 2 options)</span></h2>\n          <div formArrayName=\"ratioOptions\">\n            <div *ngFor=\"let option of ratioOptions.controls; let i = index\" [formGroupName]=\"i\">\n              <div class=\"ratio-option\">\n                <mat-form-field appearance=\"outline\" color=\"accent\" class=\"ratio-option-input\">\n                  <mat-label>Option {{i + 1}}</mat-label>\n                  <input matInput type=\"text\" formControlName=\"value\"/>\n                </mat-form-field>\n                <button mat-icon-button color=\"warn\" type=\"button\" (click)=\"removeRatioOption(i)\">\n                  <mat-icon>delete</mat-icon>\n                </button>\n              </div>\n            </div>\n            <div class=\"answers-action-group\">\n              <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"addRatioOption()\">Add Answer</button>\n            </div>\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"quizConfigForm.get('question')?.valid && quizConfigForm.get('ratioOptions')?.valid\">\n          <h2>3) Select the correct answer</h2>\n          <mat-form-field appearance=\"outline\" color=\"accent\">\n            <mat-label>Answer</mat-label>\n            <mat-select formControlName=\"correctAnswer\">\n              <mat-option *ngFor=\"let option of ratioOptions.controls; let i = index\" [value]=\"option.get('value')?.value\">\n                {{ option.get('value')?.value }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"quizConfigForm.get('correctAnswer')?.errors\">{{quizConfigFormErrorMessages['correctAnswer']}}</mat-error>\n          </mat-form-field>\n        </ng-container>\n\n        <div class=\"action-group\">\n          <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"updateQuiz()\" [disabled]=\"quizConfigForm.invalid\">Save</button>\n          <button mat-flat-button color=\"warn\" type=\"button\" (click)=\"closeConfig()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  `,\n  styles: [`\n    :host {\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      padding: 20px;\n    }\n    :host form {\n      display: flex;\n      flex-direction: column;\n    }\n    :host form .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n    .answers-action-group {\n      padding-bottom: 20px;\n    }\n    :host h2 span{\n      font-size: 12px;\n      color: #f0ad4e;\n    }\n  `],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatIconModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class QuizConfigComponent implements OnInit {\n  constructor(private formBuilder: FormBuilder) { }\n  destory: Subject<boolean> = new Subject();\n\n  errorMessages: { [key: string]: string } = { required: 'Required' };\n  quizConfigFormErrorMessages: { [key: string]: string } = { question: '', correctAnswer: '' }\n\n  quizConfigForm!: FormGroup;\n\n  get ratioOptions(): FormArray {\n    return this.quizConfigForm.get('ratioOptions') as FormArray;\n  }\n\n  @Input() value!: QuizConfig;\n  @Output() quizValue = new EventEmitter<QuizConfig>();\n\n  ngOnInit(): void {\n    this.quizConfigForm = this.formBuilder.group({\n      question: [this.value.question ?? '', [Validators.required]],\n      correctAnswer: [this.value.correctAnswer ?? '', [Validators.required]],\n      // ratioOptions: this.formBuilder.array(this.value.ratioOptions ?? [], validateRatioOptions())\n      ratioOptions: this.formBuilder.array((this.value.ratioOptions ?? []).map(option => this.formBuilder.group({ value: [option.value, Validators.required] })), validateRatioOptions())\n\n    });\n\n    this.quizConfigForm.statusChanges\n    .pipe(takeUntil(this.destory))\n    .subscribe(() => this.setErrorsMessages(this.quizConfigForm, this.quizConfigFormErrorMessages));\n  }\n\n  ngOnDestroy(): void {\n    this.destory.next(true);\n  }\n\n  updateQuiz() {\n    this.quizValue.emit(this.quizConfigForm.value);\n  }\n\n  closeConfig() {\n    this.quizValue.emit(this.value);\n  }\n\n  addRatioOption(): void {\n    const option = this.formBuilder.group({\n      value: ['', [Validators.required]]\n    });\n    this.ratioOptions.push(option);\n  }\n\n  removeRatioOption(index: number): void {\n    this.ratioOptions.removeAt(index);\n  }\n\n  setErrorsMessages(formGroup: FormGroup, formControlMessages: { [key: string]: string }): void {\n    Object.keys(formGroup.controls).forEach(element => {\n      const errors = formGroup.get(element)?.errors;\n      if(errors) {         \n        const error = Object.keys(errors)[0];\n        formControlMessages[element] = this.errorMessages[error];\n      }\n    });\n  }\n}\n\n\n","import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatLegacyRadioModule as MatRatioModule } from '@angular/material/legacy-radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BaseBlockComponent, AutofocusDirective } from '@tmdjr/ngx-editorjs';\nimport { QuizConfig, QuizConfigComponent } from './quiz-config/quiz-config.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-quiz-block',\n  template: `\n    <ng-container *ngIf=\"_openEditQuizOverlay; else elseTemplate\">\n      <quiz-config [value]=\"_value\" (quizValue)=\"updateQuiz($event)\"></quiz-config>\n    </ng-container>\n    <ng-template #elseTemplate>\n      <div class=\"quiz-conatiner\">\n        <h1>Quiz</h1>\n        <p #paragraph>{{ _value.question }}</p>\n        <mat-radio-group class=\"answer-ratio-group\" [value]=\"_value.correctAnswer\">\n          <mat-radio-button *ngFor=\"let option of _value.ratioOptions\" [value]=\"option.value\">{{ option.value }}</mat-radio-button>\n        </mat-radio-group>\n        <div class=\"action-group\">\n          <button mat-flat-button color=\"primary\" type=\"button\" (click)=\"openEditQuizOverlay()\">Edit</button>\n        </div>\n      </div>\n    </ng-template>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; padding-bottom: 22px; }\n    .answer-ratio-group {\n      display: flex;\n      flex-direction: column;\n      gap: 21px;\n    }\n    .quiz-conatiner {\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      padding: 20px;\n    }\n    .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n  `],\n  imports: [\n    CommonModule,\n    AutofocusDirective,\n    MatButtonModule,\n    MatRatioModule,\n    MatIconModule,\n    QuizConfigComponent\n  ]\n})\nexport class NgxEditorjsQuizBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  override useInlineToolbar = false;\n  override useInputType = false;\n\n  @ViewChild('paragraph') element!: ElementRef;\n\n  _openEditQuizOverlay = false;\n  _value: QuizConfig = {\n    question: '',\n    correctAnswer: '',\n    ratioOptions: []\n  };\n\n  override ngOnInit() {\n    !!this.value && (this._value = JSON.parse(this.value));\n    !this.value && this.openEditQuizOverlay();\n    super.ngOnInit();\n  }\n\n  ngAfterViewInit(): void {\n    super.viewChild = this.element;\n  }\n\n  override onMouseEnter(event: Event) {\n    super.onMouseEnter(event);\n  }\n\n  openEditQuizOverlay() {\n    this._openEditQuizOverlay = true;\n  }\n\n  updateQuiz(value: QuizConfig) {\n    this._value = value;\n    this.changeValue(JSON.stringify(value));\n    this._openEditQuizOverlay = false;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsQuizBlockComponent } from './ngx-editorjs-quiz-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-quiz-paragraph-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-quiz-block [blockId]=\"blockId\" [formControlName]=\"formControlName\"></ngx-editorjs-quiz-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsQuizBlockComponent\n  ],\n})\nexport class NgxEditorjsQuizBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n}\n","/*\n * Public API Surface of ngx-editorjs-quiz-block\n */\nexport * from './lib/ngx-editorjs-quiz-block.service';\nexport * from './lib/ngx-editorjs-quiz-block.component';\n// export * from './lib/ngx-editorjs-paragraph-client-block.component';\nexport * from './lib/ngx-editorjs-quiz-block.mediator';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["MatInputModule","MatButtonModule","MatFormFieldModule","MatSelectModule","i1","i2","MatRatioModule"],"mappings":"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"}