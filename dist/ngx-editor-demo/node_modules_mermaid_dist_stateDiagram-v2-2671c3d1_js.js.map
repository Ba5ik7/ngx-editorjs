{"version":3,"file":"node_modules_mermaid_dist_stateDiagram-v2-2671c3d1_js.js","mappings":"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","sources":["./node_modules/mermaid/dist/stateDiagram-v2-2671c3d1.js"],"sourcesContent":["import { D as DEFAULT_STATE_TYPE, a as DIVIDER_TYPE, S as STMT_RELATION, b as STMT_STATE, c as DEFAULT_NESTED_DOC_DIR, p as parser, d as db, s as styles } from \"./styles-bbc3fe3b.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { select } from \"d3\";\nimport { l as log, c as getConfig, u as utils, i as configureSvgSize, e as common } from \"./mermaid-934d9bea.js\";\nimport { r as render } from \"./index-67a42d7d.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-80f1ebb6.js\";\nimport \"./createText-aebacdfe.js\";\nimport \"mdast-util-from-markdown\";\nconst SHAPE_STATE = \"rect\";\nconst SHAPE_STATE_WITH_DESC = \"rectWithTitle\";\nconst SHAPE_START = \"start\";\nconst SHAPE_END = \"end\";\nconst SHAPE_DIVIDER = \"divider\";\nconst SHAPE_GROUP = \"roundedWithTitle\";\nconst SHAPE_NOTE = \"note\";\nconst SHAPE_NOTEGROUP = \"noteGroup\";\nconst CSS_DIAGRAM = \"statediagram\";\nconst CSS_STATE = \"state\";\nconst CSS_DIAGRAM_STATE = `${CSS_DIAGRAM}-${CSS_STATE}`;\nconst CSS_EDGE = \"transition\";\nconst CSS_NOTE = \"note\";\nconst CSS_NOTE_EDGE = \"note-edge\";\nconst CSS_EDGE_NOTE_EDGE = `${CSS_EDGE} ${CSS_NOTE_EDGE}`;\nconst CSS_DIAGRAM_NOTE = `${CSS_DIAGRAM}-${CSS_NOTE}`;\nconst CSS_CLUSTER = \"cluster\";\nconst CSS_DIAGRAM_CLUSTER = `${CSS_DIAGRAM}-${CSS_CLUSTER}`;\nconst CSS_CLUSTER_ALT = \"cluster-alt\";\nconst CSS_DIAGRAM_CLUSTER_ALT = `${CSS_DIAGRAM}-${CSS_CLUSTER_ALT}`;\nconst PARENT = \"parent\";\nconst NOTE = \"note\";\nconst DOMID_STATE = \"state\";\nconst DOMID_TYPE_SPACER = \"----\";\nconst NOTE_ID = `${DOMID_TYPE_SPACER}${NOTE}`;\nconst PARENT_ID = `${DOMID_TYPE_SPACER}${PARENT}`;\nconst G_EDGE_STYLE = \"fill:none\";\nconst G_EDGE_ARROWHEADSTYLE = \"fill: #333\";\nconst G_EDGE_LABELPOS = \"c\";\nconst G_EDGE_LABELTYPE = \"text\";\nconst G_EDGE_THICKNESS = \"normal\";\nlet nodeDb = {};\nlet graphItemCount = 0;\nconst setConf = function(cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    cnf[key];\n  }\n};\nconst getClasses = function(text, diagramObj) {\n  diagramObj.db.extract(diagramObj.db.getRootDocV2());\n  return diagramObj.db.getClasses();\n};\nfunction getClassesFromDbInfo(dbInfoItem) {\n  if (dbInfoItem === void 0 || dbInfoItem === null) {\n    return \"\";\n  } else {\n    if (dbInfoItem.classes) {\n      return dbInfoItem.classes.join(\" \");\n    } else {\n      return \"\";\n    }\n  }\n}\nfunction stateDomId(itemId = \"\", counter = 0, type = \"\", typeSpacer = DOMID_TYPE_SPACER) {\n  const typeStr = type !== null && type.length > 0 ? `${typeSpacer}${type}` : \"\";\n  return `${DOMID_STATE}-${itemId}${typeStr}-${counter}`;\n}\nconst setupNode = (g, parent, parsedItem, diagramStates, diagramDb, altFlag) => {\n  const itemId = parsedItem.id;\n  const classStr = getClassesFromDbInfo(diagramStates[itemId]);\n  if (itemId !== \"root\") {\n    let shape = SHAPE_STATE;\n    if (parsedItem.start === true) {\n      shape = SHAPE_START;\n    }\n    if (parsedItem.start === false) {\n      shape = SHAPE_END;\n    }\n    if (parsedItem.type !== DEFAULT_STATE_TYPE) {\n      shape = parsedItem.type;\n    }\n    if (!nodeDb[itemId]) {\n      nodeDb[itemId] = {\n        id: itemId,\n        shape,\n        description: common.sanitizeText(itemId, getConfig()),\n        classes: `${classStr} ${CSS_DIAGRAM_STATE}`\n      };\n    }\n    const newNode = nodeDb[itemId];\n    if (parsedItem.description) {\n      if (Array.isArray(newNode.description)) {\n        newNode.shape = SHAPE_STATE_WITH_DESC;\n        newNode.description.push(parsedItem.description);\n      } else {\n        if (newNode.description.length > 0) {\n          newNode.shape = SHAPE_STATE_WITH_DESC;\n          if (newNode.description === itemId) {\n            newNode.description = [parsedItem.description];\n          } else {\n            newNode.description = [newNode.description, parsedItem.description];\n          }\n        } else {\n          newNode.shape = SHAPE_STATE;\n          newNode.description = parsedItem.description;\n        }\n      }\n      newNode.description = common.sanitizeTextOrArray(newNode.description, getConfig());\n    }\n    if (newNode.description.length === 1 && newNode.shape === SHAPE_STATE_WITH_DESC) {\n      newNode.shape = SHAPE_STATE;\n    }\n    if (!newNode.type && parsedItem.doc) {\n      log.info(\"Setting cluster for \", itemId, getDir(parsedItem));\n      newNode.type = \"group\";\n      newNode.dir = getDir(parsedItem);\n      newNode.shape = parsedItem.type === DIVIDER_TYPE ? SHAPE_DIVIDER : SHAPE_GROUP;\n      newNode.classes = newNode.classes + \" \" + CSS_DIAGRAM_CLUSTER + \" \" + (altFlag ? CSS_DIAGRAM_CLUSTER_ALT : \"\");\n    }\n    const nodeData = {\n      labelStyle: \"\",\n      shape: newNode.shape,\n      labelText: newNode.description,\n      // typeof newNode.description === 'object'\n      //   ? newNode.description[0]\n      //   : newNode.description,\n      classes: newNode.classes,\n      style: \"\",\n      //styles.style,\n      id: itemId,\n      dir: newNode.dir,\n      domId: stateDomId(itemId, graphItemCount),\n      type: newNode.type,\n      padding: 15\n      //getConfig().flowchart.padding\n    };\n    nodeData.centerLabel = true;\n    if (parsedItem.note) {\n      const noteData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTE,\n        labelText: parsedItem.note.text,\n        classes: CSS_DIAGRAM_NOTE,\n        // useHtmlLabels: false,\n        style: \"\",\n        // styles.style,\n        id: itemId + NOTE_ID + \"-\" + graphItemCount,\n        domId: stateDomId(itemId, graphItemCount, NOTE),\n        type: newNode.type,\n        padding: 15\n        //getConfig().flowchart.padding\n      };\n      const groupData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTEGROUP,\n        labelText: parsedItem.note.text,\n        classes: newNode.classes,\n        style: \"\",\n        // styles.style,\n        id: itemId + PARENT_ID,\n        domId: stateDomId(itemId, graphItemCount, PARENT),\n        type: \"group\",\n        padding: 0\n        //getConfig().flowchart.padding\n      };\n      graphItemCount++;\n      const parentNodeId = itemId + PARENT_ID;\n      g.setNode(parentNodeId, groupData);\n      g.setNode(noteData.id, noteData);\n      g.setNode(itemId, nodeData);\n      g.setParent(itemId, parentNodeId);\n      g.setParent(noteData.id, parentNodeId);\n      let from = itemId;\n      let to = noteData.id;\n      if (parsedItem.note.position === \"left of\") {\n        from = noteData.id;\n        to = itemId;\n      }\n      g.setEdge(from, to, {\n        arrowhead: \"none\",\n        arrowType: \"\",\n        style: G_EDGE_STYLE,\n        labelStyle: \"\",\n        classes: CSS_EDGE_NOTE_EDGE,\n        arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n        labelpos: G_EDGE_LABELPOS,\n        labelType: G_EDGE_LABELTYPE,\n        thickness: G_EDGE_THICKNESS\n      });\n    } else {\n      g.setNode(itemId, nodeData);\n    }\n  }\n  if (parent && parent.id !== \"root\") {\n    log.trace(\"Setting node \", itemId, \" to be child of its parent \", parent.id);\n    g.setParent(itemId, parent.id);\n  }\n  if (parsedItem.doc) {\n    log.trace(\"Adding nodes children \");\n    setupDoc(g, parsedItem, parsedItem.doc, diagramStates, diagramDb, !altFlag);\n  }\n};\nconst setupDoc = (g, parentParsedItem, doc, diagramStates, diagramDb, altFlag) => {\n  log.trace(\"items\", doc);\n  doc.forEach((item) => {\n    switch (item.stmt) {\n      case STMT_STATE:\n        setupNode(g, parentParsedItem, item, diagramStates, diagramDb, altFlag);\n        break;\n      case DEFAULT_STATE_TYPE:\n        setupNode(g, parentParsedItem, item, diagramStates, diagramDb, altFlag);\n        break;\n      case STMT_RELATION:\n        {\n          setupNode(g, parentParsedItem, item.state1, diagramStates, diagramDb, altFlag);\n          setupNode(g, parentParsedItem, item.state2, diagramStates, diagramDb, altFlag);\n          const edgeData = {\n            id: \"edge\" + graphItemCount,\n            arrowhead: \"normal\",\n            arrowTypeEnd: \"arrow_barb\",\n            style: G_EDGE_STYLE,\n            labelStyle: \"\",\n            label: common.sanitizeText(item.description, getConfig()),\n            arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n            labelpos: G_EDGE_LABELPOS,\n            labelType: G_EDGE_LABELTYPE,\n            thickness: G_EDGE_THICKNESS,\n            classes: CSS_EDGE\n          };\n          g.setEdge(item.state1.id, item.state2.id, edgeData, graphItemCount);\n          graphItemCount++;\n        }\n        break;\n    }\n  });\n};\nconst getDir = (parsedItem, defaultDir = DEFAULT_NESTED_DOC_DIR) => {\n  let dir = defaultDir;\n  if (parsedItem.doc) {\n    for (let i = 0; i < parsedItem.doc.length; i++) {\n      const parsedItemDoc = parsedItem.doc[i];\n      if (parsedItemDoc.stmt === \"dir\") {\n        dir = parsedItemDoc.value;\n      }\n    }\n  }\n  return dir;\n};\nconst draw = async function(text, id, _version, diag) {\n  log.info(\"Drawing state diagram (v2)\", id);\n  nodeDb = {};\n  diag.db.getDirection();\n  const { securityLevel, state: conf } = getConfig();\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n  log.info(diag.db.getRootDocV2());\n  diag.db.extract(diag.db.getRootDocV2());\n  log.info(diag.db.getRootDocV2());\n  const diagramStates = diag.db.getStates();\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: getDir(diag.db.getRootDocV2()),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  setupNode(g, void 0, diag.db.getRootDocV2(), diagramStates, diag.db, true);\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(element, g, [\"barb\"], CSS_DIAGRAM, id);\n  const padding = 8;\n  utils.insertTitle(svg, \"statediagramTitleText\", conf.titleTopMargin, diag.db.getDiagramTitle());\n  const bounds = svg.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  svg.attr(\"class\", CSS_DIAGRAM);\n  const svgBounds = svg.node().getBBox();\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`;\n  log.debug(`viewBox ${vBox}`);\n  svg.attr(\"viewBox\", vBox);\n  const labels = document.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n  for (const label of labels) {\n    const dim = label.getBBox();\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", SHAPE_STATE);\n    rect.setAttribute(\"rx\", 0);\n    rect.setAttribute(\"ry\", 0);\n    rect.setAttribute(\"width\", dim.width);\n    rect.setAttribute(\"height\", dim.height);\n    label.insertBefore(rect, label.firstChild);\n  }\n};\nconst renderer = {\n  setConf,\n  getClasses,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["D","DEFAULT_STATE_TYPE","a","DIVIDER_TYPE","S","STMT_RELATION","b","STMT_STATE","c","DEFAULT_NESTED_DOC_DIR","p","parser","d","db","s","styles","graphlib","select","l","log","getConfig","u","utils","i","configureSvgSize","e","common","r","render","SHAPE_STATE","SHAPE_STATE_WITH_DESC","SHAPE_START","SHAPE_END","SHAPE_DIVIDER","SHAPE_GROUP","SHAPE_NOTE","SHAPE_NOTEGROUP","CSS_DIAGRAM","CSS_STATE","CSS_DIAGRAM_STATE","CSS_EDGE","CSS_NOTE","CSS_NOTE_EDGE","CSS_EDGE_NOTE_EDGE","CSS_DIAGRAM_NOTE","CSS_CLUSTER","CSS_DIAGRAM_CLUSTER","CSS_CLUSTER_ALT","CSS_DIAGRAM_CLUSTER_ALT","PARENT","NOTE","DOMID_STATE","DOMID_TYPE_SPACER","NOTE_ID","PARENT_ID","G_EDGE_STYLE","G_EDGE_ARROWHEADSTYLE","G_EDGE_LABELPOS","G_EDGE_LABELTYPE","G_EDGE_THICKNESS","nodeDb","graphItemCount","setConf","cnf","keys","Object","key","getClasses","text","diagramObj","extract","getRootDocV2","getClassesFromDbInfo","dbInfoItem","classes","join","stateDomId","itemId","counter","type","typeSpacer","typeStr","length","setupNode","g","parent","parsedItem","diagramStates","diagramDb","altFlag","id","classStr","shape","start","description","sanitizeText","newNode","Array","isArray","push","sanitizeTextOrArray","doc","info","getDir","dir","nodeData","labelStyle","labelText","style","domId","padding","centerLabel","note","noteData","groupData","parentNodeId","setNode","setParent","from","to","position","setEdge","arrowhead","arrowType","arrowheadStyle","labelpos","labelType","thickness","trace","setupDoc","parentParsedItem","forEach","item","stmt","state1","state2","edgeData","arrowTypeEnd","label","defaultDir","parsedItemDoc","value","draw","_ref","_asyncToGenerator","_version","diag","getDirection","securityLevel","state","conf","nodeSpacing","rankSpacing","getStates","Graph","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","sandboxElement","root","nodes","contentDocument","body","svg","element","insertTitle","titleTopMargin","getDiagramTitle","bounds","node","getBBox","width","height","attr","svgBounds","useMaxWidth","vBox","x","y","debug","labels","document","querySelectorAll","dim","rect","createElementNS","setAttribute","insertBefore","firstChild","_x","_x2","_x3","_x4","apply","arguments","renderer","diagram","init","arrowMarkerAbsolute","clear"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}