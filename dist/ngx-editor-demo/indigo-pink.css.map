{"version":3,"file":"indigo-pink.css","mappings":";;;AAAA;EACE,kBAAkB;EAClB,WAAW;EACX,gBAAgB;EAChB,gBAAgB;;EAEhB,SAAS;EACT,YAAY;EAIZ,sCAAsC;EACtC,kBAAkB;EAClB,wBAAwB;;EAExB,iBAAiB;EACjB,cAAc;EACd,sBAAsB;;EAEtB,gBAAgB;EAChB,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,cAAc;EACd,kBAAkB;EAClB,gBAAgB;EAChB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,YAAY;AACd;;;;;ACpCA;AAEA;EACE;EACA;EACA;EACA;EACA;ACCF;;ADEA;AAEA;EACE;ACAF;;ADEA;;EAEE;ACCF;;ADEA;EACE;ACCF;;ADEA;AAEA;EACE;EACA;EACA;ACAF;;ADGA;EACE;EACA;EACA;EACA;EACA;ACAF;;ADGA;EAA2B;ACC3B;;ADAA;EAAkC;ACIlC;;ADFA;AAEA;EACE;EACA;EACA;ACIF;;ADFA;AACA;EACE;ACKF;;ADHA;EACE;EACA;EACA;ACMF;;ADJA;EACE;ACOF;;ADLA;;;EAE2D;ACS3D;;ADRA;;;EAEgE;ACYhE;;ADXA;EAAiB;ACejB;ADJA;EAEE;IAAM;ECiBN;AACF;ADdA;AAGA;EAAU;EAAuB;ACgBjC;;ADdA;EACE;EACA;EAAS;EAAU;EAAY;EAC/B;ACoBF;;ADlBA;EACE;EACA;EAAQ;EACR;ACsBF;;ADnBA;AAEA;EAA0B;ACsB1B;;ADrBA;EAAyB;ACyBzB;;ADxBA;EAAc;AC4Bd;;AD3BA;EAAc;AC+Bd;;AD9BA;EAAwB;ACkCxB;;ADjCA;EAAQ;ACqCR;;ADpCA;EAAU;ACwCV;;ADvCA;EAAmB;AC2CnB;;ADzCA;EAA2B;AC6C3B;;AD5CA;EAAwB;ACgDxB;;AD/CA;EAA0B;ACmD1B;;ADlDA;EAAuB;ACsDvB;;ADjDA;EAA8B;ACqD9B;;ADpDA;EAAsD;ACwDtD;;ADvDA;EAA2B;AC2D3B;;AD1DA;EAA0B;AC8D1B;;AD7DA;EAA4B;ACiE5B;;ADhEA;EAAwB;ACoExB;;ADnEA;EAA6B;ACuE7B;;ADtEA;EAA2B;AC0E3B;;ADzEA;EAA2B;AC6E3B;;AD5EA;EAAuB;ACgFvB;;AD/EA;EAA6B;ACmF7B;;ADlFA;EAAsB;ACsFtB;;ADrFA;EAAwB;ACyFxB;;ADvFA;EAAyB;AC2FzB;;AD1FA;EAAiB;AC8FjB;;AD5FA;EAAwB;ACgGxB;;AD9FA;AAEA;EAAgD;ACiGhD;;ADhGA;EAAmD;ACoGnD;;ADnGA;EAA0B;ACuG1B;;ADtGA;EAAmC;AC0GnC;;ADxGA;AAEA;mDAAA;AAGA;EACE;EACA;EACA;ACyGF;;ADtGA;EACE;EACA;EACA;EACA;EAAsB;EACtB;EACA;EACA;EACA;EACA;AC0GF;;ADxGA;EACE;EACA;AC2GF;;ADxGA;;0BAAA;AAGA;EACE;EACA;EACA;EACA;AC2GF;;ADzGA;EACE;EAAU;EACV;EACA;AC6GF;;AD3GA;EACE;EAAW;EACX;EACA;AC+GF;;AD7GA;EACE;EAAU;ACiHZ;;AD/GA;EACE;EAAS;ACmHX;;ADhHA;EACE;EAAoB;EAAS;EAC7B;EACA;ACqHF;;ADnHA;EACE;EACA;EACA;EACA;EACA;ACsHF;;ADpHA;EACE;EACA;EACA;EACA;ACuHF;;ADrHA;EACE;EACA;EAAQ;EACR;ACyHF;;ADvHA;EACE;EACA;EACA;AC0HF;;ADxHA;EAAyC;AC4HzC;;AD3HA;EAA8C;AC+H9C;;AD7HA;EACE;EACA;ACgIF;;AD9HA;;EAEE;EACiD;EACjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;ACmIF;;ADjIA;;EAEE;EACA;EACA;ACoIF;;ADjIA;EACE;EACA;EAAS;EAAU;EAAQ;EAC3B;ACuIF;;ADpIA;EACE;EACA;EACA;ACuIF;;ADlIA;EAAsB;ACsItB;;ADpIA;EACE;ACuIF;;ADpIA;AACA;;;;;EAME;ACuIF;;ADpIA;EACE;EACA;EACA;EACA;EACA;ACuIF;;ADpIA;EACE;EACA;ACuIF;;ADrIA;EAA0B;ACyI1B;;ADvIA;EACE;EACA;EACA;AC0IF;;ADxIA;EACE;AC2IF;;ADxIA;EACE;AC2IF;;ADxIA;EAAuB;AC4IvB;;AD3IA;EAA2C;AC+I3C;;AD9IA;EAAwB;ACkJxB;;ADjJA;EAA6G;ACqJ7G;;ADpJA;EAA4H;ACwJ5H;;ADtJA;EACE;EACA;ACyJF;;ADtJA;AACA;EAAmB;AC0JnB;;ADxJA;EACE;EACA;IACE;EC2JF;AACF;ADxJA;AACA;EAA0B;AC2J1B;;ADzJA;AACA;EAA+B;AC6J/B;;ACpfA;;;;CAAA;AAMA;EACE;EACA;ADsfF;;ACnfA;EACE;EACA;EACA;ADsfF;;ACnfA;;;EAGE;ADsfF;;ACnfA;EACE;ADsfF;;ACpfA;EACE;ADufF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;;;EAGE;ADwfF;;ACrfA;;;EAGE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;;EAEE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;EACE;ADwfF;;ACrfA;;EAEE;ADwfF;;ACpfA;EACE;EACA;ADufF;;ACpfA;EACE;EACA;ADufF;;AEloBA;;;;CAAA;AAMA;EACE;EACA;AFooBF;;AEjoBA;EACE;EACA;EACA;AFooBF;;AEjoBA;;;EAGE;AFooBF;;AEjoBA;EACE;AFooBF;;AEloBA;EACE;AFqoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;;;EAGE;AFsoBF;;AEnoBA;;;EAGE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;;EAEE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;EACE;AFsoBF;;AEnoBA;;EAEE;AFsoBF;;AEloBA;EACE;EACA;AFqoBF;;AEloBA;EACE;EACA;AFqoBF;;AGrwBA;EACE;EACA;AHwwBF;;AIrxBA;;CAAA;AAGA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;UAAA;EACA;AJwxBF;;AIjxBA;EACE;EACA;AJoxBF;;AIjxBA;EACE;AJoxBF;;AIjxBA;;EAEE;AJoxBF;;AIjxBA;;;;EAIE;AJoxBF;;AIjxBA;EACE;AJoxBF;;AIlxBA;EACE;AJqxBF;;AInxBA;EACE;AJsxBF;;AIpxBA;EACE;AJuxBF;;AIrxBA;EACE;AJwxBF;;AIrxBA;EACE;AJwxBF;;AIrxBA;;;;;EAKE;AJwxBF;;AIrxBA;EACE;AJwxBF;;AIpxBA;EACE;AJuxBF;;AIpxBA;EACE;AJuxBF;;AIpxBA;EACE;AJuxBF;;AIpxBA;EACE;EACA;EACA;EACA;AJuxBF;;AIpxBA;EACE;EACA;EACA;EACA;AJuxBF;;AIpxBA;EACE;AJuxBF;;AIpxBA;EACE;AJuxBF;;AIpxBA;EACE;AJuxBF;;AIpxBA;EACE;AJuxBF;;AIpxBA;EACE;AJuxBF;;AK13BI;EC8DA;ANg0BJ;;AK93BI;EC8DA;EAAA;EAAA;EAAA;EAAA;ANw0BJ;;AOt4BE;ED8DE;EAAA;EAAA;EAAA;EAAA;ANg1BJ;;AOz4BE;EDyDE;EAAA;EAAA;EAAA;EAAA;ANw1BJ;;AKt5BI;EC8DA;AN41BJ;;AQj4BE;EACE,+BAXe;AR+4BnB;AQn4BI;EACE,cANa;AR24BnB;;AQ36BI;;EACE,cAoBM;AR25BZ;AQ36BI;;EAKE,mBAWM;AR+5BZ;AQ96BM;;EACE,cAiBO;ARg6Bf;;AQx7BI;;EACE,cAqBK;ARu6BX;AQx7BI;;EAKE,mBAYK;AR26BX;AQ37BM;;EACE,cAiBO;AR66Bf;;AQr8BI;;EACE,cAqBK;ARo7BX;AQr8BI;;EAKE,mBAYK;ARw7BX;AQx8BM;;EACE,cAiBO;AR07Bf;;AQl9BI;;EACE,cAsBG;ARg8BT;AQl9BI;;EAKE,mBAaG;ARo8BT;AQr9BM;;EACE,cAiBO;ARu8Bf;;AQj6BI;;EACE,cA/Ba;ARo8BnB;AQl6BI;;EACE,mBAnCa;ARw8BnB;;ASn9BE;EACE;EACA;ATs9BJ;;AS58BI;EHuCA;ANy6BJ;;ASh9BI;EHuCA;AN66BJ;;ASp9BI;EHuCA;ANi7BJ;;ASx9BI;EHuCA;ANq7BJ;;AS59BI;EHuCA;ANy7BJ;;ASh+BI;EHuCA;AN67BJ;;ASp+BI;EHuCA;ANi8BJ;;ASx+BI;EHuCA;ANq8BJ;;AS5+BI;EHuCA;ANy8BJ;;ASh/BI;EHuCA;AN68BJ;;ASp/BI;EHuCA;ANi9BJ;;ASx/BI;EHuCA;ANq9BJ;;AS5/BI;EHuCA;ANy9BJ;;AShgCI;EHuCA;AN69BJ;;ASpgCI;EHuCA;ANi+BJ;;ASxgCI;EHuCA;ANq+BJ;;AS5gCI;EHuCA;ANy+BJ;;AShhCI;EHuCA;AN6+BJ;;ASphCI;EHuCA;ANi/BJ;;ASxhCI;EHuCA;ANq/BJ;;AS5hCI;EHuCA;ANy/BJ;;AShiCI;EHuCA;AN6/BJ;;ASpiCI;EHuCA;ANigCJ;;ASxiCI;EHuCA;ANqgCJ;;AS5iCI;EHuCA;ANygCJ;;ASziCI;EACE;AT4iCN;;AK3kCI;EC8DA;EAAA;EAAA;EAAA;EAAA;ANqhCJ;;AKnlCI;EC8DA;EAAA;EAAA;EAAA;EAAA;AN6hCJ;;AK3lCI;EC8DA;EAAA;EAAA;ANmiCJ;;AKjmCI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;AN4iCJ;;AK1mCI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANyjCJ;;AKvnCI;EC8DA;EAAA;EAAA;AN+jCJ;;AUnmCI;EJoCA;EAAA;ANokCJ;AWt9BI;EACE;IClIF;EZ2lCF;AACF;AW1gCE;EL3EI;EMZF;ENwBA;AN8kCJ;AW3gCM;EAJJ;IAKM;EX8gCN;AACF;Aa9kCE;EF0DA;IASM;ILxEJ;ENwlCF;AACF;AWpgCE;ELjGI;EMZF;ENwBA;AN8lCJ;AU/nCM;EJiCF;EAAA;ANkmCJ;AWp/BI;EACE;IClIF;EZynCF;AACF;AWxiCE;EL3EI;EMZF;ENwBA;AN4mCJ;AWziCM;EAJJ;IAKM;EX4iCN;AACF;Aa5mCE;EF0DA;IASM;ILxEJ;ENsnCF;AACF;AWliCE;ELjGI;EMZF;ENwBA;AN4nCJ;AUzpCM;EJ6BF;EAAA;ANgoCJ;AWlhCI;EACE;IClIF;EZupCF;AACF;AWtkCE;EL3EI;EMZF;ENwBA;AN0oCJ;AWvkCM;EAJJ;IAKM;EX0kCN;AACF;Aa1oCE;EF0DA;IASM;ILxEJ;ENopCF;AACF;AWhkCE;ELjGI;EMZF;ENwBA;AN0pCJ;AKxtCI;EC8DA;EAAA;AN8pCJ;;AK5tCI;EC8DA;EAAA;ANmqCJ;;AKjuCI;EC8DA;EAAA;EAAA;EAAA;AN0qCJ;;AKxuCI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;ANmrCJ;;AKjvCI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANouCJ;;Ac7wCE;ERyCE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN8uCJ;;Ac9wCE;ERgCE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANwvCJ;;Ae/vCE;EACE,gBA7BO;Af+xCX;;Ae3vCE;EACE;Af8vCJ;;AexvCE;EAEE;;qEAAA;EAGA;Af0vCJ;;AezzCE;EACE;EACA;Af4zCJ;;Ae90CE;EACE;EACA;Afi1CJ;;Ae90CE;EAEE;EACA;Afg1CJ;;AKp1CI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN4yCJ;;AK12CI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANuzCJ;AgBp3CI;EV6DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANi0CJ;AgBz3CI;EVwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN20CJ;;AKz4CI;EC8DA;EAAA;EAAA;EAAA;EAAA;ANm1CJ;;AKj5CI;EC8DA;ANu1CJ;;AKr5CI;EC8DA;EAAA;EAAA;AN61CJ;;AK35CI;EC8DA;EAAA;EAAA;ANm2CJ;;AKj6CI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANg3CJ;;AiBt7CE;EXsEE;EAAA;EAAA;EAAA;EAAA;EAAA;ANy3CJ;;AiBz7CE;EXgEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANu4CJ;AiBj8CM;EX0DF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANo5CJ;AiBz8CM;EXqDF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANi6CJ;AiBj9CM;EXgDF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN86CJ;;AiB38CE;EX6BE;ANk7CJ;;AiBv9CE;EXqCE;EAAA;EAAA;EAAA;EAAA;AN07CJ;;AkB7/CE;EZmEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANg9CJ;;AkBxgDI;EZwDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANq/CJ;AmB7hDE;EbwCE;ANw/CJ;AkB3iDM;EACE;AlB6iDR;AkBziDM;EZ8CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANwgDJ;AkBjjDM;EZyCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANqhDJ;;AkBpiDE;EZeE;ANyhDJ;;AkBrjDE;EZ4BE;EAAA;EAAA;EAAA;EAAA;ANiiDJ;AmBzkDE;ECmSE;EACA;EdxQE;EMZF;ENwBA;EAZE;EMZF;ENwBA;EAZE;EMZF;ENwBA;EAZE;EMZF;ENwBA;EAZE;EMZF;ENwBA;EAZE;EMZF;ENwBA;UAAA;EAZE;EMZF;ENwBA;AN0jDJ;;AKxnDI;EC8DA;EAAA;EAAA;ANgkDJ;;AmBxmDE;EbwCE;ANokDJ;;AqB7mDM;EfyCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANmlDJ;AqBtnDM;EfmCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANimDJ;AqB9nDM;Ef6BF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN+mDJ;;AK7qDI;EC8DA;ANmnDJ;;AmB3pDE;ECmSE;EACA;Ed5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AN+nDJ;;AK7rDI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN8oDJ;;AK5sDI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EgB+BF;EACA;EACA;EhBjCE;ANoqDJ;AsBpsDI;EhBgCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EgB+BF;EACA;EACA;AtB+oDF;AsB1sDM;EhB0BF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EgB+BF;EACA;EACA;AtB2pDF;;AK1vDI;EC8DA;EAAA;EAAA;EAAA;EAAA;ANosDJ;;AKlwDI;EC8DA;ANwsDJ;;AKtwDI;EC8DA;EAAA;EAAA;EAAA;EAAA;ANgtDJ;;AK9wDI;EC8DA;EAAA;EAAA;EAAA;EAAA;ANwtDJ;;AKtxDI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANwuDJ;;AKtyDI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN4vDJ;;AuB7yDE;;EjBiDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANywDJ;;AuBpzDI;;EjB2CA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANsxDJ;;AuB1zDI;;EjBoCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANmyDJ;;AuBj0DE;EjB8BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANuzDJ;;AuBl1DE;EjB2BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN20DJ;;AuBn2DE;EjBwBE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN+1DJ;;AwBroCE;;ElB1tBE;ANo2DJ;AwB3dI;;ElBz4CA;ANw2DJ;;AuBl3DI;;;EAGE;AvBq3DN;;AK56DI;EC8DA;EAAA;EAAA;ANo3DJ;;AuB72DE;;EjBPE;ANy3DJ;;AuBt2DM;EACE;AvBy2DR;AuB/1DM;EACE;AvBi2DR;;AK97DI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANk5DJ;;AuB51DE;EACE;EACA;AvB+1DJ;;AKr9DI;EC8DA;EAAA;EAAA;EAAA;AN85DJ;;AK59DI;EC8DA;ANk6DJ;;Aez6DE;EACE,gBA7BO;Afy8DX;Aer6DE;EACE;Afu6DJ;Aej6DE;EAEE;;qEAAA;EAGA;Afk6DJ;Aej+DE;EACE;EACA;Afm+DJ;Aer/DE;EACE;EACA;Afu/DJ;Aep/DE;EAEE;EACA;Afq/DJ;Ae/5DI;EACI;Afi6DR;;AK5/DI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;ANu8DJ;;AKrgEI;EC8DA;EAAA;EAAA;AN68DJ;;AyBjgEE;EnBoDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN69DJ;AyB9gEI;EnBiDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN4+DJ;AyBzhEI;EnB6CA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN2/DJ;AyBpiEI;EnByCA;EAAA;AN+/DJ;AyBpiEI;EnBqCA;EAAA;ANmgEJ;AyBpiEI;EnBiCA;EAAA;ANugEJ;;AyBtgEE;EnBDE;AN2gEJ;;AyBvhEE;EnBYE;EAAA;EAAA;EAAA;EAAA;ANmhEJ;;AKjlEI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN6hEJ;;AK3lEI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANijEJ;;A0BhmEM;EpB+CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANqkEJ;A0BhnEM;EpB2CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANwlEJ;AmBhoEE;EbwCE;AN2lEJ;A0B7nEM;EAEE;A1B8nER;;AK5pEI;EC8DA;ANkmEJ;;AmB1oEE;ECmSE;EACA;Ed5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AN8mEJ;;A2BpmEE;ErBVE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANwnEJ;A2B3mEI;ErBbA;EAAA;EAAA;AN6nEJ;A2B5mEI;ErBjBA;EAAA;EAAA;ANkoEJ;A2B7mEI;ErBrBA;EAAA;EAAA;ANuoEJ;;A2B7mEE;ErB1BE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANmpEJ;A2BtnEI;ErB7BA;EAAA;EAAA;EAAA;ANypEJ;A2BxnEI;ErBjCA;EAAA;EAAA;EAAA;AN+pEJ;A2B1nEI;ErBrCA;EAAA;EAAA;EAAA;ANqqEJ;;A2B3nEE;ErB1CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANkrEJ;A2BroEI;ErB7CA;EAAA;EAAA;EAAA;ANwrEJ;A2BvoEI;ErBjDA;EAAA;EAAA;EAAA;AN8rEJ;A2BzoEI;ErBrDA;EAAA;EAAA;EAAA;ANosEJ;A2BvoEM;ErB7DF;ANusEJ;A2BtoEM;ErBjEF;AN0sEJ;;A2BnoEE;ErBvEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANstEJ;A2B5oEI;ErB1EA;EAAA;EAAA;EAAA;AN4tEJ;A2B9oEI;ErB9EA;EAAA;EAAA;EAAA;ANkuEJ;A2BhpEI;ErBlFA;EAAA;EAAA;EAAA;ANwuEJ;;A2BvoEE;ErBjGE;AN4uEJ;;A2BroEE;ErBvGE;ANgvEJ;;A2BnoEE;ErB7GE;ANovEJ;;A2BjoEE;ErBnHE;ANwvEJ;;A4B5qEE;ER+KE;EACA;Ed5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;ANowEJ;;A6BlzEE;EvB8CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN8wEJ;A6BzzEI;EvB2CA;EAAA;EAAA;ANmxEJ;A6B1zEI;EvBuCA;EAAA;EAAA;ANwxEJ;A6B3zEI;EvBmCA;EAAA;EAAA;AN6xEJ;;A6BtyEE;EvBSE;EuBGA;EACA;EACA;A7B+xEJ;;AKl2EI;EC8DA;EAAA;ANyyEJ;;AKv2EI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANqzEJ;A8Bt1EM;;ExBiCF;EAAA;EAAA;EAAA;AN4zEJ;A8Bz1EM;;ExB6BF;EAAA;EAAA;EAAA;ANm0EJ;A8B51EM;;ExByBF;EAAA;EAAA;EAAA;AN00EJ;;A+Br1EE;EXsQE;EACA;Ed5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;ANs1EJ;AKp5EI;EC8DA;EAAA;EAAA;EAAA;AN41EJ;;AK15EI;EC8DA;ANg2EJ;;AK95EI;EC8DA;EAAA;EAAA;ANs2EJ;;AKp6EI;EC8DA;EAAA;EAAA;EAAA;AN62EJ;;AK36EI;EC8DA;ANi3EJ;;AK/6EI;EC8DA;EAAA;EAAA;EAAA;ANw3EJ;;AKt7EI;EC8DA;EAAA;EAAA;AN83EJ;;AK57EI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANg5EJ;;AK98EI;EC8DA;EAAA;ANq5EJ;;AKn9EI;EC8DA;ANy5EJ;AgCx8EM;E1B+CF;AN45EJ;AgCt8EM;E1B0CF;AN+5EJ;;AiCj5EE;EACE;AjCo5EJ;AiC94EI;EACE;AjCg5EN;;AiC54EE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;E3BpCA;EAAA;EAZE;EMZF;ENwBA;EAZE;EMZF;ENwBA;EAZE;EMZF;ENwBA;AN87EJ;AkC19EI;ED2EE;EACA;AjCk5EN;;AiC94EE;E3BpDE;EAAA;ANu8EJ;;AiC54EE;EACE;AjC+4EJ;;AiC54EE;;EAEE;AjC+4EJ;;AiC14EE;EAEE;AjC44EJ;;AiCtgFE;EACE,WAdS;EAeT,YAfS;EAgBT,iBAhBS;E3BmDP;EMZF;ENwBA;AN69EJ;AiClgFE;EACE;AjCogFJ;AiCjgFE;EACE;AjCmgFJ;AiChgFE;EACE;AjCkgFJ;AiC//EE;EACE;EACA;AjCigFJ;AiC9/EE;EACE;AjCggFJ;AiC7/EE;EACE;EACA;AjC+/EJ;AiC3/EI;EACE;AjC6/EN;AiC1/EI;EACE;EACA;AjC4/EN;AiCz/EI;EACE;AjC2/EN;AiCx/EI;EACE;EACA;AjC0/EN;;AiCjjFE;EACE,WAfW;EAgBX,YAhBW;EAiBX,iBAjBW;AjCqkFf;AiC1iFE;EACE;AjC4iFJ;AiCziFE;EACE;AjC2iFJ;AiCxiFE;EACE;AjC0iFJ;AiCviFE;EACE;EACA;AjCyiFJ;AiCtiFE;EACE;AjCwiFJ;AiCriFE;EACE;EACA;AjCuiFJ;AiCniFI;EACE;AjCqiFN;AiCliFI;EACE;EACA;AjCoiFN;AiCjiFI;EACE;AjCmiFN;AiChiFI;EACE;EACA;AjCkiFN;;AiCzlFE;EACE,WAbS;EAcT,YAdS;EAeT,iBAfS;E3BkDP;EMZF;ENwBA;ANgjFJ;AiCrlFE;EACE;AjCulFJ;AiCplFE;EACE;AjCslFJ;AiCnlFE;EACE;AjCqlFJ;AiCllFE;EACE;EACA;AjColFJ;AiCjlFE;EACE;AjCmlFJ;AiChlFE;EACE;EACA;AjCklFJ;AiC9kFI;EACE;AjCglFN;AiC7kFI;EACE;EACA;AjC+kFN;AiC5kFI;EACE;AjC8kFN;AiC3kFI;EACE;EACA;AjC6kFN;;AKhpFI;EC8DA;EAAA;EAAA;EAAA;ANylFJ;;AiCz/EE;E3BhGE;EAAA;AN8lFJ;;AiCz/EE;E3BrGE;EAAA;ANmmFJ;;AKjqFI;EC8DA;EAAA;EAAA;EAAA;EAAA;AN2mFJ;;AKzqFI;EC8DA;AN+mFJ;;AK7qFI;EC8DA;EAAA;ANonFJ;;AKlrFI;EC8DA;EAAA;EAAA;EAAA;EAAA;AN4nFJ;;AK1rFI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;ANqoFJ;;AKnsFI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANypFJ;;AKvtFI;EC8DA;AN6pFJ;;AK3tFI;EC8DA;EAAA;ANkqFJ;;AKhuFI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANisFJ;;AmCzuFI;E7BwCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN8sFJ;AmClvFI;E7BoCA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN0tFJ;;AmCxvFI;E7B8BA;AN8tFJ;AmCtvFI;E7BwBA;ANiuFJ;;A6B1uFE;EvBSE;EuBGA;EACA;EACA;A7BmuFJ;AoC/sFI;EACE;ApCitFN;;AKzyFI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANsvFJ;;AKpzFI;EC8DA;AN0vFJ;;AKxzFI;EC8DA;AN8vFJ;;AK5zFI;EC8DA;ANkwFJ;;AKh0FI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN8wFJ;;AK50FI;EC8DA;EAAA;ANmxFJ;;AKj1FI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANgyFJ;;AK91FI;EC8DA;EAAA;EAAA;EAAA;ANuyFJ;;AKr2FI;EC8DA;AN2yFJ;;AqCp2FI;E/ByDA;AN+yFJ;AqCp2FI;E/BqDA;ANkzFJ;AqCn2FI;E/BiDA;ANqzFJ;;AKn3FI;EC8DA;ANyzFJ;;AKv3FI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;ANk0FJ;;AKh4FI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANu1FJ;AsCv5FI;EhCgEA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANg2FJ;AsC35FI;EhC2DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANy2FJ;;AKv6FI;EC8DA;AN62FJ;;AK36FI;EC8DA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ANu3FJ;;AKr7FI;EC8DA;AN23FJ;;AKz7FI;EC8DA;EAAA;ANg4FJ;;AuC/6FM;EjC+CF;EAAA;ANq4FJ;AuCh7FM;EjC2CF;EAAA;ANy4FJ;AuCh7FM;EjCuCF;EAAA;AN64FJ;;AK38FI;EC8DA;EAAA;ANk5FJ;;AKh9FI;EC8DA;EAAA;EAAA;EAAA;EAAA;AN05FJ;;AKx9FI;EC8DA;EAAA;AN+5FJ;;AK79FI;EC8DA;ANm6FJ;;AKj+FI;EC8DA;EAAA;EAAA;ANy6FJ;;AwC39FE;EACE;AxC89FJ;;AwC39FE;EACE;AxC89FJ;;AwC39FE;EACE;AxC89FJ;AwC59FI;EACE;AxC89FN;;AyC5/FE;EACE;AzC+/FJ;AyC7/FI;EACE;AzC+/FN;AyC5/FI;EACE;AzC8/FN;AyC3/FI;EACE;AzC6/FN;AyC1/FI;EACE;AzC4/FN;;A0C5gGE;EACE;A1C+gGJ;A0C7gGI;EACE;A1C+gGN;A0C7gGM;EACE;A1C+gGR;A0C5gGM;EACE;A1C8gGR;;A2CzhGE;EACE;A3C4hGJ;;A2CzhGE;EACE;EACA;EACA;EACA;A3C4hGJ;A2C1hGI;EACE;A3C4hGN;;A4CtiGE;EACE;EACA;A5CyiGJ;;A4CriGI;EACE;A5CwiGN;;A4CpiGE;EACE;A5CuiGJ;;A6CvjGE;EAEE;A7CyjGJ;;A8CnjGI;EACE;A9CsjGN;A8CljGI;EACE;A9CojGN;A8CnjGM;EACE;A9CqjGR;A8CnjGM;EACE;A9CqjGR;A8ChjGI;EACE;A9CkjGN;A8C9iGI;EACE;A9CgjGN,C","sources":["./node_modules/codemirror/addon/hint/show-hint.css","./node_modules/codemirror/lib/codemirror.css","./projects/ngx-editor-demo/src/styles/custom-themes/indigo-pink.scss","./node_modules/codemirror/theme/material-palenight.css","./node_modules/codemirror/theme/material.css","./dist/ngx-editorjs-code-block/_index.scss","./projects/ngx-editor-demo/src/highlightjs/material-dark.scss","./node_modules/@angular/material/core/style/_sass-utils.scss","./node_modules/@material/theme/_css.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@material/linear-progress/_linear-progress-theme.scss","./node_modules/@material/theme/_gss.scss","./node_modules/@material/dom/_dom.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@angular/material/form-field/_form-field-density.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@material/form-field/_form-field.scss","./node_modules/@material/typography/_typography.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@material/list/_list.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@material/button/_button-base.scss","./node_modules/@angular/material/button/_icon-button-theme.scss","./node_modules/@angular/material/button/_fab-theme.scss","./node_modules/@material/fab/_fab.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/button/_button-base.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./projects/ngx-editor-demo/src/_app-theme.scss","./projects/ngx-editor-demo/src/app/pages/home/_home-theme.scss","./projects/ngx-editor-demo/src/app/components/navbar/_navbar-theme.scss","./dist/ngx-editorjs/src/lib/_ngx-editorjs.theme.scss","./dist/ngx-editorjs/src/lib/components/blocks/toolbar-block/_toolbar-block.theme.scss","./dist/ngx-editorjs-blockquotes-block/src/lib/_ngx-editorjs-blockquotes-block.theme.scss","./dist/ngx-editorjs-mermaid-block/src/lib/_ngx-editorjs-mermaid-block.theme.scss"],"sourcesContent":[".CodeMirror-hints {\n  position: absolute;\n  z-index: 10;\n  overflow: hidden;\n  list-style: none;\n\n  margin: 0;\n  padding: 2px;\n\n  -webkit-box-shadow: 2px 3px 5px rgba(0,0,0,.2);\n  -moz-box-shadow: 2px 3px 5px rgba(0,0,0,.2);\n  box-shadow: 2px 3px 5px rgba(0,0,0,.2);\n  border-radius: 3px;\n  border: 1px solid silver;\n\n  background: white;\n  font-size: 90%;\n  font-family: monospace;\n\n  max-height: 20em;\n  overflow-y: auto;\n  box-sizing: border-box;\n}\n\n.CodeMirror-hint {\n  margin: 0;\n  padding: 0 4px;\n  border-radius: 2px;\n  white-space: pre;\n  color: black;\n  cursor: pointer;\n}\n\nli.CodeMirror-hint-active {\n  background: #08f;\n  color: white;\n}\n","/* BASICS */\n\n.CodeMirror {\n  /* Set height, width, borders, and global font properties here */\n  font-family: monospace;\n  height: 300px;\n  color: black;\n  direction: ltr;\n}\n\n/* PADDING */\n\n.CodeMirror-lines {\n  padding: 4px 0; /* Vertical padding around content */\n}\n.CodeMirror pre.CodeMirror-line,\n.CodeMirror pre.CodeMirror-line-like {\n  padding: 0 4px; /* Horizontal padding of content */\n}\n\n.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {\n  background-color: white; /* The little square between H and V scrollbars */\n}\n\n/* GUTTER */\n\n.CodeMirror-gutters {\n  border-right: 1px solid #ddd;\n  background-color: #f7f7f7;\n  white-space: nowrap;\n}\n.CodeMirror-linenumbers {}\n.CodeMirror-linenumber {\n  padding: 0 3px 0 5px;\n  min-width: 20px;\n  text-align: right;\n  color: #999;\n  white-space: nowrap;\n}\n\n.CodeMirror-guttermarker { color: black; }\n.CodeMirror-guttermarker-subtle { color: #999; }\n\n/* CURSOR */\n\n.CodeMirror-cursor {\n  border-left: 1px solid black;\n  border-right: none;\n  width: 0;\n}\n/* Shown when moving in bi-directional text */\n.CodeMirror div.CodeMirror-secondarycursor {\n  border-left: 1px solid silver;\n}\n.cm-fat-cursor .CodeMirror-cursor {\n  width: auto;\n  border: 0 !important;\n  background: #7e7;\n}\n.cm-fat-cursor div.CodeMirror-cursors {\n  z-index: 1;\n}\n.cm-fat-cursor .CodeMirror-line::selection,\n.cm-fat-cursor .CodeMirror-line > span::selection, \n.cm-fat-cursor .CodeMirror-line > span > span::selection { background: transparent; }\n.cm-fat-cursor .CodeMirror-line::-moz-selection,\n.cm-fat-cursor .CodeMirror-line > span::-moz-selection,\n.cm-fat-cursor .CodeMirror-line > span > span::-moz-selection { background: transparent; }\n.cm-fat-cursor { caret-color: transparent; }\n@-moz-keyframes blink {\n  0% {}\n  50% { background-color: transparent; }\n  100% {}\n}\n@-webkit-keyframes blink {\n  0% {}\n  50% { background-color: transparent; }\n  100% {}\n}\n@keyframes blink {\n  0% {}\n  50% { background-color: transparent; }\n  100% {}\n}\n\n/* Can style cursor different in overwrite (non-insert) mode */\n.CodeMirror-overwrite .CodeMirror-cursor {}\n\n.cm-tab { display: inline-block; text-decoration: inherit; }\n\n.CodeMirror-rulers {\n  position: absolute;\n  left: 0; right: 0; top: -50px; bottom: 0;\n  overflow: hidden;\n}\n.CodeMirror-ruler {\n  border-left: 1px solid #ccc;\n  top: 0; bottom: 0;\n  position: absolute;\n}\n\n/* DEFAULT THEME */\n\n.cm-s-default .cm-header {color: blue;}\n.cm-s-default .cm-quote {color: #090;}\n.cm-negative {color: #d44;}\n.cm-positive {color: #292;}\n.cm-header, .cm-strong {font-weight: bold;}\n.cm-em {font-style: italic;}\n.cm-link {text-decoration: underline;}\n.cm-strikethrough {text-decoration: line-through;}\n\n.cm-s-default .cm-keyword {color: #708;}\n.cm-s-default .cm-atom {color: #219;}\n.cm-s-default .cm-number {color: #164;}\n.cm-s-default .cm-def {color: #00f;}\n.cm-s-default .cm-variable,\n.cm-s-default .cm-punctuation,\n.cm-s-default .cm-property,\n.cm-s-default .cm-operator {}\n.cm-s-default .cm-variable-2 {color: #05a;}\n.cm-s-default .cm-variable-3, .cm-s-default .cm-type {color: #085;}\n.cm-s-default .cm-comment {color: #a50;}\n.cm-s-default .cm-string {color: #a11;}\n.cm-s-default .cm-string-2 {color: #f50;}\n.cm-s-default .cm-meta {color: #555;}\n.cm-s-default .cm-qualifier {color: #555;}\n.cm-s-default .cm-builtin {color: #30a;}\n.cm-s-default .cm-bracket {color: #997;}\n.cm-s-default .cm-tag {color: #170;}\n.cm-s-default .cm-attribute {color: #00c;}\n.cm-s-default .cm-hr {color: #999;}\n.cm-s-default .cm-link {color: #00c;}\n\n.cm-s-default .cm-error {color: #f00;}\n.cm-invalidchar {color: #f00;}\n\n.CodeMirror-composing { border-bottom: 2px solid; }\n\n/* Default styles for common addons */\n\ndiv.CodeMirror span.CodeMirror-matchingbracket {color: #0b0;}\ndiv.CodeMirror span.CodeMirror-nonmatchingbracket {color: #a22;}\n.CodeMirror-matchingtag { background: rgba(255, 150, 0, .3); }\n.CodeMirror-activeline-background {background: #e8f2ff;}\n\n/* STOP */\n\n/* The rest of this file contains styles related to the mechanics of\n   the editor. You probably shouldn't touch them. */\n\n.CodeMirror {\n  position: relative;\n  overflow: hidden;\n  background: white;\n}\n\n.CodeMirror-scroll {\n  overflow: scroll !important; /* Things will break if this is overridden */\n  /* 50px is the magic margin used to hide the element's real scrollbars */\n  /* See overflow: hidden in .CodeMirror */\n  margin-bottom: -50px; margin-right: -50px;\n  padding-bottom: 50px;\n  height: 100%;\n  outline: none; /* Prevent dragging from highlighting the element */\n  position: relative;\n  z-index: 0;\n}\n.CodeMirror-sizer {\n  position: relative;\n  border-right: 50px solid transparent;\n}\n\n/* The fake, visible scrollbars. Used to force redraw during scrolling\n   before actual scrolling happens, thus preventing shaking and\n   flickering artifacts. */\n.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {\n  position: absolute;\n  z-index: 6;\n  display: none;\n  outline: none;\n}\n.CodeMirror-vscrollbar {\n  right: 0; top: 0;\n  overflow-x: hidden;\n  overflow-y: scroll;\n}\n.CodeMirror-hscrollbar {\n  bottom: 0; left: 0;\n  overflow-y: hidden;\n  overflow-x: scroll;\n}\n.CodeMirror-scrollbar-filler {\n  right: 0; bottom: 0;\n}\n.CodeMirror-gutter-filler {\n  left: 0; bottom: 0;\n}\n\n.CodeMirror-gutters {\n  position: absolute; left: 0; top: 0;\n  min-height: 100%;\n  z-index: 3;\n}\n.CodeMirror-gutter {\n  white-space: normal;\n  height: 100%;\n  display: inline-block;\n  vertical-align: top;\n  margin-bottom: -50px;\n}\n.CodeMirror-gutter-wrapper {\n  position: absolute;\n  z-index: 4;\n  background: none !important;\n  border: none !important;\n}\n.CodeMirror-gutter-background {\n  position: absolute;\n  top: 0; bottom: 0;\n  z-index: 4;\n}\n.CodeMirror-gutter-elt {\n  position: absolute;\n  cursor: default;\n  z-index: 4;\n}\n.CodeMirror-gutter-wrapper ::selection { background-color: transparent }\n.CodeMirror-gutter-wrapper ::-moz-selection { background-color: transparent }\n\n.CodeMirror-lines {\n  cursor: text;\n  min-height: 1px; /* prevents collapsing before first draw */\n}\n.CodeMirror pre.CodeMirror-line,\n.CodeMirror pre.CodeMirror-line-like {\n  /* Reset some styles that the rest of the page might have set */\n  -moz-border-radius: 0; -webkit-border-radius: 0; border-radius: 0;\n  border-width: 0;\n  background: transparent;\n  font-family: inherit;\n  font-size: inherit;\n  margin: 0;\n  white-space: pre;\n  word-wrap: normal;\n  line-height: inherit;\n  color: inherit;\n  z-index: 2;\n  position: relative;\n  overflow: visible;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-font-variant-ligatures: contextual;\n  font-variant-ligatures: contextual;\n}\n.CodeMirror-wrap pre.CodeMirror-line,\n.CodeMirror-wrap pre.CodeMirror-line-like {\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  word-break: normal;\n}\n\n.CodeMirror-linebackground {\n  position: absolute;\n  left: 0; right: 0; top: 0; bottom: 0;\n  z-index: 0;\n}\n\n.CodeMirror-linewidget {\n  position: relative;\n  z-index: 2;\n  padding: 0.1px; /* Force widget margins to stay inside of the container */\n}\n\n.CodeMirror-widget {}\n\n.CodeMirror-rtl pre { direction: rtl; }\n\n.CodeMirror-code {\n  outline: none;\n}\n\n/* Force content-box sizing for the elements where we expect it */\n.CodeMirror-scroll,\n.CodeMirror-sizer,\n.CodeMirror-gutter,\n.CodeMirror-gutters,\n.CodeMirror-linenumber {\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n}\n\n.CodeMirror-measure {\n  position: absolute;\n  width: 100%;\n  height: 0;\n  overflow: hidden;\n  visibility: hidden;\n}\n\n.CodeMirror-cursor {\n  position: absolute;\n  pointer-events: none;\n}\n.CodeMirror-measure pre { position: static; }\n\ndiv.CodeMirror-cursors {\n  visibility: hidden;\n  position: relative;\n  z-index: 3;\n}\ndiv.CodeMirror-dragcursors {\n  visibility: visible;\n}\n\n.CodeMirror-focused div.CodeMirror-cursors {\n  visibility: visible;\n}\n\n.CodeMirror-selected { background: #d9d9d9; }\n.CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }\n.CodeMirror-crosshair { cursor: crosshair; }\n.CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection { background: #d7d4f0; }\n.CodeMirror-line::-moz-selection, .CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection { background: #d7d4f0; }\n\n.cm-searching {\n  background-color: #ffa;\n  background-color: rgba(255, 255, 0, .4);\n}\n\n/* Used to force a border model for a node */\n.cm-force-border { padding-right: .1px; }\n\n@media print {\n  /* Hide the cursor when printing */\n  .CodeMirror div.CodeMirror-cursors {\n    visibility: hidden;\n  }\n}\n\n/* See issue #2901 */\n.cm-tab-wrap-hack:after { content: ''; }\n\n/* Help users use markselection to safely style text background */\nspan.CodeMirror-selectedtext { background: none; }\n","/* BASICS */\n@import 'codemirror/addon/hint/show-hint.css';\n.CodeMirror {\n  /* Set height, width, borders, and global font properties here */\n  font-family: monospace;\n  height: 300px;\n  color: black;\n  direction: ltr;\n}\n\n/* PADDING */\n.CodeMirror-lines {\n  padding: 4px 0; /* Vertical padding around content */\n}\n\n.CodeMirror pre.CodeMirror-line,\n.CodeMirror pre.CodeMirror-line-like {\n  padding: 0 4px; /* Horizontal padding of content */\n}\n\n.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {\n  background-color: white; /* The little square between H and V scrollbars */\n}\n\n/* GUTTER */\n.CodeMirror-gutters {\n  border-right: 1px solid #ddd;\n  background-color: #f7f7f7;\n  white-space: nowrap;\n}\n\n.CodeMirror-linenumber {\n  padding: 0 3px 0 5px;\n  min-width: 20px;\n  text-align: right;\n  color: #999;\n  white-space: nowrap;\n}\n\n.CodeMirror-guttermarker {\n  color: black;\n}\n\n.CodeMirror-guttermarker-subtle {\n  color: #999;\n}\n\n/* CURSOR */\n.CodeMirror-cursor {\n  border-left: 1px solid black;\n  border-right: none;\n  width: 0;\n}\n\n/* Shown when moving in bi-directional text */\n.CodeMirror div.CodeMirror-secondarycursor {\n  border-left: 1px solid silver;\n}\n\n.cm-fat-cursor .CodeMirror-cursor {\n  width: auto;\n  border: 0 !important;\n  background: #7e7;\n}\n\n.cm-fat-cursor div.CodeMirror-cursors {\n  z-index: 1;\n}\n\n.cm-fat-cursor .CodeMirror-line::selection,\n.cm-fat-cursor .CodeMirror-line > span::selection,\n.cm-fat-cursor .CodeMirror-line > span > span::selection {\n  background: transparent;\n}\n\n.cm-fat-cursor .CodeMirror-line::-moz-selection,\n.cm-fat-cursor .CodeMirror-line > span::-moz-selection,\n.cm-fat-cursor .CodeMirror-line > span > span::-moz-selection {\n  background: transparent;\n}\n\n.cm-fat-cursor {\n  caret-color: transparent;\n}\n\n@-moz-keyframes blink {\n  50% {\n    background-color: transparent;\n  }\n}\n@-webkit-keyframes blink {\n  50% {\n    background-color: transparent;\n  }\n}\n@keyframes blink {\n  50% {\n    background-color: transparent;\n  }\n}\n/* Can style cursor different in overwrite (non-insert) mode */\n.cm-tab {\n  display: inline-block;\n  text-decoration: inherit;\n}\n\n.CodeMirror-rulers {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: -50px;\n  bottom: 0;\n  overflow: hidden;\n}\n\n.CodeMirror-ruler {\n  border-left: 1px solid #ccc;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n}\n\n/* DEFAULT THEME */\n.cm-s-default .cm-header {\n  color: blue;\n}\n\n.cm-s-default .cm-quote {\n  color: #090;\n}\n\n.cm-negative {\n  color: #d44;\n}\n\n.cm-positive {\n  color: #292;\n}\n\n.cm-header, .cm-strong {\n  font-weight: bold;\n}\n\n.cm-em {\n  font-style: italic;\n}\n\n.cm-link {\n  text-decoration: underline;\n}\n\n.cm-strikethrough {\n  text-decoration: line-through;\n}\n\n.cm-s-default .cm-keyword {\n  color: #708;\n}\n\n.cm-s-default .cm-atom {\n  color: #219;\n}\n\n.cm-s-default .cm-number {\n  color: #164;\n}\n\n.cm-s-default .cm-def {\n  color: #00f;\n}\n\n.cm-s-default .cm-variable-2 {\n  color: #05a;\n}\n\n.cm-s-default .cm-variable-3, .cm-s-default .cm-type {\n  color: #085;\n}\n\n.cm-s-default .cm-comment {\n  color: #a50;\n}\n\n.cm-s-default .cm-string {\n  color: #a11;\n}\n\n.cm-s-default .cm-string-2 {\n  color: #f50;\n}\n\n.cm-s-default .cm-meta {\n  color: #555;\n}\n\n.cm-s-default .cm-qualifier {\n  color: #555;\n}\n\n.cm-s-default .cm-builtin {\n  color: #30a;\n}\n\n.cm-s-default .cm-bracket {\n  color: #997;\n}\n\n.cm-s-default .cm-tag {\n  color: #170;\n}\n\n.cm-s-default .cm-attribute {\n  color: #00c;\n}\n\n.cm-s-default .cm-hr {\n  color: #999;\n}\n\n.cm-s-default .cm-link {\n  color: #00c;\n}\n\n.cm-s-default .cm-error {\n  color: #f00;\n}\n\n.cm-invalidchar {\n  color: #f00;\n}\n\n.CodeMirror-composing {\n  border-bottom: 2px solid;\n}\n\n/* Default styles for common addons */\ndiv.CodeMirror span.CodeMirror-matchingbracket {\n  color: #0b0;\n}\n\ndiv.CodeMirror span.CodeMirror-nonmatchingbracket {\n  color: #a22;\n}\n\n.CodeMirror-matchingtag {\n  background: rgba(255, 150, 0, 0.3);\n}\n\n.CodeMirror-activeline-background {\n  background: #e8f2ff;\n}\n\n/* STOP */\n/* The rest of this file contains styles related to the mechanics of\n   the editor. You probably shouldn't touch them. */\n.CodeMirror {\n  position: relative;\n  overflow: hidden;\n  background: white;\n}\n\n.CodeMirror-scroll {\n  overflow: scroll !important; /* Things will break if this is overridden */\n  /* 50px is the magic margin used to hide the element's real scrollbars */\n  /* See overflow: hidden in .CodeMirror */\n  margin-bottom: -50px;\n  margin-right: -50px;\n  padding-bottom: 50px;\n  height: 100%;\n  outline: none; /* Prevent dragging from highlighting the element */\n  position: relative;\n  z-index: 0;\n}\n\n.CodeMirror-sizer {\n  position: relative;\n  border-right: 50px solid transparent;\n}\n\n/* The fake, visible scrollbars. Used to force redraw during scrolling\n   before actual scrolling happens, thus preventing shaking and\n   flickering artifacts. */\n.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {\n  position: absolute;\n  z-index: 6;\n  display: none;\n  outline: none;\n}\n\n.CodeMirror-vscrollbar {\n  right: 0;\n  top: 0;\n  overflow-x: hidden;\n  overflow-y: scroll;\n}\n\n.CodeMirror-hscrollbar {\n  bottom: 0;\n  left: 0;\n  overflow-y: hidden;\n  overflow-x: scroll;\n}\n\n.CodeMirror-scrollbar-filler {\n  right: 0;\n  bottom: 0;\n}\n\n.CodeMirror-gutter-filler {\n  left: 0;\n  bottom: 0;\n}\n\n.CodeMirror-gutters {\n  position: absolute;\n  left: 0;\n  top: 0;\n  min-height: 100%;\n  z-index: 3;\n}\n\n.CodeMirror-gutter {\n  white-space: normal;\n  height: 100%;\n  display: inline-block;\n  vertical-align: top;\n  margin-bottom: -50px;\n}\n\n.CodeMirror-gutter-wrapper {\n  position: absolute;\n  z-index: 4;\n  background: none !important;\n  border: none !important;\n}\n\n.CodeMirror-gutter-background {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  z-index: 4;\n}\n\n.CodeMirror-gutter-elt {\n  position: absolute;\n  cursor: default;\n  z-index: 4;\n}\n\n.CodeMirror-gutter-wrapper ::selection {\n  background-color: transparent;\n}\n\n.CodeMirror-gutter-wrapper ::-moz-selection {\n  background-color: transparent;\n}\n\n.CodeMirror-lines {\n  cursor: text;\n  min-height: 1px; /* prevents collapsing before first draw */\n}\n\n.CodeMirror pre.CodeMirror-line,\n.CodeMirror pre.CodeMirror-line-like {\n  /* Reset some styles that the rest of the page might have set */\n  -moz-border-radius: 0;\n  -webkit-border-radius: 0;\n  border-radius: 0;\n  border-width: 0;\n  background: transparent;\n  font-family: inherit;\n  font-size: inherit;\n  margin: 0;\n  white-space: pre;\n  word-wrap: normal;\n  line-height: inherit;\n  color: inherit;\n  z-index: 2;\n  position: relative;\n  overflow: visible;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-font-variant-ligatures: contextual;\n  font-variant-ligatures: contextual;\n}\n\n.CodeMirror-wrap pre.CodeMirror-line,\n.CodeMirror-wrap pre.CodeMirror-line-like {\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  word-break: normal;\n}\n\n.CodeMirror-linebackground {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 0;\n}\n\n.CodeMirror-linewidget {\n  position: relative;\n  z-index: 2;\n  padding: 0.1px; /* Force widget margins to stay inside of the container */\n}\n\n.CodeMirror-rtl pre {\n  direction: rtl;\n}\n\n.CodeMirror-code {\n  outline: none;\n}\n\n/* Force content-box sizing for the elements where we expect it */\n.CodeMirror-scroll,\n.CodeMirror-sizer,\n.CodeMirror-gutter,\n.CodeMirror-gutters,\n.CodeMirror-linenumber {\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n}\n\n.CodeMirror-measure {\n  position: absolute;\n  width: 100%;\n  height: 0;\n  overflow: hidden;\n  visibility: hidden;\n}\n\n.CodeMirror-cursor {\n  position: absolute;\n  pointer-events: none;\n}\n\n.CodeMirror-measure pre {\n  position: static;\n}\n\ndiv.CodeMirror-cursors {\n  visibility: hidden;\n  position: relative;\n  z-index: 3;\n}\n\ndiv.CodeMirror-dragcursors {\n  visibility: visible;\n}\n\n.CodeMirror-focused div.CodeMirror-cursors {\n  visibility: visible;\n}\n\n.CodeMirror-selected {\n  background: #d9d9d9;\n}\n\n.CodeMirror-focused .CodeMirror-selected {\n  background: #d7d4f0;\n}\n\n.CodeMirror-crosshair {\n  cursor: crosshair;\n}\n\n.CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection {\n  background: #d7d4f0;\n}\n\n.CodeMirror-line::-moz-selection, .CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection {\n  background: #d7d4f0;\n}\n\n.cm-searching {\n  background-color: #ffa;\n  background-color: rgba(255, 255, 0, 0.4);\n}\n\n/* Used to force a border model for a node */\n.cm-force-border {\n  padding-right: 0.1px;\n}\n\n@media print {\n  /* Hide the cursor when printing */\n  .CodeMirror div.CodeMirror-cursors {\n    visibility: hidden;\n  }\n}\n/* See issue #2901 */\n.cm-tab-wrap-hack:after {\n  content: \"\";\n}\n\n/* Help users use markselection to safely style text background */\nspan.CodeMirror-selectedtext {\n  background: none;\n}\n\n/*\n  Name:       material\n  Author:     Mattia Astorino (http://github.com/equinusocio)\n  Website:    https://material-theme.site/\n*/\n.cm-s-material-palenight.CodeMirror {\n  background-color: #292D3E;\n  color: #A6ACCD;\n}\n\n.cm-s-material-palenight .CodeMirror-gutters {\n  background: #292D3E;\n  color: #676E95;\n  border: none;\n}\n\n.cm-s-material-palenight .CodeMirror-guttermarker,\n.cm-s-material-palenight .CodeMirror-guttermarker-subtle,\n.cm-s-material-palenight .CodeMirror-linenumber {\n  color: #676E95;\n}\n\n.cm-s-material-palenight .CodeMirror-cursor {\n  border-left: 1px solid #FFCC00;\n}\n\n.cm-s-material-palenight.cm-fat-cursor .CodeMirror-cursor {\n  background-color: rgba(96, 124, 139, 0.5019607843) !important;\n}\n\n.cm-s-material-palenight .cm-animate-fat-cursor {\n  background-color: rgba(96, 124, 139, 0.5019607843) !important;\n}\n\n.cm-s-material-palenight div.CodeMirror-selected {\n  background: rgba(113, 124, 180, 0.2);\n}\n\n.cm-s-material-palenight.CodeMirror-focused div.CodeMirror-selected {\n  background: rgba(113, 124, 180, 0.2);\n}\n\n.cm-s-material-palenight .CodeMirror-line::selection,\n.cm-s-material-palenight .CodeMirror-line > span::selection,\n.cm-s-material-palenight .CodeMirror-line > span > span::selection {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material-palenight .CodeMirror-line::-moz-selection,\n.cm-s-material-palenight .CodeMirror-line > span::-moz-selection,\n.cm-s-material-palenight .CodeMirror-line > span > span::-moz-selection {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material-palenight .CodeMirror-activeline-background {\n  background: rgba(0, 0, 0, 0.5);\n}\n\n.cm-s-material-palenight .cm-keyword {\n  color: #C792EA;\n}\n\n.cm-s-material-palenight .cm-operator {\n  color: #89DDFF;\n}\n\n.cm-s-material-palenight .cm-variable-2 {\n  color: #EEFFFF;\n}\n\n.cm-s-material-palenight .cm-variable-3,\n.cm-s-material-palenight .cm-type {\n  color: #f07178;\n}\n\n.cm-s-material-palenight .cm-builtin {\n  color: #FFCB6B;\n}\n\n.cm-s-material-palenight .cm-atom {\n  color: #F78C6C;\n}\n\n.cm-s-material-palenight .cm-number {\n  color: #FF5370;\n}\n\n.cm-s-material-palenight .cm-def {\n  color: #82AAFF;\n}\n\n.cm-s-material-palenight .cm-string {\n  color: #C3E88D;\n}\n\n.cm-s-material-palenight .cm-string-2 {\n  color: #f07178;\n}\n\n.cm-s-material-palenight .cm-comment {\n  color: #676E95;\n}\n\n.cm-s-material-palenight .cm-variable {\n  color: #f07178;\n}\n\n.cm-s-material-palenight .cm-tag {\n  color: #FF5370;\n}\n\n.cm-s-material-palenight .cm-meta {\n  color: #FFCB6B;\n}\n\n.cm-s-material-palenight .cm-attribute {\n  color: #C792EA;\n}\n\n.cm-s-material-palenight .cm-property {\n  color: #C792EA;\n}\n\n.cm-s-material-palenight .cm-qualifier {\n  color: #DECB6B;\n}\n\n.cm-s-material-palenight .cm-variable-3,\n.cm-s-material-palenight .cm-type {\n  color: #DECB6B;\n}\n\n.cm-s-material-palenight .cm-error {\n  color: rgba(255, 255, 255, 1);\n  background-color: #FF5370;\n}\n\n.cm-s-material-palenight .CodeMirror-matchingbracket {\n  text-decoration: underline;\n  color: white !important;\n}\n\n/*\n  Name:       material\n  Author:     Mattia Astorino (http://github.com/equinusocio)\n  Website:    https://material-theme.site/\n*/\n.cm-s-material.CodeMirror {\n  background-color: #263238;\n  color: #EEFFFF;\n}\n\n.cm-s-material .CodeMirror-gutters {\n  background: #263238;\n  color: #546E7A;\n  border: none;\n}\n\n.cm-s-material .CodeMirror-guttermarker,\n.cm-s-material .CodeMirror-guttermarker-subtle,\n.cm-s-material .CodeMirror-linenumber {\n  color: #546E7A;\n}\n\n.cm-s-material .CodeMirror-cursor {\n  border-left: 1px solid #FFCC00;\n}\n\n.cm-s-material.cm-fat-cursor .CodeMirror-cursor {\n  background-color: rgba(93, 109, 92, 0.5019607843) !important;\n}\n\n.cm-s-material .cm-animate-fat-cursor {\n  background-color: rgba(93, 109, 92, 0.5019607843) !important;\n}\n\n.cm-s-material div.CodeMirror-selected {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material.CodeMirror-focused div.CodeMirror-selected {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material .CodeMirror-line::selection,\n.cm-s-material .CodeMirror-line > span::selection,\n.cm-s-material .CodeMirror-line > span > span::selection {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material .CodeMirror-line::-moz-selection,\n.cm-s-material .CodeMirror-line > span::-moz-selection,\n.cm-s-material .CodeMirror-line > span > span::-moz-selection {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material .CodeMirror-activeline-background {\n  background: rgba(0, 0, 0, 0.5);\n}\n\n.cm-s-material .cm-keyword {\n  color: #C792EA;\n}\n\n.cm-s-material .cm-operator {\n  color: #89DDFF;\n}\n\n.cm-s-material .cm-variable-2 {\n  color: #EEFFFF;\n}\n\n.cm-s-material .cm-variable-3,\n.cm-s-material .cm-type {\n  color: #f07178;\n}\n\n.cm-s-material .cm-builtin {\n  color: #FFCB6B;\n}\n\n.cm-s-material .cm-atom {\n  color: #F78C6C;\n}\n\n.cm-s-material .cm-number {\n  color: #FF5370;\n}\n\n.cm-s-material .cm-def {\n  color: #82AAFF;\n}\n\n.cm-s-material .cm-string {\n  color: #C3E88D;\n}\n\n.cm-s-material .cm-string-2 {\n  color: #f07178;\n}\n\n.cm-s-material .cm-comment {\n  color: #546E7A;\n}\n\n.cm-s-material .cm-variable {\n  color: #f07178;\n}\n\n.cm-s-material .cm-tag {\n  color: #FF5370;\n}\n\n.cm-s-material .cm-meta {\n  color: #FFCB6B;\n}\n\n.cm-s-material .cm-attribute {\n  color: #C792EA;\n}\n\n.cm-s-material .cm-property {\n  color: #C792EA;\n}\n\n.cm-s-material .cm-qualifier {\n  color: #DECB6B;\n}\n\n.cm-s-material .cm-variable-3,\n.cm-s-material .cm-type {\n  color: #DECB6B;\n}\n\n.cm-s-material .cm-error {\n  color: rgba(255, 255, 255, 1);\n  background-color: #FF5370;\n}\n\n.cm-s-material .CodeMirror-matchingbracket {\n  text-decoration: underline;\n  color: white !important;\n}\n\n.CodeMirror {\n  height: auto;\n  font-family: \"Cascadia Code\", \"Roboto Mono\", monospace;\n}\n\n/*\nOrginal Style from https://github.com/Kelbster/highlightjs-material-dark-theme  (c) Kelby Gassmanl <kelby.gassman@gmail.com>\n*/\n.hljs {\n  display: block;\n  overflow-x: auto;\n  padding: 1em;\n  background: #2B2B2D;\n  color: #CDD3D8;\n  -webkit-font-smoothing: antialiased;\n  text-size-adjust: 100%;\n  font: 300 100%/1 Roboto Mono, monospace;\n}\n\n.hljs-comment {\n  color: #9E9E9E;\n  font-style: italic;\n}\n\n.hljs-selector-tag {\n  color: #C792EA;\n}\n\n.hljs-string,\n.hljs-subst {\n  color: #9ccc65;\n}\n\n.hljs-number,\n.hljs-regexp,\n.hljs-variable,\n.hljs-template-variable {\n  color: #F77669;\n}\n\n.hljs-keyword {\n  color: #C792EA;\n}\n\n.hljs-function > .hljs-title {\n  color: #75A5FF;\n}\n\n.hljs-tag {\n  color: #ce93d8;\n}\n\n.hljs-name {\n  color: #4dd0e1;\n}\n\n.hljs-type {\n  color: #da4939;\n}\n\n.hljs-attribute {\n  color: #80CBBF;\n}\n\n.hljs-symbol,\n.hljs-bullet,\n.hljs-built_in,\n.hljs-builtin-name,\n.hljs-link {\n  color: #C792EA;\n}\n\n.hljs-params {\n  color: #EEFFF7;\n}\n\n.hljs-meta {\n  color: #75A5FF;\n}\n\n.hljs-title {\n  color: #75A5FF;\n}\n\n.hljs-section {\n  color: #ffc66d;\n}\n\n.hljs-addition {\n  background-color: #144212;\n  color: #e6e1dc;\n  display: inline-block;\n  width: 100%;\n}\n\n.hljs-deletion {\n  background-color: #600;\n  color: #e6e1dc;\n  display: inline-block;\n  width: 100%;\n}\n\n.hljs-selector-class {\n  color: #FFCB68;\n}\n\n.hljs-selector-id {\n  color: #F77669;\n}\n\n.hljs-emphasis {\n  font-style: italic;\n}\n\n.hljs-strong {\n  font-weight: bold;\n}\n\n.hljs-link {\n  text-decoration: underline;\n}\n\nhtml {\n  --mat-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\nhtml {\n  --mat-option-selected-state-label-text-color: #3f51b5;\n  --mat-option-label-text-color: white;\n  --mat-option-hover-state-layer-color: rgba(255, 255, 255, 0.08);\n  --mat-option-focus-state-layer-color: rgba(255, 255, 255, 0.08);\n  --mat-option-selected-state-layer-color: rgba(255, 255, 255, 0.08);\n}\n\n.mat-accent {\n  --mat-option-selected-state-label-text-color: #69f0ae;\n  --mat-option-label-text-color: white;\n  --mat-option-hover-state-layer-color: rgba(255, 255, 255, 0.08);\n  --mat-option-focus-state-layer-color: rgba(255, 255, 255, 0.08);\n  --mat-option-selected-state-layer-color: rgba(255, 255, 255, 0.08);\n}\n\n.mat-warn {\n  --mat-option-selected-state-label-text-color: #f44336;\n  --mat-option-label-text-color: white;\n  --mat-option-hover-state-layer-color: rgba(255, 255, 255, 0.08);\n  --mat-option-focus-state-layer-color: rgba(255, 255, 255, 0.08);\n  --mat-option-selected-state-layer-color: rgba(255, 255, 255, 0.08);\n}\n\nhtml {\n  --mat-optgroup-label-text-color: white;\n}\n\n.mat-pseudo-checkbox-full {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled {\n  color: #686868;\n}\n\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #3f51b5;\n}\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #3f51b5;\n}\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #69f0ae;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #69f0ae;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #69f0ae;\n}\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #69f0ae;\n}\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #f44336;\n}\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #f44336;\n}\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #686868;\n}\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #686868;\n}\n\n.mat-app-background {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-elevation-z0, .mat-mdc-elevation-specific.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1, .mat-mdc-elevation-specific.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2, .mat-mdc-elevation-specific.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3, .mat-mdc-elevation-specific.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4, .mat-mdc-elevation-specific.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5, .mat-mdc-elevation-specific.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6, .mat-mdc-elevation-specific.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7, .mat-mdc-elevation-specific.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8, .mat-mdc-elevation-specific.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9, .mat-mdc-elevation-specific.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10, .mat-mdc-elevation-specific.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11, .mat-mdc-elevation-specific.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12, .mat-mdc-elevation-specific.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13, .mat-mdc-elevation-specific.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14, .mat-mdc-elevation-specific.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15, .mat-mdc-elevation-specific.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16, .mat-mdc-elevation-specific.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17, .mat-mdc-elevation-specific.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18, .mat-mdc-elevation-specific.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19, .mat-mdc-elevation-specific.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20, .mat-mdc-elevation-specific.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21, .mat-mdc-elevation-specific.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22, .mat-mdc-elevation-specific.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23, .mat-mdc-elevation-specific.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24, .mat-mdc-elevation-specific.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker {\n  display: none;\n}\n\nhtml {\n  --mat-option-label-text-font: Roboto, sans-serif;\n  --mat-option-label-text-line-height: 24px;\n  --mat-option-label-text-size: 16px;\n  --mat-option-label-text-tracking: 0.03125em;\n  --mat-option-label-text-weight: 400;\n}\n\nhtml {\n  --mat-optgroup-label-text-font: Roboto, sans-serif;\n  --mat-optgroup-label-text-line-height: 24px;\n  --mat-optgroup-label-text-size: 16px;\n  --mat-optgroup-label-text-tracking: 0.03125em;\n  --mat-optgroup-label-text-weight: 400;\n}\n\nhtml {\n  --mdc-elevated-card-container-shape: 4px;\n  --mdc-outlined-card-container-shape: 4px;\n  --mdc-outlined-card-outline-width: 1px;\n}\n\nhtml {\n  --mdc-elevated-card-container-color: #424242;\n  --mdc-elevated-card-container-elevation: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-container-color: #424242;\n  --mdc-outlined-card-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-card-container-elevation: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mat-card-subtitle-text-color: rgba(255, 255, 255, 0.7);\n}\n\nhtml {\n  --mat-card-title-text-font: Roboto, sans-serif;\n  --mat-card-title-text-line-height: 32px;\n  --mat-card-title-text-size: 20px;\n  --mat-card-title-text-tracking: 0.0125em;\n  --mat-card-title-text-weight: 500;\n  --mat-card-subtitle-text-font: Roboto, sans-serif;\n  --mat-card-subtitle-text-line-height: 22px;\n  --mat-card-subtitle-text-size: 14px;\n  --mat-card-subtitle-text-tracking: 0.0071428571em;\n  --mat-card-subtitle-text-weight: 500;\n}\n\nhtml {\n  --mdc-linear-progress-active-indicator-height: 4px;\n  --mdc-linear-progress-track-height: 4px;\n  --mdc-linear-progress-track-shape: 0;\n}\n\n.mat-mdc-progress-bar {\n  --mdc-linear-progress-active-indicator-color: #3f51b5;\n  --mdc-linear-progress-track-color: rgba(63, 81, 181, 0.25);\n}\n@keyframes mdc-linear-progress-buffering {\n  from {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n.mat-mdc-progress-bar .mdc-linear-progress__buffer-dots {\n  background-color: rgba(63, 81, 181, 0.25);\n  /* @alternate */\n  background-color: var(--mdc-linear-progress-track-color, rgba(63, 81, 181, 0.25));\n}\n@media (forced-colors: active) {\n  .mat-mdc-progress-bar .mdc-linear-progress__buffer-dots {\n    background-color: ButtonBorder;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .mat-mdc-progress-bar .mdc-linear-progress__buffer-dots {\n    background-color: transparent;\n    background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(63, 81, 181, 0.25)'/%3E%3C/svg%3E\");\n  }\n}\n.mat-mdc-progress-bar .mdc-linear-progress__buffer-bar {\n  background-color: rgba(63, 81, 181, 0.25);\n  /* @alternate */\n  background-color: var(--mdc-linear-progress-track-color, rgba(63, 81, 181, 0.25));\n}\n.mat-mdc-progress-bar.mat-accent {\n  --mdc-linear-progress-active-indicator-color: #69f0ae;\n  --mdc-linear-progress-track-color: rgba(105, 240, 174, 0.25);\n}\n@keyframes mdc-linear-progress-buffering {\n  from {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n.mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-dots {\n  background-color: rgba(105, 240, 174, 0.25);\n  /* @alternate */\n  background-color: var(--mdc-linear-progress-track-color, rgba(105, 240, 174, 0.25));\n}\n@media (forced-colors: active) {\n  .mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-dots {\n    background-color: ButtonBorder;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-dots {\n    background-color: transparent;\n    background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(105, 240, 174, 0.25)'/%3E%3C/svg%3E\");\n  }\n}\n.mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-bar {\n  background-color: rgba(105, 240, 174, 0.25);\n  /* @alternate */\n  background-color: var(--mdc-linear-progress-track-color, rgba(105, 240, 174, 0.25));\n}\n.mat-mdc-progress-bar.mat-warn {\n  --mdc-linear-progress-active-indicator-color: #f44336;\n  --mdc-linear-progress-track-color: rgba(244, 67, 54, 0.25);\n}\n@keyframes mdc-linear-progress-buffering {\n  from {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n.mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-dots {\n  background-color: rgba(244, 67, 54, 0.25);\n  /* @alternate */\n  background-color: var(--mdc-linear-progress-track-color, rgba(244, 67, 54, 0.25));\n}\n@media (forced-colors: active) {\n  .mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-dots {\n    background-color: ButtonBorder;\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-dots {\n    background-color: transparent;\n    background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(244, 67, 54, 0.25)'/%3E%3C/svg%3E\");\n  }\n}\n.mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-bar {\n  background-color: rgba(244, 67, 54, 0.25);\n  /* @alternate */\n  background-color: var(--mdc-linear-progress-track-color, rgba(244, 67, 54, 0.25));\n}\nhtml {\n  --mdc-plain-tooltip-container-shape: 4px;\n  --mdc-plain-tooltip-supporting-text-line-height: 16px;\n}\n\nhtml {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: #fff;\n}\n\nhtml {\n  --mdc-plain-tooltip-supporting-text-font: Roboto, sans-serif;\n  --mdc-plain-tooltip-supporting-text-size: 12px;\n  --mdc-plain-tooltip-supporting-text-weight: 400;\n  --mdc-plain-tooltip-supporting-text-tracking: 0.0333333333em;\n}\n\nhtml {\n  --mdc-filled-text-field-active-indicator-height: 1px;\n  --mdc-filled-text-field-focus-active-indicator-height: 2px;\n  --mdc-filled-text-field-container-shape: 4px;\n  --mdc-outlined-text-field-outline-width: 1px;\n  --mdc-outlined-text-field-focus-outline-width: 2px;\n  --mdc-outlined-text-field-container-shape: 4px;\n}\n\nhtml {\n  --mdc-filled-text-field-caret-color: #3f51b5;\n  --mdc-filled-text-field-focus-active-indicator-color: #3f51b5;\n  --mdc-filled-text-field-focus-label-text-color: rgba(63, 81, 181, 0.87);\n  --mdc-filled-text-field-container-color: #4a4a4a;\n  --mdc-filled-text-field-disabled-container-color: #464646;\n  --mdc-filled-text-field-label-text-color: rgba(255, 255, 255, 0.6);\n  --mdc-filled-text-field-disabled-label-text-color: rgba(255, 255, 255, 0.38);\n  --mdc-filled-text-field-input-text-color: rgba(255, 255, 255, 0.87);\n  --mdc-filled-text-field-disabled-input-text-color: rgba(255, 255, 255, 0.38);\n  --mdc-filled-text-field-input-text-placeholder-color: rgba(255, 255, 255, 0.6);\n  --mdc-filled-text-field-error-focus-label-text-color: #f44336;\n  --mdc-filled-text-field-error-label-text-color: #f44336;\n  --mdc-filled-text-field-error-caret-color: #f44336;\n  --mdc-filled-text-field-active-indicator-color: rgba(255, 255, 255, 0.42);\n  --mdc-filled-text-field-disabled-active-indicator-color: rgba(255, 255, 255, 0.06);\n  --mdc-filled-text-field-hover-active-indicator-color: rgba(255, 255, 255, 0.87);\n  --mdc-filled-text-field-error-active-indicator-color: #f44336;\n  --mdc-filled-text-field-error-focus-active-indicator-color: #f44336;\n  --mdc-filled-text-field-error-hover-active-indicator-color: #f44336;\n  --mdc-outlined-text-field-caret-color: #3f51b5;\n  --mdc-outlined-text-field-focus-outline-color: #3f51b5;\n  --mdc-outlined-text-field-focus-label-text-color: rgba(63, 81, 181, 0.87);\n  --mdc-outlined-text-field-label-text-color: rgba(255, 255, 255, 0.6);\n  --mdc-outlined-text-field-disabled-label-text-color: rgba(255, 255, 255, 0.38);\n  --mdc-outlined-text-field-input-text-color: rgba(255, 255, 255, 0.87);\n  --mdc-outlined-text-field-disabled-input-text-color: rgba(255, 255, 255, 0.38);\n  --mdc-outlined-text-field-input-text-placeholder-color: rgba(255, 255, 255, 0.6);\n  --mdc-outlined-text-field-error-caret-color: #f44336;\n  --mdc-outlined-text-field-error-focus-label-text-color: #f44336;\n  --mdc-outlined-text-field-error-label-text-color: #f44336;\n  --mdc-outlined-text-field-outline-color: rgba(255, 255, 255, 0.38);\n  --mdc-outlined-text-field-disabled-outline-color: rgba(255, 255, 255, 0.06);\n  --mdc-outlined-text-field-hover-outline-color: rgba(255, 255, 255, 0.87);\n  --mdc-outlined-text-field-error-focus-outline-color: #f44336;\n  --mdc-outlined-text-field-error-hover-outline-color: #f44336;\n  --mdc-outlined-text-field-error-outline-color: #f44336;\n  --mat-form-field-focus-select-arrow-color: rgba(63, 81, 181, 0.87);\n  --mat-form-field-disabled-input-text-placeholder-color: rgba(255, 255, 255, 0.38);\n  --mat-form-field-state-layer-color: rgba(255, 255, 255, 0.87);\n  --mat-form-field-error-text-color: #f44336;\n  --mat-form-field-select-option-text-color: rgba(0, 0, 0, 0.87);\n  --mat-form-field-select-disabled-option-text-color: rgba(0, 0, 0, 0.38);\n  --mat-form-field-enabled-select-arrow-color: rgba(255, 255, 255, 0.54);\n  --mat-form-field-disabled-select-arrow-color: rgba(255, 255, 255, 0.38);\n  --mat-form-field-hover-state-layer-opacity: 0.08;\n  --mat-form-field-focus-state-layer-opacity: 0.24;\n}\n\n.mat-mdc-form-field.mat-accent {\n  --mdc-filled-text-field-caret-color: #69f0ae;\n  --mdc-filled-text-field-focus-active-indicator-color: #69f0ae;\n  --mdc-filled-text-field-focus-label-text-color: rgba(105, 240, 174, 0.87);\n  --mdc-outlined-text-field-caret-color: #69f0ae;\n  --mdc-outlined-text-field-focus-outline-color: #69f0ae;\n  --mdc-outlined-text-field-focus-label-text-color: rgba(105, 240, 174, 0.87);\n  --mat-form-field-focus-select-arrow-color: rgba(105, 240, 174, 0.87);\n}\n\n.mat-mdc-form-field.mat-warn {\n  --mdc-filled-text-field-caret-color: #f44336;\n  --mdc-filled-text-field-focus-active-indicator-color: #f44336;\n  --mdc-filled-text-field-focus-label-text-color: rgba(244, 67, 54, 0.87);\n  --mdc-outlined-text-field-caret-color: #f44336;\n  --mdc-outlined-text-field-focus-outline-color: #f44336;\n  --mdc-outlined-text-field-focus-label-text-color: rgba(244, 67, 54, 0.87);\n  --mat-form-field-focus-select-arrow-color: rgba(244, 67, 54, 0.87);\n}\n\n.mat-mdc-form-field-infix {\n  min-height: 56px;\n}\n\n.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n  top: 28px;\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\n  --mat-mdc-form-field-label-transform: translateY(\n          -34.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n  padding-top: 24px;\n  padding-bottom: 8px;\n}\n\n.mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\nhtml {\n  --mdc-filled-text-field-label-text-font: Roboto, sans-serif;\n  --mdc-filled-text-field-label-text-size: 16px;\n  --mdc-filled-text-field-label-text-tracking: 0.03125em;\n  --mdc-filled-text-field-label-text-weight: 400;\n  --mdc-outlined-text-field-label-text-font: Roboto, sans-serif;\n  --mdc-outlined-text-field-label-text-size: 16px;\n  --mdc-outlined-text-field-label-text-tracking: 0.03125em;\n  --mdc-outlined-text-field-label-text-weight: 400;\n  --mat-form-field-container-text-font: Roboto, sans-serif;\n  --mat-form-field-container-text-line-height: 24px;\n  --mat-form-field-container-text-size: 16px;\n  --mat-form-field-container-text-tracking: 0.03125em;\n  --mat-form-field-container-text-weight: 400;\n  --mat-form-field-outlined-label-text-populated-size: 16px;\n  --mat-form-field-subscript-text-font: Roboto, sans-serif;\n  --mat-form-field-subscript-text-line-height: 20px;\n  --mat-form-field-subscript-text-size: 12px;\n  --mat-form-field-subscript-text-tracking: 0.0333333333em;\n  --mat-form-field-subscript-text-weight: 400;\n}\n\nhtml {\n  --mat-select-panel-background-color: #424242;\n  --mat-select-enabled-trigger-text-color: rgba(255, 255, 255, 0.87);\n  --mat-select-disabled-trigger-text-color: rgba(255, 255, 255, 0.38);\n  --mat-select-placeholder-text-color: rgba(255, 255, 255, 0.6);\n  --mat-select-enabled-arrow-color: rgba(255, 255, 255, 0.54);\n  --mat-select-disabled-arrow-color: rgba(255, 255, 255, 0.38);\n  --mat-select-focused-arrow-color: rgba(63, 81, 181, 0.87);\n  --mat-select-invalid-arrow-color: rgba(244, 67, 54, 0.87);\n}\nhtml .mat-mdc-form-field.mat-accent {\n  --mat-select-panel-background-color: #424242;\n  --mat-select-enabled-trigger-text-color: rgba(255, 255, 255, 0.87);\n  --mat-select-disabled-trigger-text-color: rgba(255, 255, 255, 0.38);\n  --mat-select-placeholder-text-color: rgba(255, 255, 255, 0.6);\n  --mat-select-enabled-arrow-color: rgba(255, 255, 255, 0.54);\n  --mat-select-disabled-arrow-color: rgba(255, 255, 255, 0.38);\n  --mat-select-focused-arrow-color: rgba(105, 240, 174, 0.87);\n  --mat-select-invalid-arrow-color: rgba(244, 67, 54, 0.87);\n}\nhtml .mat-mdc-form-field.mat-warn {\n  --mat-select-panel-background-color: #424242;\n  --mat-select-enabled-trigger-text-color: rgba(255, 255, 255, 0.87);\n  --mat-select-disabled-trigger-text-color: rgba(255, 255, 255, 0.38);\n  --mat-select-placeholder-text-color: rgba(255, 255, 255, 0.6);\n  --mat-select-enabled-arrow-color: rgba(255, 255, 255, 0.54);\n  --mat-select-disabled-arrow-color: rgba(255, 255, 255, 0.38);\n  --mat-select-focused-arrow-color: rgba(244, 67, 54, 0.87);\n  --mat-select-invalid-arrow-color: rgba(244, 67, 54, 0.87);\n}\n\nhtml {\n  --mat-select-trigger-text-font: Roboto, sans-serif;\n  --mat-select-trigger-text-line-height: 24px;\n  --mat-select-trigger-text-size: 16px;\n  --mat-select-trigger-text-tracking: 0.03125em;\n  --mat-select-trigger-text-weight: 400;\n}\n\nhtml {\n  --mat-autocomplete-background-color: #424242;\n}\n\nhtml {\n  --mdc-dialog-container-elevation-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  --mdc-dialog-container-shadow-color: #000;\n  --mdc-dialog-container-shape: 4px;\n}\n\nhtml {\n  --mdc-dialog-container-color: #424242;\n  --mdc-dialog-subhead-color: rgba(255, 255, 255, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(255, 255, 255, 0.6);\n}\n\nhtml {\n  --mdc-dialog-subhead-font: Roboto, sans-serif;\n  --mdc-dialog-subhead-line-height: 32px;\n  --mdc-dialog-subhead-size: 20px;\n  --mdc-dialog-subhead-weight: 500;\n  --mdc-dialog-subhead-tracking: 0.0125em;\n  --mdc-dialog-supporting-text-font: Roboto, sans-serif;\n  --mdc-dialog-supporting-text-line-height: 24px;\n  --mdc-dialog-supporting-text-size: 16px;\n  --mdc-dialog-supporting-text-weight: 400;\n  --mdc-dialog-supporting-text-tracking: 0.03125em;\n}\n\n.mat-mdc-standard-chip {\n  --mdc-chip-container-shape-family: rounded;\n  --mdc-chip-container-shape-radius: 16px 16px 16px 16px;\n  --mdc-chip-with-avatar-avatar-shape-family: rounded;\n  --mdc-chip-with-avatar-avatar-shape-radius: 14px 14px 14px 14px;\n  --mdc-chip-with-avatar-avatar-size: 28px;\n  --mdc-chip-with-icon-icon-size: 18px;\n}\n\n.mat-mdc-standard-chip {\n  --mdc-chip-disabled-label-text-color: #fafafa;\n  --mdc-chip-elevated-container-color: #595959;\n  --mdc-chip-elevated-disabled-container-color: #595959;\n  --mdc-chip-focus-state-layer-color: white;\n  --mdc-chip-focus-state-layer-opacity: 0.12;\n  --mdc-chip-label-text-color: #fafafa;\n  --mdc-chip-with-icon-icon-color: #fafafa;\n  --mdc-chip-with-icon-disabled-icon-color: #fafafa;\n  --mdc-chip-with-icon-selected-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #fafafa;\n}\n.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-primary, .mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-primary {\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-elevated-container-color: #3f51b5;\n  --mdc-chip-elevated-disabled-container-color: #3f51b5;\n  --mdc-chip-focus-state-layer-color: white;\n  --mdc-chip-focus-state-layer-opacity: 0.12;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-accent, .mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-accent {\n  --mdc-chip-disabled-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-chip-elevated-container-color: #69f0ae;\n  --mdc-chip-elevated-disabled-container-color: #69f0ae;\n  --mdc-chip-focus-state-layer-color: white;\n  --mdc-chip-focus-state-layer-opacity: 0.12;\n  --mdc-chip-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-chip-with-icon-icon-color: rgba(0, 0, 0, 0.87);\n  --mdc-chip-with-icon-disabled-icon-color: rgba(0, 0, 0, 0.87);\n  --mdc-chip-with-icon-selected-icon-color: rgba(0, 0, 0, 0.87);\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: rgba(0, 0, 0, 0.87);\n  --mdc-chip-with-trailing-icon-trailing-icon-color: rgba(0, 0, 0, 0.87);\n}\n.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-warn, .mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-warn {\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-elevated-container-color: #f44336;\n  --mdc-chip-elevated-disabled-container-color: #f44336;\n  --mdc-chip-focus-state-layer-color: white;\n  --mdc-chip-focus-state-layer-opacity: 0.12;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n}\n\n.mat-mdc-chip.mat-mdc-standard-chip {\n  --mdc-chip-container-height: 32px;\n}\n\n.mat-mdc-standard-chip {\n  --mdc-chip-label-text-font: Roboto, sans-serif;\n  --mdc-chip-label-text-line-height: 20px;\n  --mdc-chip-label-text-size: 14px;\n  --mdc-chip-label-text-tracking: 0.0178571429em;\n  --mdc-chip-label-text-weight: 400;\n}\n\n.mdc-switch {\n  --mdc-switch-disabled-handle-opacity: 0.38;\n  --mdc-switch-disabled-selected-icon-opacity: 0.38;\n  --mdc-switch-disabled-track-opacity: 0.12;\n  --mdc-switch-disabled-unselected-icon-opacity: 0.38;\n  --mdc-switch-handle-height: 20px;\n  --mdc-switch-handle-shape: 10px;\n  --mdc-switch-handle-width: 20px;\n  --mdc-switch-selected-icon-size: 18px;\n  --mdc-switch-track-height: 14px;\n  --mdc-switch-track-shape: 7px;\n  --mdc-switch-track-width: 36px;\n  --mdc-switch-unselected-icon-size: 18px;\n  --mdc-switch-state-layer-size: 40px;\n  --mdc-switch-selected-focus-state-layer-opacity: 0.12;\n  --mdc-switch-selected-hover-state-layer-opacity: 0.04;\n  --mdc-switch-selected-pressed-state-layer-opacity: 0.1;\n  --mdc-switch-unselected-focus-state-layer-opacity: 0.12;\n  --mdc-switch-unselected-hover-state-layer-opacity: 0.04;\n  --mdc-switch-unselected-pressed-state-layer-opacity: 0.1;\n}\n\n.mat-mdc-slide-toggle {\n  --mdc-switch-selected-focus-state-layer-color: #7986cb;\n  --mdc-switch-selected-handle-color: #7986cb;\n  --mdc-switch-selected-hover-state-layer-color: #7986cb;\n  --mdc-switch-selected-pressed-state-layer-color: #7986cb;\n  --mdc-switch-selected-focus-handle-color: #9fa8da;\n  --mdc-switch-selected-hover-handle-color: #9fa8da;\n  --mdc-switch-selected-pressed-handle-color: #9fa8da;\n  --mdc-switch-selected-focus-track-color: #3949ab;\n  --mdc-switch-selected-hover-track-color: #3949ab;\n  --mdc-switch-selected-pressed-track-color: #3949ab;\n  --mdc-switch-selected-track-color: #3949ab;\n  --mdc-switch-disabled-selected-handle-color: #000;\n  --mdc-switch-disabled-selected-icon-color: #212121;\n  --mdc-switch-disabled-selected-track-color: #f5f5f5;\n  --mdc-switch-disabled-unselected-handle-color: #000;\n  --mdc-switch-disabled-unselected-icon-color: #212121;\n  --mdc-switch-disabled-unselected-track-color: #f5f5f5;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-handle-elevation-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-switch-handle-shadow-color: black;\n  --mdc-switch-disabled-handle-elevation-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-switch-selected-icon-color: #212121;\n  --mdc-switch-unselected-focus-handle-color: #fafafa;\n  --mdc-switch-unselected-focus-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-focus-track-color: #616161;\n  --mdc-switch-unselected-handle-color: #9e9e9e;\n  --mdc-switch-unselected-hover-handle-color: #fafafa;\n  --mdc-switch-unselected-hover-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-hover-track-color: #616161;\n  --mdc-switch-unselected-icon-color: #212121;\n  --mdc-switch-unselected-pressed-handle-color: #fafafa;\n  --mdc-switch-unselected-pressed-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-pressed-track-color: #616161;\n  --mdc-switch-unselected-track-color: #616161;\n}\n.mat-mdc-slide-toggle .mdc-form-field {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-slide-toggle .mdc-switch--disabled + label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-slide-toggle.mat-accent {\n  --mdc-switch-selected-focus-state-layer-color: #81c784;\n  --mdc-switch-selected-handle-color: #81c784;\n  --mdc-switch-selected-hover-state-layer-color: #81c784;\n  --mdc-switch-selected-pressed-state-layer-color: #81c784;\n  --mdc-switch-selected-focus-handle-color: #a5d6a7;\n  --mdc-switch-selected-hover-handle-color: #a5d6a7;\n  --mdc-switch-selected-pressed-handle-color: #a5d6a7;\n  --mdc-switch-selected-focus-track-color: #43a047;\n  --mdc-switch-selected-hover-track-color: #43a047;\n  --mdc-switch-selected-pressed-track-color: #43a047;\n  --mdc-switch-selected-track-color: #43a047;\n}\n.mat-mdc-slide-toggle.mat-warn {\n  --mdc-switch-selected-focus-state-layer-color: #e57373;\n  --mdc-switch-selected-handle-color: #e57373;\n  --mdc-switch-selected-hover-state-layer-color: #e57373;\n  --mdc-switch-selected-pressed-state-layer-color: #e57373;\n  --mdc-switch-selected-focus-handle-color: #ef9a9a;\n  --mdc-switch-selected-hover-handle-color: #ef9a9a;\n  --mdc-switch-selected-pressed-handle-color: #ef9a9a;\n  --mdc-switch-selected-focus-track-color: #e53935;\n  --mdc-switch-selected-hover-track-color: #e53935;\n  --mdc-switch-selected-pressed-track-color: #e53935;\n  --mdc-switch-selected-track-color: #e53935;\n}\n\n.mat-mdc-slide-toggle {\n  --mdc-switch-state-layer-size: 48px;\n}\n\n.mat-mdc-slide-toggle {\n  --mat-slide-toggle-label-text-font: Roboto, sans-serif;\n  --mat-slide-toggle-label-text-size: 14px;\n  --mat-slide-toggle-label-text-tracking: 0.0178571429em;\n  --mat-slide-toggle-label-text-line-height: 20px;\n  --mat-slide-toggle-label-text-weight: 400;\n}\n.mat-mdc-slide-toggle .mdc-form-field {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: Roboto, sans-serif;\n  /* @alternate */\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\n  font-size: 0.875rem;\n  /* @alternate */\n  font-size: var(--mdc-typography-body2-font-size, 0.875rem);\n  line-height: 1.25rem;\n  /* @alternate */\n  line-height: var(--mdc-typography-body2-line-height, 1.25rem);\n  font-weight: 400;\n  /* @alternate */\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: 0.0178571429em;\n  /* @alternate */\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0178571429em);\n  text-decoration: inherit;\n  /* @alternate */\n  text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: inherit;\n  /* @alternate */\n  text-transform: var(--mdc-typography-body2-text-transform, inherit);\n}\n\nhtml {\n  --mdc-radio-disabled-selected-icon-opacity: 0.38;\n  --mdc-radio-disabled-unselected-icon-opacity: 0.38;\n  --mdc-radio-state-layer-size: 40px;\n}\n\n.mat-mdc-radio-button .mdc-form-field {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-mdc-radio-button.mat-primary {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #3f51b5;\n  --mdc-radio-selected-hover-icon-color: #3f51b5;\n  --mdc-radio-selected-icon-color: #3f51b5;\n  --mdc-radio-selected-pressed-icon-color: #3f51b5;\n  --mat-radio-ripple-color: #fff;\n  --mat-radio-checked-ripple-color: #3f51b5;\n  --mat-radio-disabled-label-color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-accent {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #69f0ae;\n  --mdc-radio-selected-hover-icon-color: #69f0ae;\n  --mdc-radio-selected-icon-color: #69f0ae;\n  --mdc-radio-selected-pressed-icon-color: #69f0ae;\n  --mat-radio-ripple-color: #fff;\n  --mat-radio-checked-ripple-color: #69f0ae;\n  --mat-radio-disabled-label-color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-warn {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #f44336;\n  --mdc-radio-selected-hover-icon-color: #f44336;\n  --mdc-radio-selected-icon-color: #f44336;\n  --mdc-radio-selected-pressed-icon-color: #f44336;\n  --mat-radio-ripple-color: #fff;\n  --mat-radio-checked-ripple-color: #f44336;\n  --mat-radio-disabled-label-color: rgba(255, 255, 255, 0.5);\n}\n\nhtml {\n  --mdc-radio-state-layer-size: 40px;\n}\n\n.mat-mdc-radio-button .mdc-form-field {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\n  font-size: var(--mdc-typography-body2-font-size, 14px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0178571429em);\n  text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\nhtml {\n  --mdc-slider-active-track-height: 6px;\n  --mdc-slider-active-track-shape: 9999px;\n  --mdc-slider-handle-height: 20px;\n  --mdc-slider-handle-shape: 50%;\n  --mdc-slider-handle-width: 20px;\n  --mdc-slider-inactive-track-height: 4px;\n  --mdc-slider-inactive-track-shape: 9999px;\n  --mdc-slider-with-overlap-handle-outline-width: 1px;\n  --mdc-slider-with-tick-marks-active-container-opacity: 0.6;\n  --mdc-slider-with-tick-marks-container-shape: 50%;\n  --mdc-slider-with-tick-marks-container-size: 2px;\n  --mdc-slider-with-tick-marks-inactive-container-opacity: 0.6;\n}\n\nhtml {\n  --mdc-slider-handle-color: #3f51b5;\n  --mdc-slider-focus-handle-color: #3f51b5;\n  --mdc-slider-hover-handle-color: #3f51b5;\n  --mdc-slider-active-track-color: #3f51b5;\n  --mdc-slider-inactive-track-color: #3f51b5;\n  --mdc-slider-with-tick-marks-inactive-container-color: #3f51b5;\n  --mdc-slider-with-tick-marks-active-container-color: white;\n  --mdc-slider-disabled-active-track-color: #fff;\n  --mdc-slider-disabled-handle-color: #fff;\n  --mdc-slider-disabled-inactive-track-color: #fff;\n  --mdc-slider-label-container-color: #fff;\n  --mdc-slider-label-label-text-color: #000;\n  --mdc-slider-with-overlap-handle-outline-color: #fff;\n  --mdc-slider-with-tick-marks-disabled-container-color: #fff;\n  --mdc-slider-handle-elevation: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mat-mdc-slider-ripple-color: #3f51b5;\n  --mat-mdc-slider-hover-ripple-color: rgba(63, 81, 181, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(63, 81, 181, 0.2);\n  --mat-slider-value-indicator-opacity: 0.9;\n}\nhtml .mat-accent {\n  --mdc-slider-handle-color: #69f0ae;\n  --mdc-slider-focus-handle-color: #69f0ae;\n  --mdc-slider-hover-handle-color: #69f0ae;\n  --mdc-slider-active-track-color: #69f0ae;\n  --mdc-slider-inactive-track-color: #69f0ae;\n  --mdc-slider-with-tick-marks-inactive-container-color: #69f0ae;\n  --mdc-slider-with-tick-marks-active-container-color: rgba(0, 0, 0, 0.87);\n  --mat-mdc-slider-ripple-color: #69f0ae;\n  --mat-mdc-slider-hover-ripple-color: rgba(105, 240, 174, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(105, 240, 174, 0.2);\n}\nhtml .mat-warn {\n  --mdc-slider-handle-color: #f44336;\n  --mdc-slider-focus-handle-color: #f44336;\n  --mdc-slider-hover-handle-color: #f44336;\n  --mdc-slider-active-track-color: #f44336;\n  --mdc-slider-inactive-track-color: #f44336;\n  --mdc-slider-with-tick-marks-inactive-container-color: #f44336;\n  --mdc-slider-with-tick-marks-active-container-color: white;\n  --mat-mdc-slider-ripple-color: #f44336;\n  --mat-mdc-slider-hover-ripple-color: rgba(244, 67, 54, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(244, 67, 54, 0.2);\n}\n\nhtml {\n  --mdc-slider-label-label-text-font: Roboto, sans-serif;\n  --mdc-slider-label-label-text-size: 14px;\n  --mdc-slider-label-label-text-line-height: 22px;\n  --mdc-slider-label-label-text-tracking: 0.0071428571em;\n  --mdc-slider-label-label-text-weight: 500;\n}\n\nhtml {\n  --mat-menu-container-shape: 4px;\n}\n\nhtml {\n  --mat-menu-item-label-text-color: white;\n  --mat-menu-item-icon-color: white;\n  --mat-menu-item-hover-state-layer-color: rgba(255, 255, 255, 0.08);\n  --mat-menu-item-focus-state-layer-color: rgba(255, 255, 255, 0.08);\n  --mat-menu-container-color: #424242;\n}\n\nhtml {\n  --mat-menu-item-label-text-font: Roboto, sans-serif;\n  --mat-menu-item-label-text-size: 16px;\n  --mat-menu-item-label-text-tracking: 0.03125em;\n  --mat-menu-item-label-text-line-height: 24px;\n  --mat-menu-item-label-text-weight: 400;\n}\n\nhtml {\n  --mdc-list-list-item-container-shape: 0;\n  --mdc-list-list-item-leading-avatar-shape: 50%;\n  --mdc-list-list-item-container-color: transparent;\n  --mdc-list-list-item-selected-container-color: transparent;\n  --mdc-list-list-item-leading-avatar-color: transparent;\n  --mdc-list-list-item-leading-icon-size: 24px;\n  --mdc-list-list-item-leading-avatar-size: 40px;\n  --mdc-list-list-item-trailing-icon-size: 24px;\n  --mdc-list-list-item-disabled-state-layer-color: transparent;\n  --mdc-list-list-item-disabled-state-layer-opacity: 0;\n  --mdc-list-list-item-disabled-label-text-opacity: 0.38;\n  --mdc-list-list-item-disabled-leading-icon-opacity: 0.38;\n  --mdc-list-list-item-disabled-trailing-icon-opacity: 0.38;\n}\n\nhtml {\n  --mdc-list-list-item-label-text-color: white;\n  --mdc-list-list-item-supporting-text-color: rgba(255, 255, 255, 0.7);\n  --mdc-list-list-item-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-disabled-label-text-color: white;\n  --mdc-list-list-item-disabled-leading-icon-color: white;\n  --mdc-list-list-item-disabled-trailing-icon-color: white;\n  --mdc-list-list-item-hover-label-text-color: white;\n  --mdc-list-list-item-hover-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-focus-label-text-color: white;\n  --mdc-list-list-item-hover-state-layer-color: white;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.08;\n  --mdc-list-list-item-focus-state-layer-color: white;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.24;\n}\n\n.mdc-list-item__start,\n.mdc-list-item__end {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #3f51b5;\n  --mdc-radio-selected-hover-icon-color: #3f51b5;\n  --mdc-radio-selected-icon-color: #3f51b5;\n  --mdc-radio-selected-pressed-icon-color: #3f51b5;\n}\n\n.mat-accent .mdc-list-item__start,\n.mat-accent .mdc-list-item__end {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #69f0ae;\n  --mdc-radio-selected-hover-icon-color: #69f0ae;\n  --mdc-radio-selected-icon-color: #69f0ae;\n  --mdc-radio-selected-pressed-icon-color: #69f0ae;\n}\n\n.mat-warn .mdc-list-item__start,\n.mat-warn .mdc-list-item__end {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #f44336;\n  --mdc-radio-selected-hover-icon-color: #f44336;\n  --mdc-radio-selected-icon-color: #f44336;\n  --mdc-radio-selected-pressed-icon-color: #f44336;\n}\n\n.mat-mdc-list-option {\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #3f51b5;\n  --mdc-checkbox-selected-hover-icon-color: #3f51b5;\n  --mdc-checkbox-selected-icon-color: #3f51b5;\n  --mdc-checkbox-selected-pressed-icon-color: #3f51b5;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-selected-focus-state-layer-color: #3f51b5;\n  --mdc-checkbox-selected-hover-state-layer-color: #3f51b5;\n  --mdc-checkbox-selected-pressed-state-layer-color: #3f51b5;\n  --mdc-checkbox-unselected-focus-state-layer-color: white;\n  --mdc-checkbox-unselected-hover-state-layer-color: white;\n  --mdc-checkbox-unselected-pressed-state-layer-color: white;\n}\n\n.mat-mdc-list-option.mat-accent {\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #69f0ae;\n  --mdc-checkbox-selected-hover-icon-color: #69f0ae;\n  --mdc-checkbox-selected-icon-color: #69f0ae;\n  --mdc-checkbox-selected-pressed-icon-color: #69f0ae;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-selected-focus-state-layer-color: #69f0ae;\n  --mdc-checkbox-selected-hover-state-layer-color: #69f0ae;\n  --mdc-checkbox-selected-pressed-state-layer-color: #69f0ae;\n  --mdc-checkbox-unselected-focus-state-layer-color: white;\n  --mdc-checkbox-unselected-hover-state-layer-color: white;\n  --mdc-checkbox-unselected-pressed-state-layer-color: white;\n}\n\n.mat-mdc-list-option.mat-warn {\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #f44336;\n  --mdc-checkbox-selected-hover-icon-color: #f44336;\n  --mdc-checkbox-selected-icon-color: #f44336;\n  --mdc-checkbox-selected-pressed-icon-color: #f44336;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-selected-focus-state-layer-color: #f44336;\n  --mdc-checkbox-selected-hover-state-layer-color: #f44336;\n  --mdc-checkbox-selected-pressed-state-layer-color: #f44336;\n  --mdc-checkbox-unselected-focus-state-layer-color: white;\n  --mdc-checkbox-unselected-hover-state-layer-color: white;\n  --mdc-checkbox-unselected-pressed-state-layer-color: white;\n}\n\n.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected .mdc-list-item__primary-text,\n.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated .mdc-list-item__primary-text {\n  color: #3f51b5;\n}\n.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: #3f51b5;\n}\n\n.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__start,\n.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__content,\n.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__end {\n  opacity: 1;\n}\n\nhtml {\n  --mdc-list-list-item-one-line-container-height: 48px;\n  --mdc-list-list-item-two-line-container-height: 64px;\n  --mdc-list-list-item-three-line-container-height: 88px;\n}\n\n.mdc-list-item__start,\n.mdc-list-item__end {\n  --mdc-radio-state-layer-size: 40px;\n}\n\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line, .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line, .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line {\n  height: 56px;\n}\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines, .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines, .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines {\n  height: 72px;\n}\n\nhtml {\n  --mdc-list-list-item-label-text-font: Roboto, sans-serif;\n  --mdc-list-list-item-label-text-line-height: 24px;\n  --mdc-list-list-item-label-text-size: 16px;\n  --mdc-list-list-item-label-text-tracking: 0.03125em;\n  --mdc-list-list-item-label-text-weight: 400;\n  --mdc-list-list-item-supporting-text-font: Roboto, sans-serif;\n  --mdc-list-list-item-supporting-text-line-height: 20px;\n  --mdc-list-list-item-supporting-text-size: 14px;\n  --mdc-list-list-item-supporting-text-tracking: 0.0178571429em;\n  --mdc-list-list-item-supporting-text-weight: 400;\n  --mdc-list-list-item-trailing-supporting-text-font: Roboto, sans-serif;\n  --mdc-list-list-item-trailing-supporting-text-line-height: 20px;\n  --mdc-list-list-item-trailing-supporting-text-size: 12px;\n  --mdc-list-list-item-trailing-supporting-text-tracking: 0.0333333333em;\n  --mdc-list-list-item-trailing-supporting-text-weight: 400;\n}\n\n.mdc-list-group__subheader {\n  font: 400 16px / 28px Roboto, sans-serif;\n  letter-spacing: 0.009375em;\n}\n\nhtml {\n  --mat-paginator-container-text-color: rgba(255, 255, 255, 0.87);\n  --mat-paginator-container-background-color: #424242;\n  --mat-paginator-enabled-icon-color: rgba(255, 255, 255, 0.54);\n  --mat-paginator-disabled-icon-color: rgba(255, 255, 255, 0.12);\n}\n\nhtml {\n  --mat-paginator-container-size: 56px;\n}\n\n.mat-mdc-paginator .mat-mdc-form-field-infix {\n  min-height: 40px;\n}\n.mat-mdc-paginator .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n  top: 20px;\n}\n.mat-mdc-paginator .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\n  --mat-mdc-form-field-label-transform: translateY(\n          -26.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n.mat-mdc-paginator .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {\n  display: none;\n}\n\nhtml {\n  --mat-paginator-container-text-font: Roboto, sans-serif;\n  --mat-paginator-container-text-line-height: 20px;\n  --mat-paginator-container-text-size: 12px;\n  --mat-paginator-container-text-tracking: 0.0333333333em;\n  --mat-paginator-container-text-weight: 400;\n  --mat-paginator-select-trigger-text-size: 12px;\n}\n\nhtml {\n  --mdc-tab-indicator-active-indicator-height: 2px;\n  --mdc-tab-indicator-active-indicator-shape: 0;\n  --mdc-secondary-navigation-tab-container-height: 48px;\n}\n\n.mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n  --mdc-tab-indicator-active-indicator-color: #3f51b5;\n  --mat-tab-header-disabled-ripple-color: rgba(255, 255, 255, 0.5);\n  --mat-tab-header-pagination-icon-color: #fff;\n  --mat-tab-header-inactive-label-text-color: rgba(255, 255, 255, 0.6);\n  --mat-tab-header-active-label-text-color: #3f51b5;\n  --mat-tab-header-active-ripple-color: #3f51b5;\n  --mat-tab-header-inactive-ripple-color: #3f51b5;\n  --mat-tab-header-inactive-focus-label-text-color: rgba(255, 255, 255, 0.6);\n  --mat-tab-header-inactive-hover-label-text-color: rgba(255, 255, 255, 0.6);\n  --mat-tab-header-active-focus-label-text-color: #3f51b5;\n  --mat-tab-header-active-hover-label-text-color: #3f51b5;\n  --mat-tab-header-active-focus-indicator-color: #3f51b5;\n  --mat-tab-header-active-hover-indicator-color: #3f51b5;\n}\n.mat-mdc-tab-group.mat-accent, .mat-mdc-tab-nav-bar.mat-accent {\n  --mdc-tab-indicator-active-indicator-color: #69f0ae;\n  --mat-tab-header-disabled-ripple-color: rgba(255, 255, 255, 0.5);\n  --mat-tab-header-pagination-icon-color: #fff;\n  --mat-tab-header-inactive-label-text-color: rgba(255, 255, 255, 0.6);\n  --mat-tab-header-active-label-text-color: #69f0ae;\n  --mat-tab-header-active-ripple-color: #69f0ae;\n  --mat-tab-header-inactive-ripple-color: #69f0ae;\n  --mat-tab-header-inactive-focus-label-text-color: rgba(255, 255, 255, 0.6);\n  --mat-tab-header-inactive-hover-label-text-color: rgba(255, 255, 255, 0.6);\n  --mat-tab-header-active-focus-label-text-color: #69f0ae;\n  --mat-tab-header-active-hover-label-text-color: #69f0ae;\n  --mat-tab-header-active-focus-indicator-color: #69f0ae;\n  --mat-tab-header-active-hover-indicator-color: #69f0ae;\n}\n.mat-mdc-tab-group.mat-warn, .mat-mdc-tab-nav-bar.mat-warn {\n  --mdc-tab-indicator-active-indicator-color: #f44336;\n  --mat-tab-header-disabled-ripple-color: rgba(255, 255, 255, 0.5);\n  --mat-tab-header-pagination-icon-color: #fff;\n  --mat-tab-header-inactive-label-text-color: rgba(255, 255, 255, 0.6);\n  --mat-tab-header-active-label-text-color: #f44336;\n  --mat-tab-header-active-ripple-color: #f44336;\n  --mat-tab-header-inactive-ripple-color: #f44336;\n  --mat-tab-header-inactive-focus-label-text-color: rgba(255, 255, 255, 0.6);\n  --mat-tab-header-inactive-hover-label-text-color: rgba(255, 255, 255, 0.6);\n  --mat-tab-header-active-focus-label-text-color: #f44336;\n  --mat-tab-header-active-hover-label-text-color: #f44336;\n  --mat-tab-header-active-focus-indicator-color: #f44336;\n  --mat-tab-header-active-hover-indicator-color: #f44336;\n}\n.mat-mdc-tab-group.mat-background-primary, .mat-mdc-tab-nav-bar.mat-background-primary {\n  --mat-tab-header-with-background-background-color: #3f51b5;\n  --mat-tab-header-with-background-foreground-color: white;\n}\n.mat-mdc-tab-group.mat-background-accent, .mat-mdc-tab-nav-bar.mat-background-accent {\n  --mat-tab-header-with-background-background-color: #69f0ae;\n  --mat-tab-header-with-background-foreground-color: rgba(0, 0, 0, 0.87);\n}\n.mat-mdc-tab-group.mat-background-warn, .mat-mdc-tab-nav-bar.mat-background-warn {\n  --mat-tab-header-with-background-background-color: #f44336;\n  --mat-tab-header-with-background-foreground-color: white;\n}\n\n.mat-mdc-tab-header {\n  --mdc-secondary-navigation-tab-container-height: 48px;\n}\n\n.mat-mdc-tab-header {\n  --mat-tab-header-label-text-font: Roboto, sans-serif;\n  --mat-tab-header-label-text-size: 14px;\n  --mat-tab-header-label-text-tracking: 0.0892857143em;\n  --mat-tab-header-label-text-line-height: 36px;\n  --mat-tab-header-label-text-weight: 500;\n}\n\nhtml {\n  --mdc-checkbox-disabled-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-state-layer-opacity: 0.16;\n  --mdc-checkbox-selected-hover-state-layer-opacity: 0.04;\n  --mdc-checkbox-selected-pressed-state-layer-opacity: 0.16;\n  --mdc-checkbox-unselected-focus-state-layer-opacity: 0.16;\n  --mdc-checkbox-unselected-hover-state-layer-opacity: 0.04;\n  --mdc-checkbox-unselected-pressed-state-layer-opacity: 0.16;\n}\n\nhtml {\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #69f0ae;\n  --mdc-checkbox-selected-hover-icon-color: #69f0ae;\n  --mdc-checkbox-selected-icon-color: #69f0ae;\n  --mdc-checkbox-selected-pressed-icon-color: #69f0ae;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-selected-focus-state-layer-color: #69f0ae;\n  --mdc-checkbox-selected-hover-state-layer-color: #69f0ae;\n  --mdc-checkbox-selected-pressed-state-layer-color: #69f0ae;\n  --mdc-checkbox-unselected-focus-state-layer-color: white;\n  --mdc-checkbox-unselected-hover-state-layer-color: white;\n  --mdc-checkbox-unselected-pressed-state-layer-color: white;\n}\n\n.mat-mdc-checkbox.mat-primary {\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #3f51b5;\n  --mdc-checkbox-selected-hover-icon-color: #3f51b5;\n  --mdc-checkbox-selected-icon-color: #3f51b5;\n  --mdc-checkbox-selected-pressed-icon-color: #3f51b5;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-selected-focus-state-layer-color: #3f51b5;\n  --mdc-checkbox-selected-hover-state-layer-color: #3f51b5;\n  --mdc-checkbox-selected-pressed-state-layer-color: #3f51b5;\n  --mdc-checkbox-unselected-focus-state-layer-color: white;\n  --mdc-checkbox-unselected-hover-state-layer-color: white;\n  --mdc-checkbox-unselected-pressed-state-layer-color: white;\n}\n.mat-mdc-checkbox.mat-warn {\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #f44336;\n  --mdc-checkbox-selected-hover-icon-color: #f44336;\n  --mdc-checkbox-selected-icon-color: #f44336;\n  --mdc-checkbox-selected-pressed-icon-color: #f44336;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-selected-focus-state-layer-color: #f44336;\n  --mdc-checkbox-selected-hover-state-layer-color: #f44336;\n  --mdc-checkbox-selected-pressed-state-layer-color: #f44336;\n  --mdc-checkbox-unselected-focus-state-layer-color: white;\n  --mdc-checkbox-unselected-hover-state-layer-color: white;\n  --mdc-checkbox-unselected-pressed-state-layer-color: white;\n}\n.mat-mdc-checkbox .mdc-form-field {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-checkbox.mat-mdc-checkbox-disabled label {\n  color: rgba(255, 255, 255, 0.5);\n}\n\nhtml {\n  --mdc-checkbox-state-layer-size: 40px;\n}\n\n.mat-mdc-checkbox .mdc-form-field {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\n  font-size: var(--mdc-typography-body2-font-size, 14px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0178571429em);\n  text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mat-mdc-button {\n  --mdc-text-button-label-text-color: #fff;\n  --mdc-text-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mat-text-button-state-layer-color: #fff;\n  --mat-text-button-ripple-color: rgba(255, 255, 255, 0.1);\n  --mat-text-button-hover-state-layer-opacity: 0.08;\n  --mat-text-button-focus-state-layer-opacity: 0.24;\n  --mat-text-button-pressed-state-layer-opacity: 0.24;\n}\n.mat-mdc-button.mat-primary {\n  --mdc-text-button-label-text-color: #3f51b5;\n  --mat-text-button-state-layer-color: #3f51b5;\n  --mat-text-button-ripple-color: rgba(63, 81, 181, 0.1);\n}\n.mat-mdc-button.mat-accent {\n  --mdc-text-button-label-text-color: #69f0ae;\n  --mat-text-button-state-layer-color: #69f0ae;\n  --mat-text-button-ripple-color: rgba(105, 240, 174, 0.1);\n}\n.mat-mdc-button.mat-warn {\n  --mdc-text-button-label-text-color: #f44336;\n  --mat-text-button-state-layer-color: #f44336;\n  --mat-text-button-ripple-color: rgba(244, 67, 54, 0.1);\n}\n\n.mat-mdc-unelevated-button {\n  --mdc-filled-button-container-color: #424242;\n  --mdc-filled-button-label-text-color: #fff;\n  --mdc-filled-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mat-filled-button-state-layer-color: #fff;\n  --mat-filled-button-ripple-color: rgba(255, 255, 255, 0.1);\n  --mat-filled-button-hover-state-layer-opacity: 0.08;\n  --mat-filled-button-focus-state-layer-opacity: 0.24;\n  --mat-filled-button-pressed-state-layer-opacity: 0.24;\n}\n.mat-mdc-unelevated-button.mat-primary {\n  --mdc-filled-button-container-color: #3f51b5;\n  --mdc-filled-button-label-text-color: #fff;\n  --mat-filled-button-state-layer-color: #fff;\n  --mat-filled-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-unelevated-button.mat-accent {\n  --mdc-filled-button-container-color: #69f0ae;\n  --mdc-filled-button-label-text-color: #000;\n  --mat-filled-button-state-layer-color: #000;\n  --mat-filled-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-unelevated-button.mat-warn {\n  --mdc-filled-button-container-color: #f44336;\n  --mdc-filled-button-label-text-color: #fff;\n  --mat-filled-button-state-layer-color: #fff;\n  --mat-filled-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-raised-button {\n  --mdc-protected-button-container-color: #424242;\n  --mdc-protected-button-label-text-color: #fff;\n  --mdc-protected-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mat-protected-button-state-layer-color: #fff;\n  --mat-protected-button-ripple-color: rgba(255, 255, 255, 0.1);\n  --mat-protected-button-hover-state-layer-opacity: 0.08;\n  --mat-protected-button-focus-state-layer-opacity: 0.24;\n  --mat-protected-button-pressed-state-layer-opacity: 0.24;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-mdc-raised-button.mat-primary {\n  --mdc-protected-button-container-color: #3f51b5;\n  --mdc-protected-button-label-text-color: #fff;\n  --mat-protected-button-state-layer-color: #fff;\n  --mat-protected-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button.mat-accent {\n  --mdc-protected-button-container-color: #69f0ae;\n  --mdc-protected-button-label-text-color: #000;\n  --mat-protected-button-state-layer-color: #000;\n  --mat-protected-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button.mat-warn {\n  --mdc-protected-button-container-color: #f44336;\n  --mdc-protected-button-label-text-color: #fff;\n  --mat-protected-button-state-layer-color: #fff;\n  --mat-protected-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button:hover, .mat-mdc-raised-button:focus {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-mdc-raised-button:active, .mat-mdc-raised-button:focus:active {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-mdc-outlined-button {\n  --mdc-outlined-button-disabled-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-label-text-color: #fff;\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mat-outlined-button-state-layer-color: #fff;\n  --mat-outlined-button-ripple-color: rgba(255, 255, 255, 0.1);\n  --mat-outlined-button-hover-state-layer-opacity: 0.08;\n  --mat-outlined-button-focus-state-layer-opacity: 0.24;\n  --mat-outlined-button-pressed-state-layer-opacity: 0.24;\n}\n.mat-mdc-outlined-button.mat-primary {\n  --mdc-outlined-button-label-text-color: #3f51b5;\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mat-outlined-button-state-layer-color: #3f51b5;\n  --mat-outlined-button-ripple-color: rgba(63, 81, 181, 0.1);\n}\n.mat-mdc-outlined-button.mat-accent {\n  --mdc-outlined-button-label-text-color: #69f0ae;\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mat-outlined-button-state-layer-color: #69f0ae;\n  --mat-outlined-button-ripple-color: rgba(105, 240, 174, 0.1);\n}\n.mat-mdc-outlined-button.mat-warn {\n  --mdc-outlined-button-label-text-color: #f44336;\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mat-outlined-button-state-layer-color: #f44336;\n  --mat-outlined-button-ripple-color: rgba(244, 67, 54, 0.1);\n}\n\n.mat-mdc-button {\n  --mdc-text-button-container-height: 36px;\n}\n\n.mat-mdc-raised-button {\n  --mdc-protected-button-container-height: 36px;\n}\n\n.mat-mdc-unelevated-button {\n  --mdc-filled-button-container-height: 36px;\n}\n\n.mat-mdc-outlined-button {\n  --mdc-outlined-button-container-height: 36px;\n}\n\n.mdc-button {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\n  font-size: var(--mdc-typography-button-font-size, 14px);\n  line-height: var(--mdc-typography-button-line-height, 36px);\n  font-weight: var(--mdc-typography-button-font-weight, 500);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0892857143em);\n  text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n\n.mat-mdc-icon-button {\n  --mdc-icon-button-icon-color: inherit;\n  --mdc-icon-button-disabled-icon-color: rgba(255, 255, 255, 0.5);\n  --mat-icon-button-state-layer-color: #fff;\n  --mat-icon-button-ripple-color: rgba(255, 255, 255, 0.1);\n  --mat-icon-button-hover-state-layer-opacity: 0.08;\n  --mat-icon-button-focus-state-layer-opacity: 0.24;\n  --mat-icon-button-pressed-state-layer-opacity: 0.24;\n}\n.mat-mdc-icon-button.mat-primary {\n  --mdc-icon-button-icon-color: #3f51b5;\n  --mat-icon-button-state-layer-color: #3f51b5;\n  --mat-icon-button-ripple-color: rgba(63, 81, 181, 0.1);\n}\n.mat-mdc-icon-button.mat-accent {\n  --mdc-icon-button-icon-color: #69f0ae;\n  --mat-icon-button-state-layer-color: #69f0ae;\n  --mat-icon-button-ripple-color: rgba(105, 240, 174, 0.1);\n}\n.mat-mdc-icon-button.mat-warn {\n  --mdc-icon-button-icon-color: #f44336;\n  --mat-icon-button-state-layer-color: #f44336;\n  --mat-icon-button-ripple-color: rgba(244, 67, 54, 0.1);\n}\n\n.mat-mdc-icon-button.mat-mdc-button-base {\n  --mdc-icon-button-state-layer-size: 48px;\n  width: var(--mdc-icon-button-state-layer-size);\n  height: var(--mdc-icon-button-state-layer-size);\n  padding: 12px;\n}\n\nhtml {\n  --mdc-fab-container-shape: 50%;\n  --mdc-fab-icon-size: 24px;\n}\n\nhtml {\n  --mdc-fab-container-color: #424242;\n  --mat-fab-foreground-color: white;\n  --mat-fab-state-layer-color: #fff;\n  --mat-fab-ripple-color: rgba(255, 255, 255, 0.1);\n  --mat-fab-hover-state-layer-opacity: 0.08;\n  --mat-fab-focus-state-layer-opacity: 0.24;\n  --mat-fab-pressed-state-layer-opacity: 0.24;\n  --mat-fab-disabled-state-container-color: rgba(255, 255, 255, 0.12);\n  --mat-fab-disabled-state-foreground-color: rgba(255, 255, 255, 0.5);\n}\nhtml .mat-mdc-fab.mat-primary,\nhtml .mat-mdc-mini-fab.mat-primary {\n  --mdc-fab-container-color: #3f51b5;\n  --mat-fab-foreground-color: #fff;\n  --mat-fab-state-layer-color: #fff;\n  --mat-fab-ripple-color: rgba(255, 255, 255, 0.1);\n}\nhtml .mat-mdc-fab.mat-accent,\nhtml .mat-mdc-mini-fab.mat-accent {\n  --mdc-fab-container-color: #69f0ae;\n  --mat-fab-foreground-color: #000;\n  --mat-fab-state-layer-color: #000;\n  --mat-fab-ripple-color: rgba(0, 0, 0, 0.1);\n}\nhtml .mat-mdc-fab.mat-warn,\nhtml .mat-mdc-mini-fab.mat-warn {\n  --mdc-fab-container-color: #f44336;\n  --mat-fab-foreground-color: #fff;\n  --mat-fab-state-layer-color: #fff;\n  --mat-fab-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mdc-fab--extended {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\n  font-size: var(--mdc-typography-button-font-size, 14px);\n  line-height: var(--mdc-typography-button-line-height, 36px);\n  font-weight: var(--mdc-typography-button-font-weight, 500);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0892857143em);\n  text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\nhtml {\n  --mdc-extended-fab-label-text-font: Roboto, sans-serif;\n  --mdc-extended-fab-label-text-size: 14px;\n  --mdc-extended-fab-label-text-tracking: 0.0892857143em;\n  --mdc-extended-fab-label-text-weight: 500;\n}\n\nhtml {\n  --mdc-snackbar-container-shape: 4px;\n}\n\nhtml {\n  --mdc-snackbar-container-color: #d9d9d9;\n  --mdc-snackbar-supporting-text-color: rgba(66, 66, 66, 0.87);\n  --mat-snack-bar-button-color: rgba(0, 0, 0, 0.87);\n}\n\nhtml {\n  --mdc-snackbar-supporting-text-font: Roboto, sans-serif;\n  --mdc-snackbar-supporting-text-line-height: 20px;\n  --mdc-snackbar-supporting-text-size: 14px;\n  --mdc-snackbar-supporting-text-weight: 400;\n}\n\nhtml {\n  --mat-table-row-item-outline-width: 1px;\n}\n\nhtml {\n  --mat-table-background-color: #424242;\n  --mat-table-header-headline-color: white;\n  --mat-table-row-item-label-text-color: white;\n  --mat-table-row-item-outline-color: rgba(255, 255, 255, 0.12);\n}\n\nhtml {\n  --mat-table-header-container-height: 56px;\n  --mat-table-footer-container-height: 52px;\n  --mat-table-row-item-container-height: 52px;\n}\n\nhtml {\n  --mat-table-header-headline-font: Roboto, sans-serif;\n  --mat-table-header-headline-line-height: 22px;\n  --mat-table-header-headline-size: 14px;\n  --mat-table-header-headline-weight: 500;\n  --mat-table-header-headline-tracking: 0.0071428571em;\n  --mat-table-row-item-label-text-font: Roboto, sans-serif;\n  --mat-table-row-item-label-text-line-height: 20px;\n  --mat-table-row-item-label-text-size: 14px;\n  --mat-table-row-item-label-text-weight: 400;\n  --mat-table-row-item-label-text-tracking: 0.0178571429em;\n  --mat-table-footer-supporting-text-font: Roboto, sans-serif;\n  --mat-table-footer-supporting-text-line-height: 20px;\n  --mat-table-footer-supporting-text-size: 14px;\n  --mat-table-footer-supporting-text-weight: 400;\n  --mat-table-footer-supporting-text-tracking: 0.0178571429em;\n}\n\nhtml {\n  --mdc-circular-progress-active-indicator-width: 4px;\n  --mdc-circular-progress-size: 48px;\n}\n\nhtml {\n  --mdc-circular-progress-active-indicator-color: #3f51b5;\n}\nhtml .mat-accent {\n  --mdc-circular-progress-active-indicator-color: #69f0ae;\n}\nhtml .mat-warn {\n  --mdc-circular-progress-active-indicator-color: #f44336;\n}\n\n.mat-badge {\n  position: relative;\n}\n.mat-badge.mat-badge {\n  overflow: visible;\n}\n\n.mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n  background-color: var(--mat-badge-background-color);\n  color: var(--mat-badge-text-color);\n  font-family: Roboto, sans-serif;\n  /* @alternate */\n  font-family: var(--mat-badge-text-font, Roboto, sans-serif);\n  font-size: 12px;\n  /* @alternate */\n  font-size: var(--mat-badge-text-size, 12px);\n  font-weight: 600;\n  /* @alternate */\n  font-weight: var(--mat-badge-text-weight, 600);\n}\n.cdk-high-contrast-active .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-disabled .mat-badge-content {\n  background-color: var(--mat-badge-disabled-state-background-color);\n  color: var(--mat-badge-disabled-state-text-color);\n}\n\n.mat-badge-hidden .mat-badge-content {\n  display: none;\n}\n\n.ng-animate-disabled .mat-badge-content,\n.mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active {\n  transform: none;\n}\n\n.mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n  font-size: 9px;\n  /* @alternate */\n  font-size: var(--mat-badge-small-size-text-size, 9px);\n}\n.mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n  font-size: 24px;\n  /* @alternate */\n  font-size: var(--mat-badge-large-size-text-size, 24px);\n}\n.mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\n\nhtml {\n  --mat-badge-background-color: #3f51b5;\n  --mat-badge-text-color: white;\n  --mat-badge-disabled-state-background-color: #6e6e6e;\n  --mat-badge-disabled-state-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-badge-accent {\n  --mat-badge-background-color: #69f0ae;\n  --mat-badge-text-color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-badge-warn {\n  --mat-badge-background-color: #f44336;\n  --mat-badge-text-color: white;\n}\n\nhtml {\n  --mat-badge-text-font: Roboto, sans-serif;\n  --mat-badge-text-size: 12px;\n  --mat-badge-text-weight: 600;\n  --mat-badge-small-size-text-size: 9px;\n  --mat-badge-large-size-text-size: 24px;\n}\n\nhtml {\n  --mat-bottom-sheet-container-shape: 4px;\n}\n\nhtml {\n  --mat-bottom-sheet-container-text-color: white;\n  --mat-bottom-sheet-container-background-color: #424242;\n}\n\nhtml {\n  --mat-bottom-sheet-container-text-font: Roboto, sans-serif;\n  --mat-bottom-sheet-container-text-line-height: 20px;\n  --mat-bottom-sheet-container-text-size: 14px;\n  --mat-bottom-sheet-container-text-tracking: 0.0178571429em;\n  --mat-bottom-sheet-container-text-weight: 400;\n}\n\nhtml {\n  --mat-legacy-button-toggle-height: 36px;\n  --mat-legacy-button-toggle-shape: 2px;\n  --mat-legacy-button-toggle-focus-state-layer-opacity: 1;\n  --mat-standard-button-toggle-shape: 4px;\n  --mat-standard-button-toggle-hover-state-layer-opacity: 0.04;\n  --mat-standard-button-toggle-focus-state-layer-opacity: 0.12;\n}\n\nhtml {\n  --mat-legacy-button-toggle-text-color: rgba(255, 255, 255, 0.5);\n  --mat-legacy-button-toggle-state-layer-color: rgba(255, 255, 255, 0.12);\n  --mat-legacy-button-toggle-selected-state-text-color: rgba(255, 255, 255, 0.7);\n  --mat-legacy-button-toggle-selected-state-background-color: #212121;\n  --mat-legacy-button-toggle-disabled-state-text-color: rgba(255, 255, 255, 0.3);\n  --mat-legacy-button-toggle-disabled-state-background-color: black;\n  --mat-legacy-button-toggle-disabled-selected-state-background-color: #424242;\n  --mat-standard-button-toggle-text-color: white;\n  --mat-standard-button-toggle-background-color: #424242;\n  --mat-standard-button-toggle-state-layer-color: white;\n  --mat-standard-button-toggle-selected-state-background-color: #212121;\n  --mat-standard-button-toggle-selected-state-text-color: white;\n  --mat-standard-button-toggle-disabled-state-text-color: rgba(255, 255, 255, 0.3);\n  --mat-standard-button-toggle-disabled-state-background-color: #424242;\n  --mat-standard-button-toggle-disabled-selected-state-text-color: white;\n  --mat-standard-button-toggle-disabled-selected-state-background-color: #424242;\n  --mat-standard-button-toggle-divider-color: #595959;\n}\n\nhtml {\n  --mat-standard-button-toggle-height: 48px;\n}\n\nhtml {\n  --mat-legacy-button-toggle-text-font: Roboto, sans-serif;\n  --mat-standard-button-toggle-text-font: Roboto, sans-serif;\n}\n\nhtml {\n  --mat-datepicker-calendar-date-selected-state-text-color: white;\n  --mat-datepicker-calendar-date-selected-state-background-color: #3f51b5;\n  --mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(63, 81, 181, 0.4);\n  --mat-datepicker-calendar-date-today-selected-state-outline-color: white;\n  --mat-datepicker-calendar-date-focus-state-background-color: rgba(63, 81, 181, 0.3);\n  --mat-datepicker-calendar-date-hover-state-background-color: rgba(63, 81, 181, 0.3);\n  --mat-datepicker-toggle-active-state-icon-color: #3f51b5;\n  --mat-datepicker-calendar-date-in-range-state-background-color: rgba(63, 81, 181, 0.2);\n  --mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, 0.2);\n  --mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;\n  --mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e;\n  --mat-datepicker-toggle-icon-color: white;\n  --mat-datepicker-calendar-body-label-text-color: rgba(255, 255, 255, 0.7);\n  --mat-datepicker-calendar-period-button-icon-color: white;\n  --mat-datepicker-calendar-navigation-button-icon-color: white;\n  --mat-datepicker-calendar-header-divider-color: rgba(255, 255, 255, 0.12);\n  --mat-datepicker-calendar-header-text-color: rgba(255, 255, 255, 0.7);\n  --mat-datepicker-calendar-date-today-outline-color: rgba(255, 255, 255, 0.5);\n  --mat-datepicker-calendar-date-today-disabled-state-outline-color: rgba(255, 255, 255, 0.3);\n  --mat-datepicker-calendar-date-text-color: white;\n  --mat-datepicker-calendar-date-outline-color: transparent;\n  --mat-datepicker-calendar-date-disabled-state-text-color: rgba(255, 255, 255, 0.5);\n  --mat-datepicker-calendar-date-preview-state-outline-color: rgba(255, 255, 255, 0.24);\n  --mat-datepicker-range-input-separator-color: white;\n  --mat-datepicker-range-input-disabled-state-separator-color: rgba(255, 255, 255, 0.5);\n  --mat-datepicker-range-input-disabled-state-text-color: rgba(255, 255, 255, 0.5);\n  --mat-datepicker-calendar-container-background-color: #424242;\n  --mat-datepicker-calendar-container-text-color: white;\n}\n\n.mat-datepicker-content.mat-accent {\n  --mat-datepicker-calendar-date-selected-state-text-color: rgba(0, 0, 0, 0.87);\n  --mat-datepicker-calendar-date-selected-state-background-color: #69f0ae;\n  --mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(105, 240, 174, 0.4);\n  --mat-datepicker-calendar-date-today-selected-state-outline-color: rgba(0, 0, 0, 0.87);\n  --mat-datepicker-calendar-date-focus-state-background-color: rgba(105, 240, 174, 0.3);\n  --mat-datepicker-calendar-date-hover-state-background-color: rgba(105, 240, 174, 0.3);\n  --mat-datepicker-calendar-date-in-range-state-background-color: rgba(105, 240, 174, 0.2);\n  --mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, 0.2);\n  --mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;\n  --mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e;\n}\n.mat-datepicker-content.mat-warn {\n  --mat-datepicker-calendar-date-selected-state-text-color: white;\n  --mat-datepicker-calendar-date-selected-state-background-color: #f44336;\n  --mat-datepicker-calendar-date-selected-disabled-state-background-color: rgba(244, 67, 54, 0.4);\n  --mat-datepicker-calendar-date-today-selected-state-outline-color: white;\n  --mat-datepicker-calendar-date-focus-state-background-color: rgba(244, 67, 54, 0.3);\n  --mat-datepicker-calendar-date-hover-state-background-color: rgba(244, 67, 54, 0.3);\n  --mat-datepicker-calendar-date-in-range-state-background-color: rgba(244, 67, 54, 0.2);\n  --mat-datepicker-calendar-date-in-comparison-range-state-background-color: rgba(249, 171, 0, 0.2);\n  --mat-datepicker-calendar-date-in-overlap-range-state-background-color: #a8dab5;\n  --mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color: #46a35e;\n}\n\n.mat-datepicker-toggle-active.mat-accent {\n  --mat-datepicker-toggle-active-state-icon-color: #69f0ae;\n}\n.mat-datepicker-toggle-active.mat-warn {\n  --mat-datepicker-toggle-active-state-icon-color: #f44336;\n}\n\n.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base {\n  --mdc-icon-button-state-layer-size: 40px;\n  width: var(--mdc-icon-button-state-layer-size);\n  height: var(--mdc-icon-button-state-layer-size);\n  padding: 8px;\n}\n.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mat-mdc-button-touch-target {\n  display: none;\n}\n\nhtml {\n  --mat-datepicker-calendar-text-font: Roboto, sans-serif;\n  --mat-datepicker-calendar-text-size: 13px;\n  --mat-datepicker-calendar-body-label-text-size: 14px;\n  --mat-datepicker-calendar-body-label-text-weight: 500;\n  --mat-datepicker-calendar-period-button-text-size: 14px;\n  --mat-datepicker-calendar-period-button-text-weight: 500;\n  --mat-datepicker-calendar-header-text-size: 11px;\n  --mat-datepicker-calendar-header-text-weight: 400;\n}\n\nhtml {\n  --mat-divider-width: 1px;\n}\n\nhtml {\n  --mat-divider-color: rgba(255, 255, 255, 0.12);\n}\n\nhtml {\n  --mat-expansion-container-shape: 4px;\n}\n\nhtml {\n  --mat-expansion-container-background-color: #424242;\n  --mat-expansion-container-text-color: white;\n  --mat-expansion-actions-divider-color: rgba(255, 255, 255, 0.12);\n  --mat-expansion-header-hover-state-layer-color: rgba(255, 255, 255, 0.04);\n  --mat-expansion-header-focus-state-layer-color: rgba(255, 255, 255, 0.04);\n  --mat-expansion-header-disabled-state-text-color: rgba(255, 255, 255, 0.3);\n  --mat-expansion-header-text-color: white;\n  --mat-expansion-header-description-color: rgba(255, 255, 255, 0.7);\n  --mat-expansion-header-indicator-color: rgba(255, 255, 255, 0.7);\n}\n\nhtml {\n  --mat-expansion-header-collapsed-state-height: 48px;\n  --mat-expansion-header-expanded-state-height: 64px;\n}\n\nhtml {\n  --mat-expansion-header-text-font: Roboto, sans-serif;\n  --mat-expansion-header-text-size: 14px;\n  --mat-expansion-header-text-weight: 500;\n  --mat-expansion-header-text-line-height: inherit;\n  --mat-expansion-header-text-tracking: inherit;\n  --mat-expansion-container-text-font: Roboto, sans-serif;\n  --mat-expansion-container-text-line-height: 20px;\n  --mat-expansion-container-text-size: 14px;\n  --mat-expansion-container-text-tracking: 0.0178571429em;\n  --mat-expansion-container-text-weight: 400;\n}\n\nhtml {\n  --mat-grid-list-tile-header-primary-text-size: 14px;\n  --mat-grid-list-tile-header-secondary-text-size: 12px;\n  --mat-grid-list-tile-footer-primary-text-size: 14px;\n  --mat-grid-list-tile-footer-secondary-text-size: 12px;\n}\n\nhtml {\n  --mat-icon-color: inherit;\n}\n\n.mat-icon.mat-primary {\n  --mat-icon-color: #3f51b5;\n}\n.mat-icon.mat-accent {\n  --mat-icon-color: #69f0ae;\n}\n.mat-icon.mat-warn {\n  --mat-icon-color: #f44336;\n}\n\nhtml {\n  --mat-sidenav-container-shape: 0;\n}\n\nhtml {\n  --mat-sidenav-container-divider-color: rgba(255, 255, 255, 0.12);\n  --mat-sidenav-container-background-color: #424242;\n  --mat-sidenav-container-text-color: white;\n  --mat-sidenav-content-background-color: #303030;\n  --mat-sidenav-content-text-color: white;\n  --mat-sidenav-scrim-color: rgba(189, 189, 189, 0.6);\n}\n\nhtml {\n  --mat-stepper-header-icon-foreground-color: white;\n  --mat-stepper-header-selected-state-icon-background-color: #3f51b5;\n  --mat-stepper-header-selected-state-icon-foreground-color: white;\n  --mat-stepper-header-done-state-icon-background-color: #3f51b5;\n  --mat-stepper-header-done-state-icon-foreground-color: white;\n  --mat-stepper-header-edit-state-icon-background-color: #3f51b5;\n  --mat-stepper-header-edit-state-icon-foreground-color: white;\n  --mat-stepper-container-color: #424242;\n  --mat-stepper-line-color: rgba(255, 255, 255, 0.12);\n  --mat-stepper-header-hover-state-layer-color: rgba(255, 255, 255, 0.04);\n  --mat-stepper-header-focus-state-layer-color: rgba(255, 255, 255, 0.04);\n  --mat-stepper-header-label-text-color: rgba(255, 255, 255, 0.7);\n  --mat-stepper-header-optional-label-text-color: rgba(255, 255, 255, 0.7);\n  --mat-stepper-header-selected-state-label-text-color: white;\n  --mat-stepper-header-error-state-label-text-color: #f44336;\n  --mat-stepper-header-icon-background-color: rgba(255, 255, 255, 0.7);\n  --mat-stepper-header-error-state-icon-foreground-color: #f44336;\n  --mat-stepper-header-error-state-icon-background-color: transparent;\n}\nhtml .mat-step-header.mat-accent {\n  --mat-stepper-header-icon-foreground-color: rgba(0, 0, 0, 0.87);\n  --mat-stepper-header-selected-state-icon-background-color: #69f0ae;\n  --mat-stepper-header-selected-state-icon-foreground-color: rgba(0, 0, 0, 0.87);\n  --mat-stepper-header-done-state-icon-background-color: #69f0ae;\n  --mat-stepper-header-done-state-icon-foreground-color: rgba(0, 0, 0, 0.87);\n  --mat-stepper-header-edit-state-icon-background-color: #69f0ae;\n  --mat-stepper-header-edit-state-icon-foreground-color: rgba(0, 0, 0, 0.87);\n}\nhtml .mat-step-header.mat-warn {\n  --mat-stepper-header-icon-foreground-color: white;\n  --mat-stepper-header-selected-state-icon-background-color: #f44336;\n  --mat-stepper-header-selected-state-icon-foreground-color: white;\n  --mat-stepper-header-done-state-icon-background-color: #f44336;\n  --mat-stepper-header-done-state-icon-foreground-color: white;\n  --mat-stepper-header-edit-state-icon-background-color: #f44336;\n  --mat-stepper-header-edit-state-icon-foreground-color: white;\n}\n\nhtml {\n  --mat-stepper-header-height: 72px;\n}\n\nhtml {\n  --mat-stepper-container-text-font: Roboto, sans-serif;\n  --mat-stepper-header-label-text-font: Roboto, sans-serif;\n  --mat-stepper-header-label-text-size: 14px;\n  --mat-stepper-header-label-text-weight: 400;\n  --mat-stepper-header-error-state-label-text-size: 16px;\n  --mat-stepper-header-selected-state-label-text-size: 16px;\n  --mat-stepper-header-selected-state-label-text-weight: 400;\n}\n\nhtml {\n  --mat-sort-arrow-color: #c6c6c6;\n}\n\nhtml {\n  --mat-toolbar-container-background-color: #212121;\n  --mat-toolbar-container-text-color: white;\n}\n\n.mat-toolbar.mat-primary {\n  --mat-toolbar-container-background-color: #3f51b5;\n  --mat-toolbar-container-text-color: white;\n}\n.mat-toolbar.mat-accent {\n  --mat-toolbar-container-background-color: #69f0ae;\n  --mat-toolbar-container-text-color: rgba(0, 0, 0, 0.87);\n}\n.mat-toolbar.mat-warn {\n  --mat-toolbar-container-background-color: #f44336;\n  --mat-toolbar-container-text-color: white;\n}\n\nhtml {\n  --mat-toolbar-standard-height: 64px;\n  --mat-toolbar-mobile-height: 56px;\n}\n\nhtml {\n  --mat-toolbar-title-text-font: Roboto, sans-serif;\n  --mat-toolbar-title-text-line-height: 32px;\n  --mat-toolbar-title-text-size: 20px;\n  --mat-toolbar-title-text-tracking: 0.0125em;\n  --mat-toolbar-title-text-weight: 500;\n}\n\nhtml {\n  --mat-tree-container-background-color: #424242;\n  --mat-tree-node-text-color: white;\n}\n\nhtml {\n  --mat-tree-node-min-height: 48px;\n}\n\nhtml {\n  --mat-tree-node-text-font: Roboto, sans-serif;\n  --mat-tree-node-text-size: 14px;\n  --mat-tree-node-text-weight: 400;\n}\n\n::-webkit-scrollbar-thumb {\n  background: rgba(63, 81, 181, 0.45);\n}\n\n.app-background {\n  background: #303030;\n}\n\n.primary-header {\n  background: #3f51b5;\n}\n.primary-header h1 {\n  color: white;\n}\n\napp-home {\n  color: white;\n}\napp-home .header-background {\n  background: #3f51b5;\n}\napp-home .header-headline {\n  color: white;\n}\napp-home .header-start {\n  color: #3f51b5;\n}\napp-home .home-row {\n  color: rgba(255, 255, 255, 0.7);\n}\n\nnavbar {\n  color: white;\n}\nnavbar .navbar-header {\n  background: #3f51b5;\n}\nnavbar .navbar-header a:hover, navbar .navbar-header a:focus {\n  background: rgba(0, 0, 0, 0.4);\n}\nnavbar .navbar-header .navbar-menu-item-selected {\n  background: rgba(0, 0, 0, 0.2);\n}\n\na {\n  color: #5c6bc0;\n}\n\n.inline-code-example {\n  font-weight: 400;\n  background-color: #9fa8da;\n  padding: 4px;\n  border-radius: 4px;\n}\n.inline-code-example a {\n  color: #1a237e;\n}\n\n.block-list-container {\n  color: white;\n  background: #424242;\n}\n\n.block-list-item:hover, .block-list-item:focus, .block-option-list-item:hover, .block-option-list-item:focus, .toolbar-buttons:hover, .toolbar-buttons:focus {\n  background: #66bb6a;\n}\n\n.toolbar-buttons {\n  background: #424242;\n}\n\nblockquote {\n  border-left: 5px solid #66bb6a;\n}\n\n.mermaid rect {\n  fill: #c5cae9 !important;\n}\n.mermaid text {\n  fill: white !important;\n}\n.mermaid text.sequenceNumber {\n  fill: #69f0ae !important;\n}\n.mermaid text.loopText > tspan, .mermaid text.labelText {\n  fill: #e57373 !important;\n}\n.mermaid path, .mermaid line, .mermaid polyline {\n  stroke: #69f0ae !important;\n}\n.mermaid polygon, .mermaid marker > path {\n  fill: #69f0ae !important;\n}","/*\n  Name:       material\n  Author:     Mattia Astorino (http://github.com/equinusocio)\n  Website:    https://material-theme.site/\n*/\n\n.cm-s-material-palenight.CodeMirror {\n  background-color: #292D3E;\n  color: #A6ACCD;\n}\n\n.cm-s-material-palenight .CodeMirror-gutters {\n  background: #292D3E;\n  color: #676E95;\n  border: none;\n}\n\n.cm-s-material-palenight .CodeMirror-guttermarker,\n.cm-s-material-palenight .CodeMirror-guttermarker-subtle,\n.cm-s-material-palenight .CodeMirror-linenumber {\n  color: #676E95;\n}\n\n.cm-s-material-palenight .CodeMirror-cursor {\n  border-left: 1px solid #FFCC00;\n}\n.cm-s-material-palenight.cm-fat-cursor .CodeMirror-cursor {\n  background-color: #607c8b80 !important;\n}\n.cm-s-material-palenight .cm-animate-fat-cursor {\n  background-color: #607c8b80 !important;\n}\n\n.cm-s-material-palenight div.CodeMirror-selected {\n  background: rgba(113, 124, 180, 0.2);\n}\n\n.cm-s-material-palenight.CodeMirror-focused div.CodeMirror-selected {\n  background: rgba(113, 124, 180, 0.2);\n}\n\n.cm-s-material-palenight .CodeMirror-line::selection,\n.cm-s-material-palenight .CodeMirror-line>span::selection,\n.cm-s-material-palenight .CodeMirror-line>span>span::selection {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material-palenight .CodeMirror-line::-moz-selection,\n.cm-s-material-palenight .CodeMirror-line>span::-moz-selection,\n.cm-s-material-palenight .CodeMirror-line>span>span::-moz-selection {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material-palenight .CodeMirror-activeline-background {\n  background: rgba(0, 0, 0, 0.5);\n}\n\n.cm-s-material-palenight .cm-keyword {\n  color: #C792EA;\n}\n\n.cm-s-material-palenight .cm-operator {\n  color: #89DDFF;\n}\n\n.cm-s-material-palenight .cm-variable-2 {\n  color: #EEFFFF;\n}\n\n.cm-s-material-palenight .cm-variable-3,\n.cm-s-material-palenight .cm-type {\n  color: #f07178;\n}\n\n.cm-s-material-palenight .cm-builtin {\n  color: #FFCB6B;\n}\n\n.cm-s-material-palenight .cm-atom {\n  color: #F78C6C;\n}\n\n.cm-s-material-palenight .cm-number {\n  color: #FF5370;\n}\n\n.cm-s-material-palenight .cm-def {\n  color: #82AAFF;\n}\n\n.cm-s-material-palenight .cm-string {\n  color: #C3E88D;\n}\n\n.cm-s-material-palenight .cm-string-2 {\n  color: #f07178;\n}\n\n.cm-s-material-palenight .cm-comment {\n  color: #676E95;\n}\n\n.cm-s-material-palenight .cm-variable {\n  color: #f07178;\n}\n\n.cm-s-material-palenight .cm-tag {\n  color: #FF5370;\n}\n\n.cm-s-material-palenight .cm-meta {\n  color: #FFCB6B;\n}\n\n.cm-s-material-palenight .cm-attribute {\n  color: #C792EA;\n}\n\n.cm-s-material-palenight .cm-property {\n  color: #C792EA;\n}\n\n.cm-s-material-palenight .cm-qualifier {\n  color: #DECB6B;\n}\n\n.cm-s-material-palenight .cm-variable-3,\n.cm-s-material-palenight .cm-type {\n  color: #DECB6B;\n}\n\n\n.cm-s-material-palenight .cm-error {\n  color: rgba(255, 255, 255, 1.0);\n  background-color: #FF5370;\n}\n\n.cm-s-material-palenight .CodeMirror-matchingbracket {\n  text-decoration: underline;\n  color: white !important;\n}\n","/*\n  Name:       material\n  Author:     Mattia Astorino (http://github.com/equinusocio)\n  Website:    https://material-theme.site/\n*/\n\n.cm-s-material.CodeMirror {\n  background-color: #263238;\n  color: #EEFFFF;\n}\n\n.cm-s-material .CodeMirror-gutters {\n  background: #263238;\n  color: #546E7A;\n  border: none;\n}\n\n.cm-s-material .CodeMirror-guttermarker,\n.cm-s-material .CodeMirror-guttermarker-subtle,\n.cm-s-material .CodeMirror-linenumber {\n  color: #546E7A;\n}\n\n.cm-s-material .CodeMirror-cursor {\n  border-left: 1px solid #FFCC00;\n}\n.cm-s-material.cm-fat-cursor .CodeMirror-cursor {\n  background-color: #5d6d5c80 !important;\n}\n.cm-s-material .cm-animate-fat-cursor {\n  background-color: #5d6d5c80 !important;\n}\n\n.cm-s-material div.CodeMirror-selected {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material.CodeMirror-focused div.CodeMirror-selected {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material .CodeMirror-line::selection,\n.cm-s-material .CodeMirror-line>span::selection,\n.cm-s-material .CodeMirror-line>span>span::selection {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material .CodeMirror-line::-moz-selection,\n.cm-s-material .CodeMirror-line>span::-moz-selection,\n.cm-s-material .CodeMirror-line>span>span::-moz-selection {\n  background: rgba(128, 203, 196, 0.2);\n}\n\n.cm-s-material .CodeMirror-activeline-background {\n  background: rgba(0, 0, 0, 0.5);\n}\n\n.cm-s-material .cm-keyword {\n  color: #C792EA;\n}\n\n.cm-s-material .cm-operator {\n  color: #89DDFF;\n}\n\n.cm-s-material .cm-variable-2 {\n  color: #EEFFFF;\n}\n\n.cm-s-material .cm-variable-3,\n.cm-s-material .cm-type {\n  color: #f07178;\n}\n\n.cm-s-material .cm-builtin {\n  color: #FFCB6B;\n}\n\n.cm-s-material .cm-atom {\n  color: #F78C6C;\n}\n\n.cm-s-material .cm-number {\n  color: #FF5370;\n}\n\n.cm-s-material .cm-def {\n  color: #82AAFF;\n}\n\n.cm-s-material .cm-string {\n  color: #C3E88D;\n}\n\n.cm-s-material .cm-string-2 {\n  color: #f07178;\n}\n\n.cm-s-material .cm-comment {\n  color: #546E7A;\n}\n\n.cm-s-material .cm-variable {\n  color: #f07178;\n}\n\n.cm-s-material .cm-tag {\n  color: #FF5370;\n}\n\n.cm-s-material .cm-meta {\n  color: #FFCB6B;\n}\n\n.cm-s-material .cm-attribute {\n  color: #C792EA;\n}\n\n.cm-s-material .cm-property {\n  color: #C792EA;\n}\n\n.cm-s-material .cm-qualifier {\n  color: #DECB6B;\n}\n\n.cm-s-material .cm-variable-3,\n.cm-s-material .cm-type {\n  color: #DECB6B;\n}\n\n\n.cm-s-material .cm-error {\n  color: rgba(255, 255, 255, 1.0);\n  background-color: #FF5370;\n}\n\n.cm-s-material .CodeMirror-matchingbracket {\n  text-decoration: underline;\n  color: white !important;\n}\n","@use 'src/lib/ngx-editorjs-code-block.theme' as ngx-editorjs-code-block;\n\n@import 'codemirror/lib/codemirror';\n@import 'codemirror/theme/material-palenight';\n@import 'codemirror/theme/material';\n@import 'codemirror/addon/hint/show-hint.css';\n\n@mixin theme($theme) {\n  @include ngx-editorjs-code-block.theme($theme);\n}\n\n.CodeMirror {\n  height: auto;\n  font-family: 'Cascadia Code', 'Roboto Mono', monospace;\n}","/*\nOrginal Style from https://github.com/Kelbster/highlightjs-material-dark-theme  (c) Kelby Gassmanl <kelby.gassman@gmail.com>\n*/\n.hljs {\n  display: block;\n  overflow-x: auto;\n  padding: 1em;\n  background: #2B2B2D;\n  color: #CDD3D8;\n  -webkit-font-smoothing: antialiased;\n  text-size-adjust: 100%;\n  font: 300 100%/1 Roboto Mono,monospace;\n}\n\n// .hljs > *::selection {\n//   background-color: #3e4451;\n// }\n\n.hljs-comment {\n  color: #9E9E9E;\n  font-style: italic;\n}\n\n.hljs-selector-tag {\n  color: #C792EA;\n}\n\n.hljs-string,\n.hljs-subst {\n  color: #9ccc65;\n}\n\n.hljs-number,\n.hljs-regexp,\n.hljs-variable,\n.hljs-template-variable {\n  color: #F77669;\n}\n\n.hljs-keyword {\n  color: #C792EA;\n}\n.hljs-function > .hljs-title {\n  color: #75A5FF;\n}\n.hljs-tag {\n  color: #ce93d8;\n}\n.hljs-name {\n  color: #4dd0e1;\n}\n.hljs-type {\n  color: #da4939;\n}\n\n.hljs-attribute {\n  color: #80CBBF;\n}\n\n.hljs-symbol,\n.hljs-bullet,\n.hljs-built_in,\n.hljs-builtin-name,\n.hljs-link {\n  color: #C792EA;\n}\n\n.hljs-params {\n  color: #EEFFF7;\n}\n\n\n.hljs-meta {\n  color: #75A5FF;\n}\n\n.hljs-title {\n  color: #75A5FF;\n}\n\n.hljs-section {\n  color: #ffc66d;\n}\n\n.hljs-addition {\n  background-color: #144212;\n  color: #e6e1dc;\n  display: inline-block;\n  width: 100%;\n}\n\n.hljs-deletion {\n  background-color: #600;\n  color: #e6e1dc;\n  display: inline-block;\n  width: 100%;\n}\n\n.hljs-selector-class {\n  color: #FFCB68;\n}\n\n.hljs-selector-id {\n  color: #F77669;\n}\n\n.hljs-emphasis {\n  font-style: italic;\n}\n\n.hljs-strong {\n  font-weight: bold;\n}\n\n.hljs-link {\n  text-decoration: underline;\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Include content under the current selector (&) or the document root if there is no current\n/// selector.\n/// @param {String} $root [html] The default root selector to use when there is no current selector.\n/// @output The given content under the current selector, or root selector if there is no current\n///     selector.\n/// @content Content to output under the current selector, or root selector if there is no current\n///     selector.\n@mixin current-selector-or-root($root: html) {\n  @if & {\n    @content;\n  }\n  @else {\n    #{$root} {\n      @content;\n    }\n  }\n}\n\n/// A version of the standard `map.merge` function that takes a variable number of arguments.\n/// Each argument is merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.merge\n/// @return {Map} The combined result of successively calling map.merge with each parameter.\n@function merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.merge($result, $map);\n  }\n  @return $result;\n}\n\n/// A version of the standard `map.deep-merge` function that takes a variable number of arguments.\n/// Each argument is deep-merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.deep-merge\n/// @return {Map} The combined result of successively calling map.deep-merge with each parameter.\n@function deep-merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.deep-merge($result, $map);\n  }\n  @return $result;\n}\n\n/// Coerces the given value to a list, by converting any non-list value into a single-item list.\n/// This should be used when dealing with user-passed lists of args to avoid confusing errors,\n/// since Sass treats `($x)` as equivalent to `$x`.\n/// @param {Any} $value The value to coerce to a list.\n/// @return {List} The original $value if it was a list, otherwise a single-item list containing\n///     $value.\n@function coerce-to-list($value) {\n  @return if(meta.type-of($value) != 'list', ($value,), $value);\n}\n\n/// A version of the Sass `color.change` function that is safe ot use with CSS variables.\n@function safe-color-change($color, $args...) {\n  $args: meta.keywords($args);\n  @return if(meta.type-of($color) == 'color', color.change($color, $args...), $color);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","@use '../tokens/m2/mat/option' as tokens-mat-option;\n@use '../tokens/token-utils';\n@use '../style/sass-utils';\n\n@use '../theming/theming';\n@use '../theming/inspection';\n@use '../typography/typography';\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-color-tokens($theme));\n  }\n\n  .mat-accent {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-color-tokens($theme, accent));\n  }\n\n  .mat-warn {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-color-tokens($theme, warn));\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use '../../theming/theming';\n@use '../../theming/inspection';\n\n@mixin _psuedo-checkbox-styles-with-color($text-color, $background) {\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $text-color;\n    }\n\n    // Full (checkbox) appearance inverts colors of text and background.\n    &.mat-pseudo-checkbox-full {\n      &::after {\n        color: $background;\n      }\n\n      background: $text-color;\n    }\n  }\n}\n\n@mixin base($theme) {\n  // TODO(mmalerba): Move pseudo checkbox base tokens here\n}\n\n@mixin color($theme) {\n  $is-dark-theme: inspection.get-theme-type($theme) == dark;\n  $primary: inspection.get-theme-color($theme, primary);\n  $accent: inspection.get-theme-color($theme, accent);\n  $warn: inspection.get-theme-color($theme, warn);\n  $background: inspection.get-theme-color($theme, background, background);\n  $secondary-text: inspection.get-theme-color($theme, foreground, secondary-text);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox-full {\n    color: $secondary-text;\n    &.mat-pseudo-checkbox-disabled {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-primary {\n    @include _psuedo-checkbox-styles-with-color($primary, $background);\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  @include _psuedo-checkbox-styles-with-color($accent, $background);\n  .mat-accent {\n    @include _psuedo-checkbox-styles-with-color($accent, $background);\n  }\n\n  .mat-warn {\n    @include _psuedo-checkbox-styles-with-color($warn, $background);\n  }\n\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $disabled-color;\n    }\n\n    &.mat-pseudo-checkbox-full {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin _density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include _density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use './theming/theming';\n@use './theming/inspection';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n@use './typography/typography';\n\n@mixin base($theme) {\n  @include ripple-theme.base($theme);\n  @include option-theme.base($theme);\n  @include optgroup-theme.base($theme);\n  @include pseudo-checkbox-theme.base($theme);\n  // TODO(mmalerba): Move additional core base tokens here\n}\n\n@mixin color($theme) {\n  @include ripple-theme.color($theme);\n  @include option-theme.color($theme);\n  @include optgroup-theme.color($theme);\n  @include pseudo-checkbox-theme.color($theme);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    background-color: inspection.get-theme-color($theme, background, background);\n    color: inspection.get-theme-color($theme, foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    $selector: elevation.$prefix + $zValue;\n    // We need the `mat-mdc-elevation-specific`, because some MDC mixins\n    // come with elevation baked in and we don't have a way of removing it.\n    .#{$selector}, .mat-mdc-elevation-specific.#{$selector} {\n      @include private.private-theme-elevation($zValue, $theme);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include option-theme.typography($theme);\n  @include optgroup-theme.typography($theme);\n  @include pseudo-checkbox-theme.typography($theme);\n  @include ripple-theme.typography($theme);\n}\n\n@mixin density($theme) {\n  @include option-theme.density($theme);\n  @include optgroup-theme.density($theme);\n  @include ripple-theme.density($theme);\n\n  // TODO(mmalerba): add density mixins for these.\n  // @include pseudo-checkbox-theme.density($theme);\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme) {\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/linear-progress' as tokens-mdc-linear-progress;\n@use '@material/linear-progress/linear-progress-theme' as mdc-linear-progress-theme;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    // Add default values for tokens not related to color, typography, or density.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-linear-progress-theme.theme(tokens-mdc-linear-progress.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin _palette-styles($theme, $palette-name) {\n  $color-tokens: tokens-mdc-linear-progress.get-color-tokens($theme, $palette-name);\n\n  // We can't set the `track-color` using `theme`, because it isn't possible for it to use a CSS\n  // variable since MDC's buffer animation works by constructing an SVG string from this color.\n  // We also can't set the `track-color` by creating our own token slot because the track-color\n  // is set in the SVG string in `theme-styles`.\n  @include mdc-linear-progress-theme.theme-styles((\n    // TODO(crisbeto): the buffer color should come from somewhere in MDC, however at the time of\n    // writing, their buffer color is hardcoded to #e6e6e6 which both doesn't account for theming\n    // and doesn't match the Material design spec. For now we approximate the buffer background by\n    // applying an opacity to the color of the bar.\n    track-color: map.get($color-tokens, track-color),\n  ));\n\n  @include mdc-linear-progress-theme.theme($color-tokens);\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    .mat-mdc-progress-bar {\n      @include _palette-styles($theme, primary);\n\n      &.mat-accent {\n        @include _palette-styles($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-linear-progress-theme.theme(map.get($tokens, tokens-mdc-linear-progress.$prefix));\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:string';\n@use '@material/dom/dom';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/keys';\n\n$baseline-buffer-color: #e6e6e6 !default;\n$height: 4px;\n\n$custom-property-prefix: 'linear-progress';\n\n// TODO(b/254889918): Support all linear progress tokens.\n$light-theme: (\n  active-indicator-color: theme-color.$primary,\n  active-indicator-height: 4px,\n  track-color: $baseline-buffer-color,\n  track-height: 4px,\n  track-shape: 0px,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include buffering-keyframes(map.get($theme, track-height), $query);\n  @include bar-color(map.get($theme, active-indicator-color), $query);\n  @include buffer-color(map.get($theme, track-color), $query);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        height,\n        'max(track-height, bar-height)',\n        $replace: (\n          track-height: map.get($theme, track-height),\n          bar-height: map.get($theme, active-indicator-height)\n        )\n      );\n\n      @include dom.ie11-support() {\n        $track-height: map.get($theme, track-height);\n        $track-height: if(\n          custom-properties.is-custom-prop($track-height),\n          custom-properties.get-fallback($track-height),\n          $track-height\n        );\n\n        $bar-height: map.get($theme, active-indicator-height);\n        $bar-height: if(\n          custom-properties.is-custom-prop($bar-height),\n          custom-properties.get-fallback($bar-height),\n          $bar-height\n        );\n\n        @if ($track-height != null) and\n          ($bar-height != null) and\n          (not custom-properties.is-custom-prop-string($track-height)) and\n          (not custom-properties.is-custom-prop-string($bar-height))\n        {\n          @include theme.property(height, math.max($track-height, $bar-height));\n        }\n      }\n    }\n  }\n\n  @include _bar-height(map.get($theme, active-indicator-height), $query);\n  @include _track-height(map.get($theme, track-height), $query);\n  @include _track-shape(map.get($theme, track-shape), $query);\n\n  // TODO(b/155129310): Add styles for 4-color linear progress once this variant\n  // is supported.\n}\n\n@mixin bar-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__bar-inner {\n    @include feature-targeting.targets($feat-color) {\n      // Border is used rather than background-color to ensure that the\n      // bar is visible in Windows High Contrast Mode.\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin buffer-color($color, $query: feature-targeting.all()) {\n  // We need to escape the '#' character as \"%23\" for SVG because '#' is a reserved character in URIs.\n  $concrete-color: $color;\n  @if custom-properties.is-custom-prop($color) {\n    $concrete-color: custom-properties.get-fallback($color);\n  }\n  $concrete-color-for-svg: str-replace_(\n    string.unquote('#{$concrete-color}'),\n    '#',\n    '%23'\n  );\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n\n      @media (forced-colors: active) {\n        background-color: ButtonBorder;\n      }\n\n      @include dom.ie11-support() {\n        background-color: transparent;\n        // stylelint-disable function-url-quotes -- SVG data URI\n        // SVG is optimized for data URI (https://codepen.io/tigt/post/optimizing-svgs-in-data-uris)\n        @include theme.property(\n          background-image,\n          url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='concrete-color-for-svg'/%3E%3C/svg%3E\"),\n          $replace: (concrete-color-for-svg: $concrete-color-for-svg)\n        );\n        // stylelint-enable function-url-quotes\n      }\n    }\n  }\n\n  .mdc-linear-progress__buffer-bar {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n/// @deprecated Use Theming API instead.\n@mixin bar-and-track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n\n  @include _bar-height($height, $query);\n  @include _track-height($height, $query);\n}\n\n@mixin buffering-keyframes($track-height, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-linear-progress-buffering {\n      from {\n        // Normally the buffer dots start from the left and overflow to the right.\n        // We rotate by 180deg so that the buffer dots start on the right when\n        // in non-reversed mode and overflow to the left.\n        @include rtl.ignore-next-line();\n        @include theme.property(\n          transform,\n          'rotate(180deg) translateX(calc(track-height * -2.5))',\n          $replace: (track-height: $track-height)\n        );\n      }\n    }\n  }\n}\n\n// Based on https://css-tricks.com/snippets/sass/str-replace-function/\n@function str-replace_($string, $search, $replace) {\n  $index: string.index($string, $search);\n\n  @if $index {\n    $head: string.slice($string, 1, $index - 1);\n    $tail: str-replace_(\n      string.slice($string, $index + string.length($search)),\n      $search,\n      $replace\n    );\n\n    @return $head + $replace + $tail;\n  }\n\n  @return $string;\n}\n\n@mixin _bar-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__bar {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__bar-inner {\n      @include theme.property(border-top-width, $height);\n    }\n  }\n}\n\n@mixin _track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__buffer-dots {\n      @include dom.ie11-support() {\n        @include theme.property(\n          background-size,\n          10px height,\n          $replace: (height: $height)\n        );\n      }\n    }\n  }\n}\n\n@mixin _track-shape($shape, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(border-radius, $shape);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    @include rtl.ignore-next-line();\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n\n  // Used to satisfy Firefox v94 which does not render transparent borders in HCM (b/206440838).\n  @include forced-colors-mode($exclude-ie11: true) {\n    @include feature-targeting.targets($feat-structure) {\n      border-color: CanvasText;\n    }\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","@use '@material/textfield/filled-text-field-theme' as mdc-filled-text-field-theme;\n@use '@material/textfield/outlined-text-field-theme' as mdc-outlined-text-field-theme;\n\n@use '../core/tokens/m2/mdc/filled-text-field' as tokens-mdc-filled-text-field;\n@use '../core/tokens/m2/mdc/outlined-text-field' as tokens-mdc-outlined-text-field;\n@use '../core/tokens/m2/mat/form-field' as tokens-mat-form-field;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use './form-field-density';\n\n@mixin base($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(\n        tokens-mdc-filled-text-field.$prefix,\n        tokens-mdc-filled-text-field.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mdc-outlined-text-field.$prefix,\n        tokens-mdc-outlined-text-field.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mat-form-field.$prefix,\n        tokens-mat-form-field.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-color-tokens($theme));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-color-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-color-tokens($theme));\n  }\n\n  .mat-mdc-form-field.mat-accent {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($theme, accent));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($theme, accent));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.private-get-color-palette-color-tokens($theme, accent));\n  }\n\n  .mat-mdc-form-field.mat-warn {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($theme, warn));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($theme, warn));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.private-get-color-palette-color-tokens($theme, warn));\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-typography-tokens($theme));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-typography-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  @include form-field-density.private-form-field-density($theme);\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/theming/inspection';\n\n@use './form-field-sizing';\n\n// Mixin that sets the vertical spacing for the infix container of filled form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-filled($with-label-padding, $no-label-padding) {\n  .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n    padding-top: map.get($with-label-padding, top);\n    padding-bottom: map.get($with-label-padding, bottom);\n  }\n\n  .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)\n  .mat-mdc-form-field-infix {\n    padding-top: map.get($no-label-padding, top);\n    padding-bottom: map.get($no-label-padding, bottom);\n  }\n}\n\n// Mixin that sets the vertical spacing for the infix container of outlined form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-outlined($padding) {\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n    padding-top: map.get($padding, top);\n    padding-bottom: map.get($padding, bottom);\n  }\n}\n\n// Mixin that includes the density styles for form fields. MDC provides their own density\n// styles for MDC text-field which we cannot use. MDC relies on input elements to stretch\n// vertically when the height is reduced as per density scale. This doesn't work for our\n// form field since we support custom form field controls without a fixed height. Instead, we\n// provide spacing that makes arbitrary controls align as specified in the Material Design\n// specification. In order to support density, we need to adjust the vertical spacing to be\n// based on the density scale.\n@mixin private-form-field-density($theme) {\n  // Height of the form field that is based on the current density scale.\n  $height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: inspection.get-theme-density($theme),\n    $property-name: height,\n  );\n\n  // Whether floating labels for filled form fields should be hidden. MDC hides the label in\n  // their density styles when the height decreases too much. We match their density styles.\n  $hide-filled-floating-label: $height < mdc-textfield.$minimum-height-for-filled-label;\n  // We computed the desired height of the form-field using the density configuration. The\n  // spec only describes vertical spacing/alignment in non-dense mode. This means that we\n  // cannot update the spacing to explicit numbers based on the density scale. Instead, we\n  // determine the height reduction and equally subtract it from the default `top` and `bottom`\n  // padding that is provided by the Material Design specification.\n  $vertical-deduction: math.div(mdc-textfield.$height - $height, 2);\n  // Map that describes the padding for form-fields with label.\n  $with-label-padding: (\n    top: form-field-sizing.$mat-form-field-with-label-input-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-with-label-input-padding-bottom - $vertical-deduction,\n  );\n  // Map that describes the padding for form-fields without label.\n  $no-label-padding: (\n    top: form-field-sizing.$mat-form-field-no-label-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-no-label-padding-bottom - $vertical-deduction,\n  );\n\n  // We add a minimum height to the infix container in order to ensure that custom controls have\n  // the same default vertical space as text-field inputs (with respect to the vertical padding).\n  .mat-mdc-form-field-infix {\n    min-height: $height;\n  }\n\n  // By default, MDC aligns the label using percentage. This will be overwritten based\n  // on whether a textarea is used. This is not possible in our implementation of the\n  // form-field because we do not know what type of form-field control is set up. Hence\n  // we always use a fixed position for the label. This does not have any implications.\n  .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n    top: math.div($height, 2);\n  }\n\n  // For the outline appearance, we re-create the active floating label transform. This is\n  // necessary because the transform for docked floating labels can be updated to account for\n  // the width of prefix container.\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded\n  .mdc-floating-label--float-above {\n    --mat-mdc-form-field-label-transform: translateY(\n            -#{mdc-textfield.get-outlined-label-position-y($height)})\n            scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n    transform: var(--mat-mdc-form-field-label-transform);\n  }\n\n  // Add vertical spacing to the infix to ensure that outlined form fields have their controls\n  // aligned as if there is no label. This is done similarly in MDC and is specified in the\n  // Material Design specification. Outline form fields position the control as if there is no\n  // label. This is because the label overflows the form-field and doesn't need space at the top.\n  @include _infix-vertical-spacing-outlined($no-label-padding);\n\n  // MDC hides labels for filled form fields when the form field height decreases. We match\n  // this behavior in our custom density styles.\n  @if $hide-filled-floating-label {\n    // Update the spacing for filled form fields to account for the hidden floating label.\n    @include _infix-vertical-spacing-filled(\n          $no-label-padding, $no-label-padding);\n    .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {\n        display: none;\n    }\n  }\n  @else {\n    // By default, filled form fields align their controls differently based on whether there\n    // is a label or not. MDC does this too, but we cannot rely on their styles as we support\n    // arbitrary form field controls and MDC only applies their spacing to the `<input>` elements.\n    @include _infix-vertical-spacing-filled(\n          $with-label-padding, $no-label-padding);\n  }\n}\n","@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/tokens/m2/mat/select' as tokens-mat-select;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-color-tokens($theme));\n\n    .mat-mdc-form-field.mat-accent {\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($theme, accent));\n    }\n\n    .mat-mdc-form-field.mat-warn {\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($theme, warn));\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n\n  // Density is clamped at -5 here, because MDC's form field throws an error for anything lower.\n  $form-field-height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: theming.clamp-density($density-scale, -5),\n    $property-name: height,\n  );\n\n  // On lower densities the filled form field hides its label which causes the label to\n  // be misaligned. Remove the additional offset that was added because of the label.\n  @if ($form-field-height < mdc-textfield.$minimum-height-for-filled-label) {\n    .mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper {\n      transform: none;\n    }\n  }\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-density-tokens($theme));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use 'sass:color';\n@use '@material/chips/chip-theme' as mdc-chip-theme;\n@use '../core/tokens/m2/mdc/chip' as tokens-mdc-chip;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n\n@mixin base($theme) {\n  .mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme(tokens-mdc-chip.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  .mat-mdc-standard-chip {\n    $default-color-tokens: tokens-mdc-chip.get-color-tokens($theme);\n    @include mdc-chip-theme.theme($default-color-tokens);\n\n    &.mat-mdc-chip-selected,\n    &.mat-mdc-chip-highlighted {\n      &.mat-primary {\n        $primary-color-tokens: tokens-mdc-chip.get-color-tokens($theme, primary);\n        @include mdc-chip-theme.theme($primary-color-tokens);\n      }\n\n      &.mat-accent {\n        $accent-color-tokens: tokens-mdc-chip.get-color-tokens($theme, accent);\n        @include mdc-chip-theme.theme($accent-color-tokens);\n      }\n\n      &.mat-warn {\n        $warn-color-tokens: tokens-mdc-chip.get-color-tokens($theme, warn);\n        @include mdc-chip-theme.theme($warn-color-tokens);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  $typography-tokens: tokens-mdc-chip.get-typography-tokens($theme);\n\n  .mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($theme) {\n  $density-tokens: tokens-mdc-chip.get-density-tokens($theme);\n\n  .mat-mdc-chip.mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($density-tokens);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use '@material/switch/switch-theme' as mdc-switch-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/switch' as m2-mdc-switch;\n@use '../core/tokens/m2/mat/slide-toggle' as m2-mat-slide-toggle;\n@use '../core/tokens/token-utils';\n\n@mixin base($theme) {\n  .mdc-switch {\n    @include mdc-switch-theme.theme(m2-mdc-switch.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  $is-dark: inspection.get-theme-type($theme) == dark;\n  $mdc-switch-color-tokens: m2-mdc-switch.get-color-tokens($theme);\n\n  @include mdc-helpers.using-mdc-theme($theme) {\n    // Add values for MDC slide toggles tokens\n    .mat-mdc-slide-toggle {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-switch-theme.theme($mdc-switch-color-tokens);\n\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      .mdc-switch--disabled + label {\n        color: inspection.get-theme-color($theme, foreground, disabled-text);\n      }\n\n      // Change the color palette related tokens to accent or warn if applicable\n      &.mat-accent {\n        @include mdc-switch-theme.theme(\n            m2-mdc-switch.private-get-color-palette-color-tokens($theme, accent));\n      }\n\n      &.mat-warn {\n        @include mdc-switch-theme.theme(\n            m2-mdc-switch.private-get-color-palette-color-tokens($theme, warn));\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  $mdc-switch-typography-tokens: m2-mdc-switch.get-typography-tokens($theme);\n  $mat-slide-toggle-typography-tokens: m2-mat-slide-toggle.get-typography-tokens($theme);\n\n  //Add values for MDC slide toggle tokens\n  .mat-mdc-slide-toggle {\n    @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-switch-theme.theme($mdc-switch-typography-tokens);\n    @include token-utils.create-token-values(\n      m2-mat-slide-toggle.$prefix,\n      $mat-slide-toggle-typography-tokens\n    );\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n\n  .mat-mdc-slide-toggle {\n    @include mdc-switch-theme.theme(mdc-switch-theme.density($density-scale));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","//\n// Copyright 2023 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './form-field-theme';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include static-styles($query);\n\n  // TODO: Replace with call to theme-styles after Angular moves to Theming API\n  .mdc-form-field {\n    @include typography.typography(body2, $query);\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, text-primary-on-background);\n    }\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-form-field {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      &[hidden] {\n        display: none;\n      }\n      align-items: center;\n      vertical-align: middle;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, 0, auto);\n        @include rtl.reflexive-property(padding, variables.$item-spacing, 0);\n\n        order: 0;\n      }\n    }\n  }\n\n  .mdc-form-field--nowrap {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    }\n  }\n\n  .mdc-form-field--align-end {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, auto, 0);\n        @include rtl.reflexive-property(padding, 0, variables.$item-spacing);\n\n        order: -1;\n      }\n    }\n  }\n\n  .mdc-form-field--space-between {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: space-between;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0;\n\n        @include rtl.rtl {\n          // RTL needed for specificity\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n\n/// Resolves a theme's typography tokens for the given prefix.\n///\n/// @example - scss\n///   // $theme has the following tokens:\n///   // - label-text-font\n///   // - label-text-line-height\n///   // - label-text-size\n///   // - label-text-tracking\n///   // - label-text-weight\n///   $theme: resolve-theme($theme, map.get($resolvers, typography), label-text);\n///\n/// @param {Map} $theme - The theme to resolve tokens for.\n/// @param {Function} $resolver - The typography resolver to use.\n/// @param {String...} $token-prefixes - The prefix(es) of a typography token\n///     set.\n/// @return {Map} The theme with resolved typography tokens.\n@function resolve-theme($theme, $resolver, $token-prefixes...) {\n  @if $resolver == null {\n    @return $theme;\n  }\n\n  @each $token-prefix in $token-prefixes {\n    $typography-theme: meta.call(\n      $resolver,\n      $font: map.get($theme, '#{$token-prefix}-font'),\n      $line-height: map.get($theme, '#{$token-prefix}-line-height'),\n      $size: map.get($theme, '#{$token-prefix}-size'),\n      $tracking: map.get($theme, '#{$token-prefix}-tracking'),\n      $weight: map.get($theme, '#{$token-prefix}-weight')\n    );\n\n    $theme: map.merge(\n      $theme,\n      (\n        '#{$token-prefix}-font': map.get($typography-theme, font),\n        '#{$token-prefix}-line-height': map.get($typography-theme, line-height),\n        '#{$token-prefix}-size': map.get($typography-theme, size),\n        '#{$token-prefix}-tracking': map.get($typography-theme, tracking),\n        '#{$token-prefix}-weight': map.get($typography-theme, weight),\n      )\n    );\n  }\n\n  @return $theme;\n}\n","@use 'sass:map';\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mat/radio' as tokens-mat-radio;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-unthemable-tokens());\n      @include token-utils.create-token-values(\n          tokens-mat-radio.$prefix, tokens-mat-radio.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    @include mdc-helpers.using-mdc-theme($theme) {\n      .mat-mdc-radio-button {\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n\n    .mat-mdc-radio-button {\n      &.mat-primary {\n        @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, primary));\n        @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n          tokens-mat-radio.get-color-tokens($theme, primary));\n      }\n\n      &.mat-accent {\n        @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme));\n        @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n          tokens-mat-radio.get-color-tokens($theme));\n      }\n\n      &.mat-warn {\n        @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, warn));\n        @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n          tokens-mat-radio.get-color-tokens($theme, warn));\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-typography-tokens($theme));\n    }\n\n    .mat-mdc-radio-button {\n      @include mdc-helpers.using-mdc-typography($theme) {\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n      }\n    }\n  }\n}\n\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    $density-scale: inspection.get-theme-density($theme);\n\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-density-tokens($theme));\n    }\n\n    @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n      .mat-mdc-radio-touch-target {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-radio-theme.theme(map.get($tokens, tokens-mdc-radio.$prefix));\n    @include token-utils.create-token-values(\n        tokens-mat-radio.$prefix, map.get($tokens, tokens-mat-radio.$prefix));\n  }\n}\n","@use 'sass:map';\n@use '@material/slider/slider-theme' as mdc-slider-theme;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/slider' as tokens-mat-slider;\n@use '../core/tokens/m2/mdc/slider' as tokens-mdc-slider;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    // Add default values for tokens not related to color, typography, or density.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-slider-theme.theme(tokens-mdc-slider.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    $is-dark: inspection.get-theme-type($theme) == dark;\n\n    $mdc-color-tokens: token-utils.resolve-elevation(\n        tokens-mdc-slider.get-color-tokens($theme),\n        handle-elevation,\n        handle-shadow-color\n    );\n\n    $mat-slider-color-tokens: tokens-mat-slider.get-color-tokens($theme);\n\n  // Add values for MDC slider tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-slider-theme.theme($mdc-color-tokens);\n    @include _slider-ripple-color($theme, primary);\n    @include token-utils.create-token-values(\n      tokens-mat-slider.$prefix,\n      $mat-slider-color-tokens\n    );\n\n    .mat-accent {\n      @include mdc-slider-theme.theme(\n        tokens-mdc-slider.private-get-color-palette-color-tokens($theme, accent));\n      @include _slider-ripple-color($theme, accent);\n    }\n\n      .mat-warn {\n        @include mdc-slider-theme.theme(\n            tokens-mdc-slider.private-get-color-palette-color-tokens($theme, warn));\n        @include _slider-ripple-color($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    // Add values for MDC slider tokens.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-slider-theme.theme(tokens-mdc-slider.get-typography-tokens($theme));\n    }\n  }\n}\n\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    // Add values for MDC slider tokens.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-slider-theme.theme(tokens-mdc-slider.get-density-tokens($theme));\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n// Generated MDC ripple color tokens are not being calculated so needs to be set\n@mixin _slider-ripple-color($theme, $palette-name) {\n  $color: inspection.get-theme-color($theme, $palette-name);\n\n  --mat-mdc-slider-ripple-color: #{$color};\n  --mat-mdc-slider-hover-ripple-color: #{rgba($color, 0.05)};\n  --mat-mdc-slider-focus-ripple-color: #{rgba($color, 0.2)};\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-slider-theme.theme(map.get($tokens, tokens-mdc-slider.$prefix));\n    @include token-utils.create-token-values(\n        tokens-mat-slider.$prefix, map.get($tokens, tokens-mat-slider.$prefix));\n  }\n}\n","@use 'sass:map';\n@use '@material/list/evolution-mixins';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/list/list-theme' as mdc-list-theme;\n\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mdc/list' as tokens-mdc-list;\n@use '../core/typography/typography';\n\n@mixin base($theme) {\n  // Add default values for tokens not related to color, typography, or density.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme(tokens-mdc-list.get-unthemable-tokens());\n  }\n}\n\n@mixin color($theme) {\n  $mdc-list-color-tokens: tokens-mdc-list.get-color-tokens($theme);\n\n  // Add values for MDC list tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme($mdc-list-color-tokens);\n  }\n\n  .mdc-list-item__start,\n  .mdc-list-item__end {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, primary));\n  }\n\n  .mat-accent {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, accent));\n    }\n  }\n\n  .mat-warn {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($theme, warn));\n    }\n  }\n\n  .mat-mdc-list-option {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, primary));\n  }\n  .mat-mdc-list-option.mat-accent {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, accent));\n  }\n  .mat-mdc-list-option.mat-warn {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, warn));\n  }\n\n  // There is no token for activated color on nav list.\n  // TODO(mmalerba): Add a token to MDC or make a custom one.\n  .mat-mdc-list-base.mat-mdc-list-base {\n    @include evolution-mixins.list-selected-ink-color(inspection.get-theme-color($theme, primary));\n  }\n\n  // TODO(mmalerba): Leaking styles from the old MDC list mixins used in other components can cause\n  //  opacity issues, so we need this override for now. We can remove it when all Angular Material\n  //  components stop using the old MDC mixins.\n  .mat-mdc-list-base .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n  $mdc-list-density-tokens: tokens-mdc-list.get-density-tokens($theme);\n\n  // Add values for MDC list tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme($mdc-list-density-tokens);\n  }\n\n  .mdc-list-item__start,\n  .mdc-list-item__end {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-density-tokens($theme));\n  }\n\n  // TODO(mmalerba): This is added to maintain the same style MDC used prior to the token-based API,\n  //  to avoid screenshot diffs. We should remove it in favor of following MDC's current style, or\n  //  add custom tokens for it.\n  .mat-mdc-list-item {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-icon {\n      &.mdc-list-item--with-one-line {\n        height: map.get((\n            0: 56px,\n            -1: 52px,\n            -2: 48px,\n            -3: 44px,\n            -4: 40px,\n            -5: 40px,\n        ), $density-scale);\n      }\n\n      &.mdc-list-item--with-two-lines {\n        height: map.get((\n            0: 72px,\n            -1: 68px,\n            -2: 64px,\n            -3: 60px,\n            -4: 56px,\n            -5: 56px,\n        ), $density-scale);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  $mdc-list-typography-tokens: tokens-mdc-list.get-typography-tokens($theme);\n\n  // Add values for MDC list tokens.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-list-theme.theme($mdc-list-typography-tokens);\n  }\n\n  // MDC does not have tokens for the subheader.\n  // TODO(mmalerba): Discuss with MDC about adding them, or create custom tokens.\n  .mdc-list-group__subheader {\n    font: inspection.get-theme-typography($theme, subtitle-1, font);\n    letter-spacing: inspection.get-theme-typography($theme, subtitle-1, letter-spacing);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","//\n// Copyright 2022 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Internal stylesheet for material list component. Selector '.mdc-*' should\n// only be used in this project.\n\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/ripple/ripple';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './evolution-variables' as variables;\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n\n$ripple-target: variables.$ripple-target;\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _high-contrast-mode($query: $query);\n  .mdc-list {\n    @include _static-list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n    @include _list-item-baseline-height($query: $query);\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // TODO(b/254711887): Likely need to update this to adhere to a HCM focus\n    // ring spec.\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _multi-line-item-end-text-baseline($query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-text-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n  .mdc-list-group__subheader {\n    @include _list-group-subheader-margin($query: $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode-border-color($query);\n\n  .mdc-list {\n    @include _typography-list-base($query: $query);\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-size(56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-group__subheader {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n  @include static-styles($query: $query);\n} // end of without-ripple\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// Mixins that apply baseline height for one-, two-, and three- line item\n// container heights. This mixin calls the density mixins so that the styles\n// can be overwritten by future density mixin calls.\n@mixin _list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _two-line-item-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _three-line-item-density(\n    variables.$three-line-item-density-scale,\n    $query: $query\n  );\n}\n\n@mixin _tall-list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-tall-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n  @include _two-line-item-tall-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n}\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n\n  @if ($density-scale and $density-scale != 0) {\n    &.mdc-list-item--with-two-lines {\n      .mdc-list-item__content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n      .mdc-list-item__primary-text,\n      .mdc-list-item__secondary-text {\n        margin-top: 0px;\n        margin-bottom: 0px;\n        line-height: 1.4;\n        &::before,\n        &::after {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n// Split the list-base mixin into two sub-mixins, one holding the\n// structural/static styles (static-list-base) and the other holding styles\n// that are themable (typography-list-base). However, the existing list-base\n// mixin need to be preserved as Angular calls this mixin for autocomplete\n// base styling.\n@mixin _typography-list-base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n}\n\n@mixin _static-list-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  @include _typography-list-base($query: $query);\n  @include _static-list-base($query: $query);\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.surface-styles($query: $query);\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-text-baseline($query: feature-targeting.all()) {\n  @include _two-line-item-primary-text-baseline(32px, 20px, $query: $query);\n  @include _two-line-item-overline-text-baseline(28px, 20px, $query: $query);\n  @include _two-line-item-meta-text-baseline($top: 32px, $query: $query);\n}\n\n@mixin _two-line-item-primary-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _multi-line-item-end-text-baseline($query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-text-baseline(\n  $top,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode-border-color($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  .mdc-list-divider::after {\n    @include feature-targeting.targets($feat-color) {\n      // Color ensures border is shown, but will be overridden by the browser.\n      @include theme.property(border-bottom-color, white);\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n    }\n  }\n}\n\n@mixin _list-group-subheader-margin($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $mdc-list-subheader-virtual-height: 3rem;\n  $mdc-list-subheader-leading: map.get(\n    map.get(typography.$styles, body1),\n    line-height\n  );\n  $mdc-list-subheader-margin: calc(\n    (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) / 2\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: $mdc-list-subheader-margin variables.$side-padding;\n  }\n}\n","@use '@material/tab-indicator/tab-indicator-theme' as mdc-tab-indicator-theme;\n@use '@material/tab/tab-theme' as mdc-tab-theme;\n@use '../core/style/sass-utils';\n@use '../core/tokens/m2/mdc/tab' as tokens-mdc-tab;\n@use '../core/tokens/m2/mdc/tab-indicator' as tokens-mdc-tab-indicator;\n@use '../core/tokens/m2/mat/tab-header' as tokens-mat-tab-header;\n@use '../core/tokens/m2/mat/tab-header-with-background' as tokens-mat-tab-header-with-background;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n\n@mixin base($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-tab-indicator-theme.theme(tokens-mdc-tab-indicator.get-unthemable-tokens());\n    @include mdc-tab-theme.secondary-navigation-tab-theme(tokens-mdc-tab.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mat-tab-header.$prefix, tokens-mat-tab-header.get-unthemable-tokens());\n    @include token-utils.create-token-values(\n        tokens-mat-tab-header-with-background.$prefix,\n        tokens-mat-tab-header-with-background.get-unthemable-tokens()\n    );\n  }\n}\n\n@mixin color($theme) {\n  .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n    @include _palette-styles($theme, primary);\n\n    &.mat-accent {\n      @include _palette-styles($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($theme, warn);\n    }\n\n    &.mat-background-primary {\n      @include _background-styles($theme, primary);\n    }\n\n    &.mat-background-accent {\n      @include _background-styles($theme, accent);\n    }\n\n    &.mat-background-warn {\n      @include _background-styles($theme, warn);\n    }\n  }\n}\n\n@mixin _background-styles($theme, $palette-name) {\n  @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n    tokens-mat-tab-header-with-background.get-color-tokens($theme, $palette-name));\n}\n\n@mixin _palette-styles($theme, $palette-name) {\n  @include mdc-tab-theme.secondary-navigation-tab-theme(\n    tokens-mdc-tab.get-color-tokens($theme, $palette-name));\n  @include mdc-tab-indicator-theme.theme(\n    tokens-mdc-tab-indicator.get-color-tokens($theme, $palette-name));\n  @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n   tokens-mat-tab-header.get-color-tokens($theme, $palette-name));\n}\n\n@mixin typography($theme) {\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-typography-tokens($theme));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-typography-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-typography-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-density-tokens($theme));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-density-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-density-tokens($theme));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-density-tokens($theme));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-unthemable-tokens());\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme));\n    }\n\n    .mat-mdc-checkbox {\n      &.mat-primary {\n        @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, primary));\n      }\n\n      &.mat-warn {\n        @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($theme, warn));\n      }\n\n      @include mdc-helpers.using-mdc-theme($theme) {\n        // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      }\n\n      &.mat-mdc-checkbox-disabled label {\n        // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n        color: inspection.get-theme-color($theme, foreground, disabled-text);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-typography-tokens($theme));\n    }\n\n    .mat-mdc-checkbox {\n      @include mdc-helpers.using-mdc-typography($theme) {\n        // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n        @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n      }\n    }\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: inspection.get-theme-density($theme);\n\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-density-tokens($theme));\n    }\n\n    @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n      .mat-mdc-checkbox-touch-target {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    // TODO(mmalerba): Some of the theme styles above are not represented in terms of tokens,\n    //   so this mixin is currently incomplete.\n    @include mdc-checkbox-theme.theme(map.get($tokens, tokens-mdc-checkbox.$prefix));\n  }\n}\n","@use '@material/button/button' as mdc-button;\n@use '@material/button/button-text-theme' as mdc-button-text-theme;\n@use '@material/button/button-filled-theme' as mdc-button-filled-theme;\n@use '@material/button/button-protected-theme' as mdc-button-protected-theme;\n@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;\n@use '@material/elevation/elevation-theme' as mdc-elevation-theme;\n\n@use './button-base';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/filled-button' as tokens-mdc-filled-button;\n@use '../core/tokens/m2/mat/filled-button' as tokens-mat-filled-button;\n@use '../core/tokens/m2/mdc/outlined-button' as tokens-mdc-outlined-button;\n@use '../core/tokens/m2/mat/outlined-button' as tokens-mat-outlined-button;\n@use '../core/tokens/m2/mdc/protected-button' as tokens-mdc-protected-button;\n@use '../core/tokens/m2/mat/protected-button' as tokens-mat-protected-button;\n@use '../core/tokens/m2/mdc/text-button' as tokens-mdc-text-button;\n@use '../core/tokens/m2/mat/text-button' as tokens-mat-text-button;\n\n\n@mixin _text-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-text-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-text-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-text-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-text-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-text-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-text-button.$prefix, $mat-tokens);\n}\n\n@mixin _filled-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-filled-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-filled-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-filled-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-filled-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-filled-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-filled-button.$prefix, $mat-tokens);\n}\n\n@mixin _protected-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-protected-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-protected-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-protected-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-protected-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-protected-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-protected-button.$prefix, $mat-tokens);\n}\n\n@mixin _outlined-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-outlined-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-outlined-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-outlined-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-outlined-button.get-color-tokens($theme)\n  );\n\n  @include mdc-button-outlined-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-outlined-button.$prefix, $mat-tokens);\n}\n\n@mixin base($theme) {\n  // TODO(mmalerba): Move button base tokens here\n}\n\n@mixin color($theme) {\n  .mat-mdc-button {\n    @include _text-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _text-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _text-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _text-button-variant($theme, warn);\n    }\n  }\n\n  .mat-mdc-unelevated-button {\n    @include _filled-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _filled-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _filled-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _filled-button-variant($theme, warn);\n    }\n  }\n\n  .mat-mdc-raised-button {\n    @include _protected-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _protected-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _protected-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _protected-button-variant($theme, warn);\n    }\n\n    // TODO(wagnermaciel): Remove this workaround when b/301126527 is resolved\n    @include mdc-helpers.disable-mdc-fallback-declarations {\n      @include mdc-elevation-theme.elevation(2);\n\n      &:hover, &:focus {\n        @include mdc-elevation-theme.elevation(4);\n      }\n\n      &:active, &:focus:active {\n        @include mdc-elevation-theme.elevation(8);\n      }\n    }\n  }\n\n  .mat-mdc-outlined-button {\n    @include _outlined-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _outlined-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _outlined-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _outlined-button-variant($theme, warn);\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include mdc-helpers.using-mdc-typography($theme) {\n    @include mdc-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($theme) {\n  $density-scale: theming.clamp-density(inspection.get-theme-density($theme), -3);\n\n  .mat-mdc-button {\n    $density-tokens: tokens-mdc-text-button.get-density-tokens($theme);\n    @include mdc-button-text-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n\n  .mat-mdc-raised-button {\n    $density-tokens: tokens-mdc-protected-button.get-density-tokens($theme);\n    @include mdc-button-protected-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n\n  .mat-mdc-unelevated-button {\n    $density-tokens: tokens-mdc-filled-button.get-density-tokens($theme);\n    @include mdc-button-filled-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n\n  .mat-mdc-outlined-button {\n    $density-tokens: tokens-mdc-outlined-button.get-density-tokens($theme);\n    @include mdc-button-outlined-theme.theme($density-tokens);\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/touch-target/touch-target';\n@use '@material/focus-ring/focus-ring';\n@use '@material/typography/typography';\n@use './button-shared-theme';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include _static-styles-base($query: $query);\n  @include _typography-styles($query: $query);\n}\n\n@mixin _static-styles-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define button\n  .mdc-button {\n    @include _root-structure($query);\n    // The icon CSS class overrides styles defined in the .material-icons CSS\n    // class, which is loaded separately so the order of CSS definitions is not\n    // guaranteed. Therefore, increase specifity by nesting this class to ensure\n    // overrides apply.\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include _icon-structure;\n      }\n    }\n\n    .mdc-button__progress-indicator {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 0;\n        position: absolute;\n        @include rtl.ignore-next-line();\n        transform: translate(-50%, -50%);\n        top: 50%;\n        @include rtl.ignore-next-line();\n        left: 50%;\n        line-height: initial;\n      }\n    }\n\n    .mdc-button__label {\n      @include feature-targeting.targets($feat-structure) {\n        // Necessary such that label is stacked on top of ripple\n        // (since ripple is a positioned element, non-positioned elements\n        // appear under it).\n        position: relative;\n      }\n    }\n\n    .mdc-button__focus-ring {\n      @include focus-ring.focus-ring($query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n\n    @include ripple-theme.focus {\n      .mdc-button__focus-ring {\n        @include dom.forced-colors-mode($exclude-ie11: true) {\n          @include feature-targeting.targets($feat-structure) {\n            display: block;\n          }\n        }\n      }\n    }\n\n    .mdc-button__touch {\n      @include touch-target.touch-target($query: $query);\n    }\n  }\n\n  .mdc-button__label + .mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-trailing;\n    }\n  }\n\n  svg.mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-svg;\n    }\n  }\n\n  .mdc-button--touch {\n    // Touch target doesn't change with height. It simply gets removed if\n    // density (height) changes. Therefore, it is a static style.\n    @include touch-target.margin(\n      $component-height: button-shared-theme.$height,\n      $query: $query\n    );\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin _typography-styles($query) {\n  .mdc-button {\n    // Exclude properties declared in theme styles.\n    @include typography.typography(\n      button,\n      $exclude-props: (\n        font-size,\n        line-height,\n        font-weight,\n        letter-spacing,\n        text-transform\n      ),\n      $query: $query\n    );\n  }\n}\n\n/// @deprecated Contains typography declarations now part of theme-styles.\n@mixin deprecated-static-styles-without-ripple(\n  $query: feature-targeting.all()\n) {\n  @include _deprecated-typography-styles($query: $query);\n  @include _static-styles-base($query: $query);\n}\n\n@mixin _deprecated-typography-styles($query) {\n  .mdc-button {\n    @include typography.typography(button, $query);\n  }\n}\n\n@mixin deprecated-base($query) {\n  @include base($query);\n}\n\n@mixin base($query) {\n  @include typography.typography(button, $query);\n  @include _root-structure($query: $query);\n}\n\n@mixin _root-structure($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    // position: relative; already set in mdc-elevation-overlay-surface-position\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    min-width: 64px;\n    border: none;\n    outline: none;\n    /* @alternate */\n    line-height: inherit;\n    user-select: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    vertical-align: middle;\n    background: transparent;\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  &:active {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  &:disabled {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n\n  &[hidden] {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n}\n\n@mixin icon {\n  @include _icon-structure;\n  @include _icon-size(18px);\n}\n\n@mixin _icon-structure {\n  @include rtl.reflexive-box(margin, right, 8px);\n\n  display: inline-block;\n  position: relative;\n  vertical-align: top;\n}\n\n@mixin _icon-size($size-px) {\n  $icon-size: typography.px-to-rem($size-px);\n\n  font-size: $icon-size;\n  height: $icon-size;\n  width: $icon-size;\n}\n\n@mixin icon-trailing {\n  @include rtl.reflexive-box(margin, left, 8px);\n}\n\n@mixin icon-svg {\n  fill: currentColor;\n}\n\n@mixin icon-contained {\n  @include rtl.reflexive-property(margin, -4px, 8px);\n}\n\n@mixin icon-contained-trailing {\n  @include rtl.reflexive-property(margin, 8px, -4px);\n}\n\n@mixin raised-transition($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-theme.transition-value();\n  }\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon {\n  @include icon;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-trailing {\n  @include icon-trailing;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-svg {\n  @include icon-svg;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained {\n  @include icon-contained;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained-trailing {\n  @include icon-contained-trailing;\n}\n","@use 'sass:math';\n@use '@material/density/functions' as mdc-density-functions;\n@use '@material/icon-button/icon-button-theme' as mdc-icon-button-theme;\n@use '../core/tokens/m2/mdc/icon-button' as tokens-mdc-icon-button;\n@use '../core/tokens/m2/mat/icon-button' as tokens-mat-icon-button;\n\n@use './button-base';\n@use '../core/tokens/token-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n\n\n@mixin base($theme) {\n  // TODO(mmalerba): Move icon button base tokens here\n}\n\n@mixin _icon-button-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-icon-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-icon-button.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-icon-button.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-icon-button.get-color-tokens($theme)\n  );\n\n  @include mdc-icon-button-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-icon-button.$prefix, $mat-tokens);\n}\n\n@mixin color($theme) {\n  .mat-mdc-icon-button {\n    @include _icon-button-variant($theme, null);\n\n    &.mat-primary {\n      @include _icon-button-variant($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _icon-button-variant($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _icon-button-variant($theme, warn);\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin density($theme) {\n  $icon-size: 24px;\n  $density-scale: inspection.get-theme-density($theme);\n  // Manually apply the expected density theming, and include the padding\n  // as it was applied before\n  $calculated-size: mdc-density-functions.prop-value(\n    $density-config: (\n      size: (\n        default: 48px,\n        maximum: 48px,\n        minimum: 28px,\n      ),\n    ),\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n  .mat-mdc-icon-button.mat-mdc-button-base {\n    // Match the styles that used to be present. This is necessary for backwards\n    // compat to match the previous implementations selector count (two classes).\n    @include mdc-icon-button-theme.theme((\n      state-layer-size: $calculated-size,\n    ));\n\n    // TODO: Switch calculated-size to \"var(--mdc-icon-button-state-layer-size)\"\n    // Currently fails validation because the variable is \"undefined\"\n    // in the sass stack.\n    // TODO: Switch icon-size to \"var(--mdc-icon-button-icon-size)\". Currently\n    // fails validation because the variable is \"undefined\" in the sass stack.\n    width: var(--mdc-icon-button-state-layer-size);\n    height: var(--mdc-icon-button-state-layer-size);\n    padding: math.div($calculated-size - $icon-size, 2);\n\n    @include button-base.mat-private-button-touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon-button') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use '@material/fab/fab' as mdc-fab;\n@use '@material/fab/fab-theme' as mdc-fab-theme;\n@use '@material/fab/extended-fab-theme' as mdc-extended-fab-theme;\n\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/fab' as tokens-mdc-fab;\n@use '../core/tokens/m2/mdc/extended-fab' as tokens-mdc-extended-fab;\n@use '../core/tokens/m2/mat/fab' as tokens-mat-fab;\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n\n@mixin base($theme) {\n  // Add default values for tokens not related to color, typography, or density.\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-fab-theme.theme(tokens-mdc-fab.get-unthemable-tokens());\n    @include mdc-extended-fab-theme.theme(\n      tokens-mdc-extended-fab.get-unthemable-tokens()\n    );\n  }\n}\n\n@mixin _fab-variant($theme, $palette) {\n  $mdc-tokens: if($palette,\n    tokens-mdc-fab.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mdc-fab.get-color-tokens($theme)\n  );\n\n  $mat-tokens: if($palette,\n    tokens-mat-fab.private-get-color-palette-color-tokens($theme, $palette),\n    tokens-mat-fab.get-color-tokens($theme)\n  );\n\n  @include mdc-fab-theme.theme($mdc-tokens);\n  @include token-utils.create-token-values(tokens-mat-fab.$prefix, $mat-tokens);\n}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include _fab-variant($theme, null);\n\n    .mat-mdc-fab,\n    .mat-mdc-mini-fab {\n      &.mat-primary {\n        @include _fab-variant($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _fab-variant($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _fab-variant($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include mdc-helpers.using-mdc-typography($theme) {\n    @include mdc-fab.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n\n  $typography-tokens: tokens-mdc-extended-fab.get-typography-tokens($theme);\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-extended-fab-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($theme) {\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-fab') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/animation/functions' as animation-functions;\n@use '@material/elevation/elevation-theme';\n@use '@material/elevation/elevation';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/replace';\n@use '@material/theme/state';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/typography/typography';\n@use './fab-custom-properties';\n@use './extended-fab-theme';\n@use './fab-theme';\n@use 'sass:math';\n@use 'sass:list';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  // postcss-bem-linter: define fab\n\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-fab {\n    @include base_($query: $query);\n  }\n\n  .mdc-fab--mini {\n    @include mini_($query: $query);\n  }\n\n  .mdc-fab--extended {\n    @include extended_($query: $query);\n  }\n\n  .mdc-fab--touch {\n    @include touch-target-mixins.margin(\n      $component-height: fab-theme.$mini-height,\n      $component-width: fab-theme.$mini-height,\n      $query: $query\n    );\n\n    .mdc-fab__touch {\n      @include touch-target-mixins.touch-target(\n        $set-width: true,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-fab::before {\n    @include dom-mixins.transparent-border($query: $query);\n  }\n\n  .mdc-fab__label {\n    @include label_($query: $query);\n  }\n\n  .mdc-fab__icon {\n    @include icon_($query: $query);\n  }\n\n  // Increase specificity for FAB icon styles that need to override styles defined for .material-icons\n  // (which is loaded separately so the order of CSS definitions is not guaranteed)\n  .mdc-fab .mdc-fab__icon {\n    @include icon-overrides_($query: $query);\n  }\n\n  .mdc-fab--exited {\n    @include exited_($query: $query);\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n\n  .mdc-fab {\n    @include fab-theme.container-color(secondary, $query: $query);\n    @include fab-theme.icon-size(24px, $query: $query);\n    @include fab-theme.ink-color(on-secondary, $query: $query);\n    @include fab-theme.shape-radius(fab-theme.$shape-radius, $query: $query);\n    @include elevation-theme.elevation(6, $query: $query);\n  }\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-fab {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: fab-theme.$ripple-target\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: fab-theme.$ripple-target\n    );\n    // Set `$opacity-map` to null to apply default opacity-map.\n    @include fab-theme.ripple-color(\n      on-secondary,\n      $opacity-map: null,\n      $query: $query\n    );\n\n    #{fab-theme.$ripple-target} {\n      @include ripple.target-common($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        overflow: hidden;\n      }\n    }\n    @include ripple-theme.behind-content(\n      fab-theme.$ripple-target,\n      $query: $query\n    );\n  }\n}\n\n$icon-enter-delay_: 90ms;\n$icon-enter-duration_: 180ms;\n\n@mixin base_($query: feature-targeting.all()) {\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    width: fab-theme.$height;\n    height: fab-theme.$height;\n    padding: 0;\n    border: none;\n    fill: currentColor;\n    text-decoration: none;\n    cursor: pointer;\n    user-select: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    &[hidden] {\n      display: none;\n    }\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: box-shadow elevation-theme.$transition-duration\n        elevation-theme.$transition-timing-function,\n      opacity 15ms linear 30ms,\n      animation-functions.enter(\n        transform,\n        $icon-enter-duration_ + $icon-enter-delay_\n      );\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  &:hover {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  @include ripple-theme.focus() {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  .mdc-fab__focus-ring {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n    }\n  }\n\n  @include ripple-theme.focus() {\n    .mdc-fab__focus-ring {\n      @include focus-ring.focus-ring($query: $query);\n    }\n  }\n\n  // Increase active state specificity due to ripple-theme.focus().\n  &:active,\n  &:focus:active {\n    @include elevation-theme.elevation(12, $query: $query);\n  }\n\n  &:active,\n  &:focus {\n    // TODO(acdvorak): Should this be paired with states and/or ripple? We don't want to disable outline\n    // (an accessibility/usability feature) unless we're confident that there is also a visual indication that the\n    // element has focus. If the client has customized the DOM in some unexpected way, and is certain that another\n    // element will receive focus instead, they can always override this property manually in their CSS.\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // This allows for using SVGs within them to align properly in all browsers.\n  // Can remove once: https://bugzilla.mozilla.org/show_bug.cgi?id=1294515 is resolved.\n\n  // postcss-bem-linter: ignore\n  > svg {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n    }\n  }\n  // stylelint-enable selector-max-type\n}\n\n@mixin mini_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: fab-theme.$mini-height;\n    height: fab-theme.$mini-height;\n  }\n}\n\n@mixin extended_($query: feature-targeting.all()) {\n  @include typography.typography(button, $query: $query);\n  @include extended-fab-theme.extended-shape-radius(\n    fab-theme.$shape-radius,\n    $query: $query\n  );\n  $extended-icon-padding: custom-properties.create(\n    fab-custom-properties.$extended-icon-padding,\n    extended-fab-theme.$extended-icon-padding\n  );\n  $extended-label-padding: custom-properties.create(\n    fab-custom-properties.$extended-label-padding,\n    extended-fab-theme.$extended-label-padding\n  );\n  @include extended-fab-theme.extended-padding(\n    extended-fab-theme.$extended-icon-padding,\n    extended-fab-theme.$extended-label-padding,\n    $query: $query\n  );\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: auto;\n    max-width: 100%;\n    height: extended-fab-theme.$extended-height;\n    // This allows the text within the extended fab to be centered for varying font sizes.\n    /* @alternate */\n    line-height: normal;\n  }\n}\n\n@mixin icon_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation-functions.enter(\n      transform,\n      $icon-enter-duration_,\n      $icon-enter-delay_\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    fill: currentColor;\n    will-change: transform;\n  }\n}\n\n@mixin label_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    justify-content: flex-start;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow-x: hidden;\n    overflow-y: visible;\n  }\n}\n\n@mixin icon-overrides_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n\n@mixin exited_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: scale(0);\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: opacity 15ms linear 150ms,\n      animation-functions.exit-permanent(transform, 180ms);\n  }\n\n  .mdc-fab__icon {\n    @include feature-targeting.targets($feat-structure) {\n      transform: scale(0);\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation-functions.exit-permanent(transform, 135ms);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mdc/circular-progress' as tokens-mdc-circular-progress;\n@use '@material/circular-progress/circular-progress-theme' as mdc-circular-progress-theme;\n\n@mixin base($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, base));\n  }\n  @else {\n    // Add default values for tokens not related to color, typography, or density.\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-circular-progress-theme.theme(\n          tokens-mdc-circular-progress.get-unthemable-tokens()\n      );\n    }\n  }\n}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    $mdc-circular-progress-color-tokens: tokens-mdc-circular-progress.get-color-tokens($theme);\n\n    @include sass-utils.current-selector-or-root() {\n      @include mdc-circular-progress-theme.theme($mdc-circular-progress-color-tokens);\n\n      .mat-accent {\n        $color: inspection.get-theme-color($theme, accent);\n        @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n      }\n\n      .mat-warn {\n        $color: inspection.get-theme-color($theme, warn);\n        @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n}\n\n@mixin density($theme) {\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include mdc-circular-progress-theme.theme(\n        map.get($tokens, tokens-mdc-circular-progress.$prefix));\n  }\n}\n","@use 'sass:color';\n@use 'sass:math';\n@use '@angular/cdk';\n\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/badge' as tokens-mat-badge;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n// TODO(crisbeto): some of these variables aren't used anymore and should be deleted.\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Internally there are some builds that throw an error if they can't figure out the values\n// of CSS variables during compliation. This flag temporarily enables fallbacks for these builds.\n// Eventually we should clean them up.\n$_emit-fallback-vars: true;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size, $font-size-token) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n\n    @if ($font-size-token) {\n      @include token-utils.use-tokens(tokens-mat-badge.$prefix,\n        tokens-mat-badge.get-token-slots()) {\n        @include token-utils.create-token-slot(font-size, $font-size-token, $_emit-fallback-vars);\n      }\n    }\n  }\n\n  &.mat-badge-above .mat-badge-content {\n    top: math.div(-$size, 2);\n  }\n\n  &.mat-badge-below .mat-badge-content {\n    bottom: math.div(-$size, 2);\n  }\n\n  &.mat-badge-before .mat-badge-content {\n    left: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-before .mat-badge-content {\n    left: auto;\n    right: -$size;\n  }\n\n  &.mat-badge-after .mat-badge-content {\n    right: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-after .mat-badge-content {\n    right: auto;\n    left: -$size;\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before .mat-badge-content {\n      left: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-before .mat-badge-content {\n      left: auto;\n      right: math.div(-$size, 2);\n    }\n\n    &.mat-badge-after .mat-badge-content {\n      right: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-after .mat-badge-content {\n      right: auto;\n      left: math.div(-$size, 2);\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n\n    // The badge should make sure its host is overflow visible so that the badge content\n    // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n    // style `overflow: hidden` so this requires extra specificity so that it does not\n    // depend on style load order.\n    &.mat-badge {\n      overflow: visible;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, background-color);\n      @include token-utils.create-token-slot(color, text-color);\n      @include token-utils.create-token-slot(font-family, text-font, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-size, text-size, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-weight, text-weight, $_emit-fallback-vars);\n    }\n\n    @include cdk.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-disabled .mat-badge-content {\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, disabled-state-background-color);\n      @include token-utils.create-token-slot(color, disabled-state-text-color);\n    }\n  }\n\n  .mat-badge-hidden .mat-badge-content {\n    display: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size, small-size-text-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size, null);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size, large-size-text-size);\n  }\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-color-tokens($theme));\n  }\n\n  .mat-badge-accent {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($theme, accent));\n  }\n\n  .mat-badge-warn {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($theme, warn));\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use '../core/tokens/m2/mat/datepicker' as tokens-mat-datepicker;\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n@use '../core/typography/typography';\n@use '../button/icon-button-theme';\n\n// TODO(crisbeto): these variables aren't used anymore and should be removed.\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _calendar-color($theme, $palette-name) {\n  $palette-color: inspection.get-theme-color($theme, $palette-name);\n  $range-color: tokens-mat-datepicker.private-get-range-background-color($palette-color);\n  $range-tokens: tokens-mat-datepicker.get-range-color-tokens($range-color);\n  $calendar-tokens:\n    tokens-mat-datepicker.private-get-calendar-color-palette-color-tokens($theme, $palette-name);\n\n  @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n    map.merge($calendar-tokens, $range-tokens));\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-color-tokens($theme));\n  }\n\n  .mat-datepicker-content {\n    &.mat-accent {\n      @include _calendar-color($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _calendar-color($theme, warn);\n    }\n  }\n\n  .mat-datepicker-toggle-active {\n    &.mat-accent {\n      $accent-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($theme, accent);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $accent-tokens);\n    }\n\n    &.mat-warn {\n      $warn-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($theme, warn);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $warn-tokens);\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-typography-tokens($theme));\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: tokens-mat-datepicker.$private-default-comparison-color,\n  $overlap-color: tokens-mat-datepicker.$private-default-overlap-color,\n  $overlap-selected-color:\n    tokens-mat-datepicker.private-get-default-overlap-selected-color($overlap-color)) {\n  $tokens: tokens-mat-datepicker.get-range-color-tokens(\n    $range-color: $range-color,\n    $comparison-color: $comparison-color,\n    $overlap-color: $overlap-color,\n    $overlap-selected-color: $overlap-selected-color,\n  );\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $tokens);\n  }\n}\n\n@mixin density($theme) {\n  // TODO(crisbeto): move this into the structural styles\n  // once the icon button density is switched to tokens.\n\n  // Regardless of the user-passed density, we want the calendar\n  // previous/next buttons to remain at density -2\n  .mat-calendar-controls {\n    @include icon-button-theme.density(-2);\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use '@material/touch-target' as mdc-touch-target;\n\n@use '../core/tokens/token-utils';\n@use '../core/style/layout-common';\n@use '../core/mdc-helpers/mdc-helpers';\n\n// Adds styles necessary to provide stateful interactions with the button. This includes providing\n// content for the state container's ::before and ::after so that they can be given a background\n// color and opacity for states like hover, active, and focus. Additionally, adds styles to the\n// ripple and state container so that they fill the button, match the border radius, and avoid\n// pointer events.\n@mixin mat-private-button-interactive() {\n  -webkit-tap-highlight-color: transparent;\n\n  // The ripple container should match the bounds of the entire button.\n  .mat-mdc-button-ripple,\n  .mat-mdc-button-persistent-ripple,\n  .mat-mdc-button-persistent-ripple::before {\n    @include layout-common.fill;\n\n    // Disable pointer events for the ripple container and state overlay because the container\n    // will overlay the user content and we don't want to disable mouse events on the user content.\n    // Pointer events can be safely disabled because the ripple trigger element is the host element.\n    pointer-events: none;\n\n    // Inherit the border radius from the parent so that state overlay and ripples don't exceed the\n    // parent button boundaries. Note that an inherited border radius does not work properly if\n    // the actual button element does have a border because it causes the inner content to be\n    // smaller. We have special logic for stroked buttons to handle this scenario.\n    border-radius: inherit;\n  }\n\n  // This style used to be applied by the MatRipple\n  // directive, which is no longer attached to this element.\n  .mat-mdc-button-ripple {\n    overflow: hidden;\n  }\n\n  // We use ::before so that we can reuse some of MDC's theming.\n  .mat-mdc-button-persistent-ripple::before {\n    content: '';\n    opacity: 0;\n  }\n\n  // The content should appear over the state and ripple layers, otherwise they may adversely affect\n  // the accessibility of the text content.\n  .mdc-button__label {\n    z-index: 1;\n  }\n\n  // The focus indicator should match the bounds of the entire button.\n  .mat-mdc-focus-indicator {\n    @include layout-common.fill();\n  }\n\n  &:focus .mat-mdc-focus-indicator::before {\n    content: '';\n  }\n}\n\n@mixin mat-private-button-ripple($prefix, $slots) {\n  @include token-utils.use-tokens($prefix, $slots) {\n    .mat-ripple-element {\n      @include token-utils.create-token-slot(background-color, ripple-color);\n    }\n\n    .mat-mdc-button-persistent-ripple::before {\n      @include token-utils.create-token-slot(background-color, state-layer-color);\n    }\n\n    &:hover .mat-mdc-button-persistent-ripple::before {\n      @include token-utils.create-token-slot(opacity, hover-state-layer-opacity);\n    }\n\n    &.cdk-program-focused,\n    &.cdk-keyboard-focused {\n      .mat-mdc-button-persistent-ripple::before {\n        @include token-utils.create-token-slot(opacity, focus-state-layer-opacity);\n      }\n    }\n\n    &:active .mat-mdc-button-persistent-ripple::before {\n      @include token-utils.create-token-slot(opacity, pressed-state-layer-opacity);\n    }\n  }\n}\n\n// MDC's disabled buttons define a default cursor with pointer-events none. However, they select\n// :disabled for this, which does not affect anchor tags.\n// TODO(andrewseguin): Discuss with the MDC team about a mixin we can call for applying this style,\n// and note that having pointer-events may have unintended side-effects, e.g. allowing the user\n// to click the target underneath the button.\n@mixin mat-private-button-disabled() {\n  &[disabled] {\n    cursor: default;\n    pointer-events: none;\n    @content;\n  }\n}\n\n// Hides the touch target on lower densities.\n@mixin mat-private-button-touch-target-density($scale) {\n  @include mdc-helpers.if-touch-targets-unsupported($scale) {\n    .mat-mdc-button-touch-target {\n      display: none;\n    }\n  }\n}\n\n@mixin mat-private-button-touch-target($is-square) {\n  // Element used to ensure that the button has a touch target that meets the required minimum.\n  // Note that we use this, instead of MDC's built-in `mdc-button--touch` class, because the MDC\n  // class is implemented as `margin-top: 6px; margin-bottom: 6px` on the host element which\n  // goes against our rule of not having margins on the host node. Furthermore, having the margin on\n  // the button itself would require us to wrap it in another div. See:\n  // https://github.com/material-components/material-components-web/tree/master/packages/mdc-button#making-buttons-accessible\n  .mat-mdc-button-touch-target {\n    @include mdc-touch-target.touch-target(\n      $set-width: $is-square,\n      $query: mdc-helpers.$mdc-base-styles-query);\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/tokens/m2/mat/icon' as tokens-mat-icon;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-colors($theme, $palette-name) {\n  $color: inspection.get-theme-color($theme, $palette-name, text);\n  $tokens: tokens-mat-icon.private-get-icon-color-tokens($color);\n  @include token-utils.create-token-values(tokens-mat-icon.$prefix, $tokens);\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-icon.$prefix,\n      tokens-mat-icon.get-color-tokens($theme));\n  }\n\n  .mat-icon {\n    &.mat-primary {\n      @include _palette-colors($theme, primary);\n    }\n\n    &.mat-accent {\n      @include _palette-colors($theme, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-colors($theme, warn);\n    }\n  }\n}\n\n@mixin typography($theme) {}\n\n@mixin density($theme) {}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n\n","@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/stepper' as tokens-mat-stepper;\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-color-tokens($theme));\n\n    .mat-step-header.mat-accent {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens($theme, accent));\n    }\n\n    .mat-step-header.mat-warn {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens($theme, warn));\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-typography-tokens($theme));\n  }\n}\n\n@mixin density($theme) {\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-density-tokens($theme));\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    @include base($theme);\n    @if inspection.theme-has($theme, color) {\n      @include color($theme);\n    }\n    @if inspection.theme-has($theme, density) {\n      @include density($theme);\n    }\n    @if inspection.theme-has($theme, typography) {\n      @include typography($theme);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/theming/inspection';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/toolbar' as tokens-mat-toolbar;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-styles($theme, $palette-name) {\n  @include token-utils.create-token-values(\n    tokens-mat-toolbar.$prefix,\n    tokens-mat-toolbar.private-get-color-palette-color-tokens(\n      $background-color: inspection.get-theme-color($theme, $palette-name),\n      $text-color: inspection.get-theme-color($theme, $palette-name, default-contrast)\n    )\n  );\n}\n\n@mixin base($theme) {}\n\n@mixin color($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, color));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-color-tokens($theme));\n    }\n\n    .mat-toolbar {\n      &.mat-primary {\n        @include _palette-styles($theme, primary);\n      }\n\n      &.mat-accent {\n        @include _palette-styles($theme, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($theme, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, typography));\n  }\n  @else {\n    // TODO(mmalerba): Stop calling this and resolve resulting screen diffs.\n    $theme: inspection.private-get-typography-back-compat-theme($theme);\n\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-typography-tokens($theme));\n    }\n  }\n}\n\n@mixin density($theme) {\n  @if inspection.get-theme-version($theme) == 1 {\n    @include _theme-from-tokens(inspection.get-theme-tokens($theme, density));\n  }\n  @else {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n        tokens-mat-toolbar.get-density-tokens($theme));\n    }\n  }\n}\n\n@mixin theme($theme) {\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    @if inspection.get-theme-version($theme) == 1 {\n      @include _theme-from-tokens(inspection.get-theme-tokens($theme));\n    }\n    @else {\n      @include base($theme);\n      @if inspection.theme-has($theme, color) {\n        @include color($theme);\n      }\n      @if inspection.theme-has($theme, density) {\n        @include density($theme);\n      }\n      @if inspection.theme-has($theme, typography) {\n        @include typography($theme);\n      }\n    }\n  }\n}\n\n@mixin _theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      map.get($tokens, tokens-mat-toolbar.$prefix));\n  }\n}\n","@use '@angular/material' as mat;\n// @use '@angular/material' as legacy-tooltip-theme;\n// @use '../../../dist/ngx-editorjs/ngx-editorjs';\n\n@use 'sass:map';\n@use './app/pages/home/home-theme';\n@use './app/components/navbar/navbar-theme';\n\n@use '@tmdjr/ngx-editorjs-client' as ngx-editorjs-client;\n\n@use '@tmdjr/ngx-editorjs' as ngx-editorjs;\n@use '@tmdjr/ngx-editorjs-blockquotes-block' as ngx-editorjs-blockquotes-block;\n@use '@tmdjr/ngx-editorjs-code-block' as ngx-editorjs-code-block;\n@use '@tmdjr/ngx-editorjs-mermaid-block' as ngx-editorjs-mermaid-block;\n\n// @include test-lib-theme($theme);\n// @import '@tmdjr/ngx-editor/ngx-editor-theme';\n// @include test-lib-theme($theme);\n\n// Styles for the docs app that are based on the current theme.\n@mixin theme($theme) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n  $next-theme: mat.define-palette(mat.$red-palette);\n  \n  ::-webkit-scrollbar-thumb {\n    background: rgba(mat.get-color-from-palette($primary, default), .45);\n  }\n\n  .app-background {\n    background: mat.get-color-from-palette($background, background);\n  }\n\n  .primary-header {\n    background: mat.get-color-from-palette($primary);\n\n    h1 {\n      color: mat.get-color-from-palette($primary, default-contrast);\n    }\n  }\n\n  @include home-theme.theme($theme);\n  @include navbar-theme.theme($theme);\n  \n  @include ngx-editorjs.theme($theme);\n  @include ngx-editorjs-blockquotes-block.theme($theme);\n  @include ngx-editorjs-code-block.theme($theme);\n  @include ngx-editorjs-mermaid-block.theme($theme);\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n\n  app-home {\n    color: mat.get-color-from-palette($foreground, text);\n\n    .header-background {\n      background: mat.get-color-from-palette($primary);\n    }\n\n    .header-headline {\n      color: mat.get-color-from-palette($primary, default-contrast);\n    }\n\n    .header-start {\n      color: mat.get-color-from-palette($primary);\n    }\n\n    .home-row {\n      color: mat.get-color-from-palette($foreground, secondary-text);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n\n  navbar {\n    color: mat.get-color-from-palette($primary, default-contrast);\n\n    .navbar-header {\n      background: mat.get-color-from-palette($primary);\n\n      & a:hover, & a:focus {\n        background: rgba(0, 0, 0, 0.4);\n      }\n\n      .navbar-menu-item-selected {\n        background: rgba(0, 0, 0, 0.2);\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '@angular/material' as mat;\n\n@mixin theme($theme) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  a {\n    color: mat.get-color-from-palette($primary, if($is-dark-theme, 400, 500));\n  }\n\n  .inline-code-example {\n    font-weight: 400;\n    background-color: mat.get-color-from-palette($primary, if($is-dark-theme, 200, 100));\n    padding: 4px;\n    border-radius: 4px;\n\n    a {\n      color: mat.get-color-from-palette($primary, 900);\n    }\n  }\n}","@use '@angular/material' as mat;\n\n@use 'sass:map';\n\n@mixin theme($theme) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  .block-list-container {\n    color: map.get($foreground, text);\n    background: mat.get-color-from-palette($background, card);\n  }\n\n  .block-list-item, .block-option-list-item, .toolbar-buttons {\n    &:hover, &:focus {\n      background: mat.get-color-from-palette($accent, if($is-dark-theme, 400, 100));\n    }\n  }\n\n  .toolbar-buttons {\n    background: mat.get-color-from-palette($background, card);\n    // color: mat.get-color-from-palette($primary, if($is-dark-theme, 300, 100));\n    // background-color: if($is-dark-theme, #323, #323232);\n    // &:hover, &:focus {\n      // color: map.get($foreground, secondary-text);\n      // background: mat.get-color-from-palette($primary, if($is-dark-theme, 600, 100));\n    // }\n  }\n  \n  // .block-option-list-item {\n    // color: map.get($foreground, text);\n    // background: mat.get-color-from-palette($primary, if($is-dark-theme, 600, 100));\n    // background: mat.get-color-from-palette($background, secondary);\n    \n    // &:hover, &:focus {\n      // color: if($is-dark-theme, #323, #323232);\n      // background: mat.get-color-from-palette($background, secondary);\n    // }\n  // }\n}\n","@use '@angular/material' as mat;\n@use 'sass:map';\n\n@mixin theme($theme) {\n  $accent: map.get($theme, accent);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  blockquote {\n    // border-left: 5px solid #ee6e73;\n    border-left: 5px solid mat.get-color-from-palette($accent, if($is-dark-theme, 400, 100));\n  }\n}","@use '@angular/material' as mat;\n@use 'sass:color';\n@use 'sass:map';\n\n@mixin theme($theme) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n  $is-dark-theme: map.get($theme, is-dark);\n\n  // Override Mermaid SVG styles\n  .mermaid {\n    // Change the fill color of nodes\n    rect {\n      fill: mat.get-color-from-palette($primary, 100) !important;\n    }\n\n    // Change the text color inside nodes\n    text {\n      fill: map.get($foreground, text) !important;\n      &.sequenceNumber {\n        fill: mat.get-color-from-palette($accent, default) !important;\n      }\n      &.loopText>tspan, &.labelText {\n        fill: mat.get-color-from-palette($warn, 300) !important;\n      }\n    }\n\n    // Change the color of lines\n    path, line, polyline {\n      stroke: mat.get-color-from-palette($accent, default) !important;\n    }\n\n    // Change the color of arrows\n    polygon, marker > path {\n      fill: mat.get-color-from-palette($accent, default) !important;\n    }\n  }\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]}