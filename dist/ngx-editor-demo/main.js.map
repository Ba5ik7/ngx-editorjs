{"version":3,"file":"main.js","mappings":"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","sources":["./projects/ngx-editor-demo/src/app/app-routing.module.ts","./projects/ngx-editor-demo/src/app/app.component.ts","./projects/ngx-editor-demo/src/app/app.component.html","./projects/ngx-editor-demo/src/app/app.module.ts","./projects/ngx-editor-demo/src/app/components/navbar/navbar.component.ts","./projects/ngx-editor-demo/src/app/components/navbar/navbar.component.html","./projects/ngx-editor-demo/src/app/components/navbar/navbar.module.ts","./projects/ngx-editor-demo/src/app/components/theme-picker/theme-picker.component.ts","./projects/ngx-editor-demo/src/app/components/theme-picker/theme-picker.component.html","./projects/ngx-editor-demo/src/app/components/theme-picker/theme-picker.module.ts","./projects/ngx-editor-demo/src/app/components/theme-picker/theme-picker.service.ts","./projects/ngx-editor-demo/src/app/services/webstorage/webstorage.service.ts","./projects/ngx-editor-demo/src/environments/environment.ts","./projects/ngx-editor-demo/src/main.ts","./projects/ngx-editorjs-blockquotes-block/src/lib/ngx-editorjs-blockquotes-block.service.ts","./projects/ngx-editorjs-blockquotes-block/src/lib/ngx-editorjs-blockquotes-client-block.component.ts","./projects/ngx-editorjs-blockquotes-block/src/lib/ngx-editorjs-blockquotes-block.component.ts","./projects/ngx-editorjs-blockquotes-block/src/lib/ngx-editorjs-blockquotes-block.mediator.ts","./projects/ngx-editorjs-blockquotes-block/src/lib/ngx-editorjs-blockquotes-block.module.ts","./projects/ngx-editorjs-blockquotes-block/src/public-api.ts","./projects/ngx-editorjs-blockquotes-block/src/tmdjr-ngx-editorjs-blockquotes-block.ts","./projects/ngx-editorjs-client/src/lib/ngx-editorjs-client.service.ts","./projects/ngx-editorjs-client/src/lib/components/ngx-editorjs-header-client-block/ngx-editorjs-header-client-block.component.ts","./projects/ngx-editorjs-client/src/lib/ngx-editorjs-client.component.ts","./projects/ngx-editorjs-client/src/lib/ngx-editorjs-client.module.ts","./projects/ngx-editorjs-client/src/public-api.ts","./projects/ngx-editorjs-client/src/tmdjr-ngx-editorjs-client.ts","./projects/ngx-editorjs-code-block/src/lib/ngx-editorjs-code-block.service.ts","./projects/ngx-editorjs-code-block/src/lib/ngx-editorjs-code-client-block.component.ts","./projects/ngx-editorjs-code-block/src/lib/ngx-editorjs-code-block.component.ts","./projects/ngx-editorjs-code-block/src/lib/ngx-editorjs-code-block.mediator.ts","./projects/ngx-editorjs-code-block/src/lib/ngx-editorjs-code-block.module.ts","./projects/ngx-editorjs-code-block/src/public-api.ts","./projects/ngx-editorjs-code-block/src/tmdjr-ngx-editorjs-code-block.ts","./projects/ngx-editorjs-image-block/src/lib/ngx-editorjs-image-block.service.ts","./projects/ngx-editorjs-image-block/src/lib/ngx-editorjs-image-client-block.component.ts","./projects/ngx-editorjs-image-block/src/lib/image-config/image-config.component.ts","./projects/ngx-editorjs-image-block/src/lib/ngx-editorjs-image-block.component.ts","./projects/ngx-editorjs-image-block/src/lib/ngx-editorjs-image-block.mediator.ts","./projects/ngx-editorjs-image-block/src/lib/ngx-editorjs-image-block.module.ts","./projects/ngx-editorjs-image-block/src/public-api.ts","./projects/ngx-editorjs-image-block/src/tmdjr-ngx-editorjs-image-block.ts","./projects/ngx-editorjs-mermaid-block/src/lib/ngx-editorjs-mermaid-block.service.ts","./projects/ngx-editorjs-mermaid-block/src/lib/image-config/mermaid-config.component.ts","./projects/ngx-editorjs-mermaid-block/src/lib/ngx-editorjs-mermaid-block.component.ts","./projects/ngx-editorjs-mermaid-block/src/lib/ngx-editorjs-mermaid-block.mediator.ts","./projects/ngx-editorjs-mermaid-block/src/public-api.ts","./projects/ngx-editorjs-mermaid-block/src/tmdjr-ngx-editorjs-mermaid-block.ts","./projects/ngx-editorjs-paragraph-block/src/lib/ngx-editorjs-paragraph-block.service.ts","./projects/ngx-editorjs-paragraph-block/src/lib/ngx-editorjs-paragraph-block.component.ts","./projects/ngx-editorjs-paragraph-block/src/lib/ngx-editorjs-paragraph-client-block.component.ts","./projects/ngx-editorjs-paragraph-block/src/lib/ngx-editorjs-paragraph-block.mediator.ts","./projects/ngx-editorjs-paragraph-block/src/lib/ngx-editorjs-paragraph-block.module.ts","./projects/ngx-editorjs-paragraph-block/src/public-api.ts","./projects/ngx-editorjs-paragraph-block/src/tmdjr-ngx-editorjs-paragraph-block.ts","./projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.service.ts","./projects/ngx-editorjs-quiz-block/src/lib/quiz-config/quiz-config.component.ts","./projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.component.ts","./projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-client-block.component.ts","./projects/ngx-editorjs-quiz-block/src/lib/ngx-editorjs-quiz-block.mediator.ts","./projects/ngx-editorjs-quiz-block/src/public-api.ts","./projects/ngx-editorjs-quiz-block/src/tmdjr-ngx-editorjs-quiz-block.ts","./projects/ngx-editorjs/src/lib/ngx-editorjs.service.ts","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/searchable-block-list/searchable-block-list.component.html","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/searchable-block-list/searchable-block-list.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/block-options-list/block-options-list.component.html","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/block-options-list/block-options-list.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/toolbar-block.component.html","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/toolbar-block.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/inline-toolbar-block/inline-toolbar-block.component.html","./projects/ngx-editorjs/src/lib/components/blocks/inline-toolbar-block/inline-toolbar-block.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/base-block/base-block.component.ts","./projects/ngx-editorjs/src/lib/directives/autofocus/autofocus.directive.ts","./projects/ngx-editorjs/src/lib/components/blocks/ngx-editorjs-header-block/ngx-editorjs-header-block.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/ngx-editorjs-header-block/ngx-editorjs-header-block.mediator.ts","./projects/ngx-editorjs/src/lib/ngx-editorjs.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/ngx-editorjs-header-block/ngx-editorjs-header-block.module.ts","./projects/ngx-editorjs/src/lib/directives/autofocus/autofocus.module.ts","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/toolbar-block.module.ts","./projects/ngx-editorjs/src/lib/components/blocks/inline-toolbar-block/inline-toolbar-block.mediator.ts","./projects/ngx-editorjs/src/lib/components/blocks/inline-toolbar-block/inline-toolbar-block.module.ts","./projects/ngx-editorjs/src/lib/ngx-editorjs.module.ts","./projects/ngx-editorjs/src/public-api.ts","./projects/ngx-editorjs/src/tmdjr-ngx-editorjs.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { \n    path: '',\n    pathMatch: 'full',\n    loadChildren: () => import('./pages/home/home.module').then(m => m.HomeModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'demo-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'demo';\n}\n","<navbar class=\"mat-elevation-z6\"></navbar>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { NavbarModule } from './components/navbar/navbar.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NGX_EDITORJS_OPTIONS } from '@tmdjr/ngx-editorjs';\nimport { NGX_EDITORJS_CLIENT_OPTIONS } from '@tmdjr/ngx-editorjs-client';\n\nimport { NgxEditorjsParagraphBlockMediator, NgxEditorjsParagraphClientBlockComponent } from '@tmdjr/ngx-editorjs-paragraph-block';\nimport { NgxEditorjsBlockquotesBlockMediator, NgxEditorjsBlockquotesClientBlockComponent } from '@tmdjr/ngx-editorjs-blockquotes-block';\nimport { NgxEditorjsImageBlockMediator, NgxEditorjsImageClientBlockComponent } from '@tmdjr/ngx-editorjs-image-block';\nimport { NgxEditorjsCodeBlockMediator, NgxEditorjsCodeClientBlockComponent } from '@tmdjr/ngx-editorjs-code-block';\nimport { NgxEditorjsQuizBlockMediator, NgxEditorjsQuizClientBlockComponent } from '@tmdjr/ngx-editorjs-quiz-block';\nimport { NgxEditorjsMermaidBlockMediator } from '@tmdjr/ngx-editorjs-mermaid-block';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatIconModule,\n    NavbarModule\n  ],\n  providers: [\n    {\n      provide: NGX_EDITORJS_OPTIONS,\n      useValue: {\n        blocks: [\n          {\n            name: 'Paragraph',\n            component: NgxEditorjsParagraphBlockMediator,\n            componentInstanceName: 'NgxEditorjsParagraphBlockMediator'\n          },\n          {\n            name: 'Blockquotes',\n            component: NgxEditorjsBlockquotesBlockMediator,\n            componentInstanceName: 'NgxEditorjsBlockquotesBlockMediator'\n          },\n          {\n            name: 'Image',\n            component: NgxEditorjsImageBlockMediator,\n            componentInstanceName: 'NgxEditorjsImageBlockMediator'\n          },\n          {\n            name: 'Code',\n            component: NgxEditorjsCodeBlockMediator,\n            componentInstanceName: 'NgxEditorjsCodeBlockMediator'\n          },\n          {\n            name: 'Quiz',\n            component: NgxEditorjsQuizBlockMediator,\n            componentInstanceName: 'NgxEditorjsQuizBlockMediator'\n          },\n          {\n            name: 'Mermaid',\n            component: NgxEditorjsMermaidBlockMediator,\n            componentInstanceName: 'NgxEditorjsMermaidBlockMediator'\n          }\n        ]\n      }\n    },\n    {\n      provide: NGX_EDITORJS_CLIENT_OPTIONS,\n      useValue: {\n        blocks: [\n          {\n            name: 'Paragraph',\n            component: NgxEditorjsParagraphClientBlockComponent,\n            componentInstanceName: 'NgxEditorjsParagraphBlockMediator'\n          },\n          {\n            name: 'Blockquotes',\n            component: NgxEditorjsBlockquotesClientBlockComponent,\n            componentInstanceName: 'NgxEditorjsBlockquotesBlockMediator'\n          },\n          {\n            name: 'Image',\n            component: NgxEditorjsImageClientBlockComponent,\n            componentInstanceName: 'NgxEditorjsImageBlockMediator'\n          },\n          {\n            name: 'Code',\n            component: NgxEditorjsCodeClientBlockComponent,\n            componentInstanceName: 'NgxEditorjsCodeBlockMediator'\n          },\n          {\n            name: 'Quiz',\n            component: NgxEditorjsQuizClientBlockComponent,\n            componentInstanceName: 'NgxEditorjsQuizBlockMediator'\n          }\n        ]\n      }\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NavbarComponent {\n\n  constructor() { }\n\n}\n","<nav class=\"navbar-header\">\n  <a mat-button routerLink=\"/\">\n    <mat-icon class=\"workshop-logo\">format_size</mat-icon>\n    <span>Ngx EditorJs</span>\n  </a>\n  <div class=\"flex-spacer\"></div>\n  <theme-picker></theme-picker>\n</nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar.component';\nimport { ThemePickerModule } from '../theme-picker/theme-picker.module';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ThemePickerModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  declarations: [NavbarComponent],\n  exports: [NavbarComponent]\n})\nexport class NavbarModule { }\n","import { Component, OnInit, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemePickerService } from './theme-picker.service';\n\n@Component({\n  selector: 'theme-picker',\n  templateUrl: './theme-picker.component.html',\n  styleUrls: ['./theme-picker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ThemePickerComponent implements OnInit {\n\n  currentTheme: string | undefined;\n  themes: Map<string, string> = new Map([\n    ['deeppurple-amber', 'Deep Purple & Amber'],\n    ['indigo-pink', 'Indigo & Pink'],\n    ['pink-bluegrey', 'Pink & Blue-grey'],\n    ['purple-green', 'Purple & Green']\n  ]);\n\n  constructor(\n      private themePickerService: ThemePickerService,\n      iconRegistry: MatIconRegistry,\n      sanitizer: DomSanitizer\n  ) {\n    const themeExampleIconURL = sanitizer.bypassSecurityTrustResourceUrl(ThemePickerService.THEME_EXAMPLE_ICON);\n    iconRegistry.addSvgIcon('theme-example', themeExampleIconURL);\n\n    const themeName = themePickerService.getStoredThemeName();\n    this.selectTheme(themeName.value !== ThemePickerService.NOT_FOUND ? themeName.value : ThemePickerService.DEFAULT_THEME);\n  }\n\n  ngOnInit(): void { }\n\n  selectTheme(theme: string): void {\n    this.themePickerService.setStyle('theme', `${theme}.css`);\n    this.themePickerService.storeTheme(theme);\n    this.currentTheme = theme;\n  }\n\n}\n","<button mat-icon-button\n        [mat-menu-trigger-for]=\"themeMenu\"\n        matTooltip=\"Select a theme for the documentation\">\n  <mat-icon>format_color_fill</mat-icon>\n</button>\n\n<mat-menu #themeMenu=\"matMenu\" xPosition=\"before\" class=\"theme-picker-menu\">\n  <button mat-menu-item *ngFor=\"let theme of themes | keyvalue\" (click)=\"selectTheme(theme.key)\">\n    <mat-icon \n      [ngClass]=\"{'docs-theme-selected-icon': currentTheme === theme.key}\"\n      [color]=\"currentTheme === theme.key ? 'accent' : undefined\">\n      {{currentTheme === theme.key ? 'radio_button_checked' : 'radio_button_unchecked'}}\n    </mat-icon>\n    <span>{{theme.value}}</span>\n    <mat-icon [class]=\"'theme-example-icon ' + theme.key\" svgIcon=\"theme-example\"></mat-icon>\n  </button>\n</mat-menu>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatLegacyMenuModule as MatMenuModule } from '@angular/material/legacy-menu';\nimport { MatLegacyTooltipModule as MatTooltipModule } from '@angular/material/legacy-tooltip';\n\n\nimport { ThemePickerComponent } from './theme-picker.component';\nimport { ThemePickerService } from './theme-picker.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTooltipModule\n  ],\n  declarations: [ThemePickerComponent],\n  exports: [ThemePickerComponent],\n  providers: [ThemePickerService]\n})\nexport class ThemePickerModule { }\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { LocalStorage, WebstorageService } from '../../services/webstorage/webstorage.service';\n\n@Injectable()\nexport class ThemePickerService {\n  static THEME_EXAMPLE_ICON = 'assets/img/theme-demo-icon.svg';\n  static DEFAULT_THEME = 'indigo-pink';\n  static STRORAGE_KEY: string = 'theme-picker-current-name';\n  static NOT_FOUND: string = 'NOT_FOUND';\n\n  constructor(@Inject(DOCUMENT) private document: Document, private webstorageService: WebstorageService ) { }\n\n  storeTheme(theme: string): void {\n    this.webstorageService.setLocalstorageItem({ key: ThemePickerService.STRORAGE_KEY, value: theme });\n  }\n  \n  getStoredThemeName(): LocalStorage {\n    return this.webstorageService.getLocalstorageItem(ThemePickerService.STRORAGE_KEY);\n  }\n\n  setStyle(key: string, href: string): void {\n    this.getLinkElementForKey(key).setAttribute('href', href);\n  }\n\n  removeStyle(key: string): void {\n    const existingLinkElement = this.getExistingLinkElementByKey(key);\n    if (existingLinkElement) {\n      this.document.head.removeChild(existingLinkElement);\n    }\n  }\n\n  private getLinkElementForKey(key: string): HTMLLinkElement {\n    return this.getExistingLinkElementByKey(key) ?? this.createLinkElementWithKey(key);\n  }\n  \n  private getExistingLinkElementByKey(key: string): HTMLLinkElement | null {\n    return this.document.head.querySelector(`link[rel=\"stylesheet\"].style-manager-${key}`);\n  }\n  \n  private createLinkElementWithKey(key: string): HTMLLinkElement {\n    const linkEl = this.document.createElement('link');\n    linkEl.setAttribute('rel', 'stylesheet');\n    linkEl.classList.add(`style-manager-${key}`);\n    this.document.head.appendChild(linkEl);\n    return linkEl;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { empty, Observable, Subject } from 'rxjs';\n\n\nexport interface LocalStorage {\n  key: string,\n  value: any\n}\n\nexport interface SessionStorage {\n  key: string,\n  value: any\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebstorageService {\n\n  LOCAL_STORAGE_ITEM_NOT_FOUND_ERROR = 'LOCAL_STORAGE_ITEM_NOT_FOUND_ERROR';\n  LOCAL_STORAGE_MAX_SIZE_REACHED = 'LOCAL_STORAGE_MAX_SIZE_REACHED';\n\n  localStorageValueChangeSub: Subject<LocalStorage> = new Subject();\n  localStorageValueChange$: Observable<LocalStorage> = this.localStorageValueChangeSub.asObservable();\n\n  getLocalStorageSize(): number {\n    return new Blob(Object.values(localStorage)).size;\n  }\n\n  getLocalstorageItem(key: string): LocalStorage {\n    const item = { key, value: localStorage.getItem(key) ?? this.LOCAL_STORAGE_ITEM_NOT_FOUND_ERROR };\n    this.localStorageValueChangeSub.next(item);\n    return item;\n  }\n  \n  setLocalstorageItem({ key, value }: LocalStorage): void {\n    localStorage.setItem(key, value);\n    this.localStorageValueChangeSub.next({ key, value });\n  }\n  \n  removeLocalstorageItem(key: string): void {\n    const item = { key, value: localStorage.getItem(key) ?? this.LOCAL_STORAGE_ITEM_NOT_FOUND_ERROR };\n    item.value !== this.LOCAL_STORAGE_ITEM_NOT_FOUND_ERROR && localStorage.removeItem(key); \n    this.localStorageValueChangeSub.next(item);\n  }\n\n  clearLocalstorage(): void {\n    localStorage.clear();\n  }\n\n  SESSION_STORAGE_ITEM_NOT_FOUND_ERROR = 'SESSION_STORAGE_ITEM_NOT_FOUND_ERROR';\n  SESSIONSTORAGE_MAX_SIZE_REACHED = 'SESSIONSTORAGE_MAX_SIZE_REACHED';\n\n  sessionStorageValueChangeSub: Subject<SessionStorage> = new Subject();\n  sessionStorageValueChange$: Observable<SessionStorage> = this.sessionStorageValueChangeSub.asObservable();\n\n  getSessionStorageSize(): number {\n    return new Blob(Object.values(sessionStorage)).size;\n  }\n\n  getSessionStorageItem(key: string): SessionStorage {\n    const item = { key, value: sessionStorage.getItem(key) ?? this.SESSION_STORAGE_ITEM_NOT_FOUND_ERROR };\n    this.sessionStorageValueChangeSub.next(item);\n    return item;\n  }\n  \n  setSessionStorageItem({ key, value }: SessionStorage): void {\n    sessionStorage.setItem(key, value);\n    this.sessionStorageValueChangeSub.next({ key, value });\n  }\n  \n  removeSessionStorageItem(key: string): void {\n    const item = { key, value: sessionStorage.getItem(key) ?? this.SESSION_STORAGE_ITEM_NOT_FOUND_ERROR };\n    item.value !== this.SESSION_STORAGE_ITEM_NOT_FOUND_ERROR && sessionStorage.removeItem(key); \n    this.sessionStorageValueChangeSub.next(item);\n  }\n\n  clearSessionStorage(): void {\n    sessionStorage.clear();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/hint/javascript-hint';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorBlockquotesBlockService {\n\n  constructor() { }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-blockquotes-client-block',\n  template: `\n    <blockquote class=\"flex-spacer\" [innerHTML]=\"value\"></blockquote>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; }\n    blockquote {\n      margin: 20px 0;\n      padding-left: 1.5rem;\n    }\n  `],\n  imports: []\n})\nexport class NgxEditorjsBlockquotesClientBlockComponent {\n  @Input() value = '';\n}\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { BaseBlockComponent, AutofocusDirective } from '@tmdjr/ngx-editorjs';\n\n@Component({\n  standalone: true,\n  imports: [\n    AutofocusDirective\n  ],\n  selector: 'ngx-editorjs-blockquotes-block',\n  template: `\n    <blockquote class=\"flex-spacer\" #blockquotes contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></blockquote>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; }\n    blockquote {\n      margin: 20px 0;\n      padding-left: 1.5rem;\n    }\n  `]\n})\nexport class NgxEditorjsBlockquotesBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('blockquotes') element!: ElementRef;\n\n  override ngOnInit() {\n    super.ngOnInit();\n  }\n\n  ngAfterViewInit(): void {\n    super.viewChild = this.element;\n  }\n\n  override onMouseEnter(event: Event) {\n    super.onMouseEnter(event);\n  }\n}\n","import { Component, Input, ViewRef } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsBlockquotesBlockComponent } from './ngx-editorjs-blockquotes-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-meditator-blockquotes-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-blockquotes-block [blockId]=\"blockId\" [formControlName]=\"formControlName\"></ngx-editorjs-blockquotes-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsBlockquotesBlockComponent\n  ],\n})\nexport class NgxEditorjsBlockquotesBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n}\n","import { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ]\n})\nexport class NgxEditorBlockquotesBlockModule { }\n","/*\n * Public API Surface of ngx-editorjs-blockquotes-block\n */\n\nexport * from './lib/ngx-editorjs-blockquotes-block.service';\nexport * from './lib/ngx-editorjs-blockquotes-client-block.component';\nexport * from './lib/ngx-editorjs-blockquotes-block.component';\nexport * from './lib/ngx-editorjs-blockquotes-block.mediator';\nexport * from './lib/ngx-editorjs-blockquotes-block.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Inject, InjectionToken, Optional } from '@angular/core';\nimport { Type } from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n\nexport const NGX_EDITORJS_CLIENT_OPTIONS = new InjectionToken<NgxEditorjsOptions>('NGX_EDITORJS_CLIENT_OPTIONS');\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsClientService {\n\n  constructor(@Optional() @Inject(NGX_EDITORJS_CLIENT_OPTIONS) options: NgxEditorjsOptions) {\n    this.blocks = options?.blocks || [];\n  }\n\n  blocks: SearchableBlock[];\n}\n\nexport interface NgxEditorjsOptions {\n  blocks?: SearchableBlock[];\n}\n\nexport interface SearchableBlock {\n  name: string;\n  component: Type<unknown> | null;\n  componentInstanceName?: string;\n  type?: string;\n}\n\nexport interface NgxEditorjsOutputBlock {\n  blockId: string;\n  sortIndex: number;\n  componentInstanceName: string;\n  dataClean: string;\n  savedAction?: string;\n}\n\nexport interface CreateBlockAction {\n  blockId: string | null;\n  componentInstanceName: string;\n  component: Type<unknown> | null;\n  value?: string;\n  componentSortIndex?: number;\n  savedAction?: string;\n}\n\nexport declare interface BaseClientBlock {\n  value: string;\n  savedAction: string;\n}\n\nexport interface SearchableBlock {\n  name: string;\n  component: Type<unknown> | null;\n  componentInstanceName?: string;\n  type?: string;\n}","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'lib-ngx-editorjs-header-client-block',\n  template: `\n    <ng-container [ngSwitch]=\"whichHeader\">\n        <h2 *ngSwitchCase=\"'h2'\" class=\"flex-spacer\" [innerHTML]=\"value\"></h2>\n        <h3 *ngSwitchCase=\"'h3'\" class=\"flex-spacer\" [innerHTML]=\"value\"></h3>\n        <h4 *ngSwitchCase=\"'h4'\" class=\"flex-spacer\" [innerHTML]=\"value\"></h4>\n        <h5 *ngSwitchCase=\"'h5'\" class=\"flex-spacer\" [innerHTML]=\"value\"></h5>\n        <h6 *ngSwitchCase=\"'h6'\" class=\"flex-spacer\" [innerHTML]=\"value\"></h6>\n        <h1 *ngSwitchDefault class=\"flex-spacer\" [innerHTML]=\"value\"></h1>\n    </ng-container>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule\n  ],\n})\nexport class NgxEditorjsHeaderClientBlockComponent {\n\n  @Input() value = '';\n\n  whichHeader!: string\n  @Input() \n  set savedAction(action: string) {\n    this.whichHeader = action;\n  }\n}\n","import { Component, Input, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { NgxEditorjsHeaderClientBlockComponent } from './components/ngx-editorjs-header-client-block/ngx-editorjs-header-client-block.component';\nimport { BaseClientBlock, CreateBlockAction, NgxEditorjsClientService, NgxEditorjsOutputBlock, SearchableBlock } from './ngx-editorjs-client.service';\n\n\nexport const HeaderSearchableBlock: SearchableBlock = {\n  name: 'Header',\n  component: NgxEditorjsHeaderClientBlockComponent,\n  componentInstanceName: 'NgxEditorjsHeaderBlockMediator',\n};\n\n@Component({\n  selector: 'ngx-editorjs-client',\n  template: `<ng-container #ngxEditorClient></ng-container>`,\n  styles: [\n  ]\n})\nexport class NgxEditorjsClientComponent implements OnInit {\n\n  constructor(private ngxEditorjsClientService: NgxEditorjsClientService) { }\n\n  @ViewChild('ngxEditorClient', { read: ViewContainerRef, static: true }) ngxEditorClient!: ViewContainerRef;\n\n  @Input() \n  set inputData(blocks: NgxEditorjsOutputBlock[]) {\n    requestAnimationFrame(() => this.clearSortCreateNgxEditorjsBlocks(blocks));\n  }\n\n  ngOnInit(): void {\n    this.ngxEditorjsClientService.blocks.unshift(HeaderSearchableBlock);\n  }\n\n  clearSortCreateNgxEditorjsBlocks(blocks: NgxEditorjsOutputBlock[]): void {\n    this.ngxEditorClient.clear();\n    if(blocks) {\n      blocks.sort((a, b) => a.sortIndex - b.sortIndex);\n      blocks.forEach((block) => {\n        const componentInstanceObject = \n          this.ngxEditorjsClientService.blocks.find((b) => b.componentInstanceName === block.componentInstanceName)\n            ?? this.ngxEditorjsClientService.blocks[0];\n  \n        const createBlockAction: CreateBlockAction = { \n          blockId: block.blockId,\n          component: componentInstanceObject.component,\n          componentInstanceName: block.componentInstanceName,\n          value: block.dataClean,\n          componentSortIndex: block.sortIndex,\n          savedAction: block.savedAction\n        };\n        this.loadNgxEditorjsBlock(createBlockAction);\n      });\n    }\n  }\n\n  loadNgxEditorjsBlock({ component, value, savedAction }: CreateBlockAction): void {\n    const componentRef = this.ngxEditorClient.createComponent(component!, { index: this.ngxEditorClient.length });\n    const blockMediator = componentRef.instance as BaseClientBlock;\n    blockMediator.value = value!;\n    blockMediator.savedAction = savedAction!;\n  };\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxEditorjsClientComponent } from './ngx-editorjs-client.component';\nimport { NgxEditorjsHeaderClientBlockComponent } from './components/ngx-editorjs-header-client-block/ngx-editorjs-header-client-block.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    NgxEditorjsClientComponent\n  ],\n  imports: [\n    NgxEditorjsHeaderClientBlockComponent\n  ],\n  exports: [\n    NgxEditorjsClientComponent\n  ]\n})\nexport class NgxEditorjsClientModule { }\n","/*\n * Public API Surface of ngx-editorjs-client\n */\n\nexport * from './lib/ngx-editorjs-client.service';\nexport * from './lib/ngx-editorjs-client.component';\nexport * from './lib/ngx-editorjs-client.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsCodeBlockService {\n\n  constructor() { }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\n@Component({\n  standalone: true,\n  imports: [\n    CodemirrorModule,\n    FormsModule\n  ],\n  selector: 'ngx-editorjs-code-client-block',\n  template: `\n    <ngx-codemirror\n      [ngModel]=\"value\"\n      [options]=\"codeMirrorOptions\">\n    </ngx-codemirror>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex-direction: column;\n      border-radius: 5px;\n      margin: 16px auto;\n      position: relative;\n      z-index: 1;\n    }\n  `]\n})\nexport class NgxEditorjsCodeClientBlockComponent {\n  \n  @Input() value = '';\n\n  codeMirrorOptions = { \n    lineNumbers: true,\n    theme: 'material-palenight',\n    mode: 'text/typescript',\n    readOnly: true\n  }\n\n  @Input() \n  set savedAction(action: string) {\n    this.codeMirrorOptions.mode = action;\n  }\n}\n","import { Component } from '@angular/core';\nimport { BaseBlockComponent, AutofocusDirective } from '@tmdjr/ngx-editorjs';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  standalone: true,\n  imports: [\n    CodemirrorModule,\n    FormsModule\n  ],\n  selector: 'ngx-editorjs-code-block',\n  template: `\n  <!-- <pre class=\"prettyprint\">\n    <code #code contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></code>\n  </pre> -->\n    <ngx-codemirror\n      (ngModelChange)=\"changeValue($event)\"\n      [ngModel]=\"value\"\n      [options]=\"codeMirrorOptions\">\n    </ngx-codemirror>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex-direction: column;\n      border-radius: 5px;\n      margin: 16px auto;\n      position: relative;\n      z-index: 1;\n    }\n  `]\n})\nexport class NgxEditorjsCodeBlockComponent extends BaseBlockComponent {\n\n  override useInlineToolbar = false;\n  override useInputType = false;\n  override useOnPasteHTMLRemoval = false;\n\n  override blockOptionActions: { action: string, icon: string }[] = [\n    { action: 'text/typescript', icon: 'javascript' },\n    { action: 'css', icon: 'css' },\n    { action: 'xml', icon: 'html' }\n  ];\n\n  codeMirrorOptions ={ \n    lineNumbers: true,\n    theme: 'material-palenight',\n    mode: 'text/typescript',\n    extraKeys: { 'Ctrl-Space': 'autocomplete' },\n  }\n\n  override ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    // setTimeout(() => {\n    //   this.codeMirrorOptions.theme = 'material';\n    // }, 5000);\n    super.ngOnInit();\n  }\n\n  override handleBlockOptionAction(action: any) {\n    this.codeMirrorOptions.mode = action;\n    super.handleBlockOptionAction(action);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsCodeBlockComponent } from './ngx-editorjs-code-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-meditator-code-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-code-block [blockId]=\"blockId\" [formControlName]=\"formControlName\" [savedAction]=\"savedAction\"></ngx-editorjs-code-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsCodeBlockComponent\n  ],\n})\nexport class NgxEditorjsCodeBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n  @Input() savedAction!: string;\n}\n","import { NgModule } from '@angular/core';\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ]\n})\nexport class NgxEditorjsCodeBlockModule { }\n","/*\n * Public API Surface of ngx-editorjs-code-block\n */\n\nexport * from './lib/ngx-editorjs-code-block.service';\nexport * from './lib/ngx-editorjs-code-client-block.component';\nexport * from './lib/ngx-editorjs-code-block.component';\nexport * from './lib/ngx-editorjs-code-block.mediator';\nexport * from './lib/ngx-editorjs-code-block.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsImageBlockService {\n\n  constructor() { }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-image-client-block',\n  imports: [CommonModule],\n  template: `\n    <div class=\"image-conatiner\" [ngClass]=\"activeImageClass\">\n      <img\n        class=\"image-block\"\n        [src]=\"_value.url\"\n        [title]=\"_value.title\"\n        (click)=\"onImageClick()\"\n        onerror=\"this.onerror=null;this.src='https://dummyimage.com/640x360/000/AAF'\"/>\n    </div>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; position: relative; margin-bottom: 22px; }\n    :host .flex-start { justify-content: flex-start; }\n    :host .flex-end { justify-content: flex-end; }\n    :host .center { justify-content: center; }\n    :host .stretch img { width: 100%; cursor: pointer; }\n    .image-conatiner {\n      display: flex;\n    }\n    .image-block {\n      min-width: 0;\n    }\n  `]\n})\nexport class NgxEditorjsImageClientBlockComponent {\n\n  _value: { url: string, title: string } = { url: '', title: '' };\n  @Input() \n  set value(value: string) {\n    !!value && (this._value = JSON.parse(value));\n  }\n\n  activeImageClass: string = 'flex-start';\n  @Input()\n  set savedAction(action: string) {\n    this.activeImageClass = action ?? 'flex-start';\n  }\n\n  onImageClick() {\n    console.log('Image clicked');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatLegacyFormFieldModule as MatFormFieldModule } from '@angular/material/legacy-form-field';\nimport { MatLegacyInputModule as MatInputModule } from '@angular/material/legacy-input';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'image-config',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n  ],\n  template: `\n    <div class=\"image-block-modal\" >\n      <form [formGroup]=\"imageConfigForm\">\n        <h2 mat-dialog-title>Image Configurations</h2>\n        <mat-form-field appearance=\"outline\" color=\"accent\">\n          <mat-label>Title</mat-label>\n          <input #title matInput type=\"text\" formControlName=\"title\" />\n          <mat-error *ngIf=\"imageConfigForm.get('title')?.errors\">{{imageConfigFormErrorMessages['title']}}</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" color=\"accent\">\n          <mat-label>URL</mat-label>\n          <input #url matInput type=\"text\" title=\"URL\" formControlName=\"url\" />\n          <mat-error *ngIf=\"imageConfigForm.get('url')?.errors\">{{imageConfigFormErrorMessages['url']}}</mat-error>\n        </mat-form-field>\n        <div class=\"action-group\">\n          <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"updateImage()\" [disabled]=\"imageConfigForm.invalid\">Save</button>\n          <button mat-flat-button color=\"warn\" type=\"button\" (click)=\"closeConfig()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  `,\n  styles: [`\n  :host {\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 20px;\n   }\n\n   :host form {\n      display: flex;\n      flex-direction: column;\n    }\n\n    :host form .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n  `]\n})\nexport class ImageConfigComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder) { }\n  \n  destory: Subject<boolean> = new Subject();\n  \n  imageObject: any;\n\n  errorMessages: { [key: string]: string } = {\n    required: 'Required',\n  };\n\n  imageConfigFormErrorMessages: { [key: string]: string } = {\n    url: '', title: ''\n  }\n\n  imageConfigForm!: FormGroup;\n\n  @Input() value!: { url: string, title: string };\n\n  @Output() imageValue = new EventEmitter<{ url: string, title: string }>();\n\n\n  ngOnInit(): void {\n    this.imageConfigForm = this.formBuilder.group({\n      url: [this.value.url ?? '', [Validators.required]],\n      title: [this.value.title ?? '', [Validators.required]]\n    });\n\n    this.imageConfigForm.statusChanges\n    .pipe(takeUntil(this.destory))\n    .subscribe(() => this.setErrorsMessages(this.imageConfigForm, this.imageConfigFormErrorMessages));\n  }\n\n  ngOnDestroy(): void {\n    this.destory.next(true);\n  }\n\n  updateImage() {\n    this.imageValue.emit(this.imageConfigForm.value);\n  }\n\n  closeConfig() {\n    this.imageValue.emit(this.value);\n  }\n\n  setErrorsMessages(formGroup: FormGroup, formControlMessages: { [key: string]: string }): void {\n    Object.keys(formGroup.controls).forEach(element => {\n      const errors = formGroup.get(element)?.errors;\n      if(errors) {         \n        const error = Object.keys(errors)[0];\n        formControlMessages[element] = this.errorMessages[error];\n      }\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AutofocusDirective, BaseBlockComponent } from '@tmdjr/ngx-editorjs';\nimport { ImageConfigComponent } from './image-config/image-config.component';\n\n@Component({\n  selector: 'ngx-editorjs-image-block',\n  standalone: true,\n  imports: [\n    CommonModule,\n    AutofocusDirective,\n    MatButtonModule,\n    MatIconModule,\n    ImageConfigComponent,\n  ],\n  template: `\n    <div *ngIf=\"!_openEditUrlOverlay\" class=\"image-conatiner\" [ngClass]=\"activeImageClass\">\n      <img\n        #image\n        class=\"image-block\"\n        [src]=\"_value.url\"\n        [title]=\"_value.title\"\n        onerror=\"this.onerror=null;this.src='https://dummyimage.com/640x360/000/AAF'\"/>\n      <button  \n        mat-mini-fab \n        class=\"image-block-button mat-elevation-z2\"\n        (click)=\"openEditUrlOverlay()\">\n          <mat-icon>edit</mat-icon>\n      </button>\n    </div>\n    <image-config *ngIf=\"_openEditUrlOverlay\" [value]=\"_value\" (imageValue)=\"updateImage($event)\"></image-config>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; position: relative; margin-bottom: 22px; }\n    :host .flex-start { justify-content: flex-start; }\n    :host .flex-end { justify-content: flex-end; }\n    :host .center { justify-content: center; }\n    :host .stretch img { width: 100%; }\n\n    .image-block:hover ~ .image-block-button, .image-block-button:hover {\n      display: block;\n    }\n\n    .image-block {\n      min-width: 0;\n    }\n\n    .image-block-button {\n      position: absolute;\n      top: 6px;\n      left: 6px;\n      z-index: 1;\n      display: none;\n      width: 32px;\n      height: 32px; \n    }\n\n    .image-conatiner {\n      display: flex;\n    }\n\n    ::ng-deep .image-block-button .mat-button-wrapper .mat-icon {\n        font-size: 1.6rem;\n        vertical-align: baseline;\n    }\n  `]\n})\nexport class NgxEditorjsImageBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  override useInlineToolbar = false;\n  override useInputType = false;\n\n  @ViewChild('image') element!: ElementRef;\n\n  _openEditUrlOverlay: boolean = false;\n\n  _value: { url: string, title: string } = { url: '', title: '' };\n\n  activeImageClass: string = 'flex-start';\n\n  //   flex-start | flex-end | center\n  override blockOptionActions: { action: string, icon: string }[] = [\n    { action: 'flex-start', icon: 'format_align_left' },\n    { action: 'center', icon: 'format_align_center' },\n    { action: 'flex-end', icon: 'format_align_right' },\n    { action: 'stretch', icon: 'format_align_justify' }\n  ];\n\n  override ngOnInit() {\n    !!this.value && (this._value = JSON.parse(this.value));\n    !this.value && this.openEditUrlOverlay();\n    super.ngOnInit();\n  }\n\n  ngAfterViewInit(): void {\n    super.viewChild = this.element;\n  }\n\n  override changeValue(value: string) {\n    super.changeValue(value);\n  }\n\n  override handleBlockOptionAction(action: string) {\n    this.activeImageClass = action ?? 'flex-start';\n    super.handleBlockOptionAction(action);\n  }\n\n  openEditUrlOverlay() {\n    this._openEditUrlOverlay = true;\n  }\n\n  updateImage(value: { url: string, title: string }) {\n    this._value = value;\n    this.changeValue(JSON.stringify(value));\n    this._openEditUrlOverlay = false;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsImageBlockComponent } from './ngx-editorjs-image-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-image-blockquotes-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-image-block [blockId]=\"blockId\" [formControlName]=\"formControlName\" [savedAction]=\"savedAction\"></ngx-editorjs-image-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsImageBlockComponent\n  ],\n})\nexport class NgxEditorjsImageBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n  @Input() savedAction!: string;\n}\n","import { NgModule } from '@angular/core';\nimport { NgxEditorjsImageBlockComponent } from './ngx-editorjs-image-block.component';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ]\n})\nexport class NgxEditorjsImageBlockModule { }\n","/*\n * Public API Surface of ngx-editorjs-image-block\n */\n\nexport * from './lib/ngx-editorjs-image-block.service';\nexport * from './lib/ngx-editorjs-image-client-block.component';\nexport * from './lib/ngx-editorjs-image-block.component';\nexport * from './lib/ngx-editorjs-image-block.mediator';\nexport * from './lib/ngx-editorjs-image-block.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsMermaidBlockService {\n\n  constructor() { }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\n\n@Component({\n  selector: 'mermaid-config',\n  standalone: true,\n  imports: [\n    CommonModule,\n    CodemirrorModule,\n    FormsModule,\n    MatButtonModule\n  ],\n  template: `\n    <div class=\"container\">\n    <ngx-codemirror\n      (ngModelChange)=\"changeValue($event)\"\n      [ngModel]=\"value\"\n      [options]=\"codeMirrorOptions\">\n    </ngx-codemirror>\n    </div>\n    <div class=\"action-group\">\n      <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"updateMermaid()\">Update</button>\n    </div>\n  `,\n  styles: [`\n    :host {\n      width: 100%;\n      display: flex;\n      flex-direction: column;\n      border-radius: 5px;\n      margin: 16px auto;\n      position: relative;\n      z-index: 1;\n    }\n    :host .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n    :host .answers-action-group {\n      padding-bottom: 20px;\n    }\n    :host ::ng-deep .CodeMirror{\n      height:250px\n    }\n    .container {\n      padding-bottom: 20px;\n    }\n  `]\n})\nexport class MermaidConfigComponent {  \n  codeMirrorOptions ={ \n    lineNumbers: true,\n    theme: 'material-palenight',\n    mode: 'text/typescript',\n    extraKeys: { 'Ctrl-Space': 'autocomplete' },\n  }\n\n  @Input() value: string = '';\n  @Output() mermaidValue = new EventEmitter<string>();\n\n  changeValue(newValue: string) {\n    this.value = newValue;\n  }\n\n  updateMermaid() {\n    this.mermaidValue.emit(this.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgZone, Component, ElementRef, OnInit, Pipe, PipeTransform, ViewChild } from '@angular/core';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AutofocusDirective, BaseBlockComponent } from '@tmdjr/ngx-editorjs';\nimport { MermaidConfigComponent } from './image-config/mermaid-config.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport mermaid from 'mermaid';\n\nmermaid.parseError = function(err: any, hash: any) {\n  console.warn(`Error parsing mermaid diagram: ${err} ${hash}`);\n};\n\n@Pipe({ name: 'safeHtml', standalone: true })\nexport class SafeHtmlPipe implements PipeTransform  {\n  constructor(private sanitized: DomSanitizer) {}\n  transform(value: string) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-mermaid-block',\n  template: `\n  <ng-container *ngIf=\"_openEditMermaidOverlay; else elseTemplate\">\n    <mermaid-config [value]=\"_value\" (mermaidValue)=\"updateMermaid($event)\"></mermaid-config>\n  </ng-container>\n  <ng-template #elseTemplate>\n    <div class=\"mermaid-container\"> \n      <div\n        #mermaidContainer\n        [ngClass]=\"activeImageClass\"\n        [innerHTML]=\"_mermaidDiagramSVG | safeHtml\"\n        class=\"mermaid\"></div>\n      <button  \n        mat-mini-fab \n        class=\"mermaid-block-button mat-elevation-z2\"\n        (click)=\"openEditUrlOverlay()\">\n          <mat-icon>edit</mat-icon>\n      </button>\n    </div>\n  </ng-template>\n  `,\n  styles: [`\n  :host { display: flex; flex-direction: column; position: relative; padding-bottom: 22px; }\n  .mermaid { width: 100%; display: flex; }\n  .mermaid:hover ~ .mermaid-block-button, .mermaid-block-button:hover {\n      display: block;\n    }\n  .mermaid-block-button {\n      position: absolute;\n      top: 6px;\n      left: 6px;\n      z-index: 1;\n      display: none;\n      width: 32px;\n      height: 32px; \n    }\n    .mermaid-container {\n      display: flex;\n    }\n    :host .flex-start { justify-content: flex-start; }\n    :host .flex-end { justify-content: flex-end; }\n    :host .center { justify-content: center; }\n    :host .stretch img { width: 100%; }\n    ::ng-deep .mermaid-block-button .mat-button-wrapper .mat-icon {\n      font-size: 1.6rem;\n      vertical-align: baseline;\n    }\n  `],\n  imports: [\n    CommonModule,\n    AutofocusDirective,\n    MatButtonModule,\n    MatIconModule,\n    MermaidConfigComponent,\n    SafeHtmlPipe\n  ]\n})\nexport class NgxEditorjsMermaidBlockComponent extends BaseBlockComponent implements OnInit {\n  override useInlineToolbar = false;\n  override useInputType = false;\n  override useOnPasteHTMLRemoval = false;\n\n  @ViewChild('paragraph') element!: ElementRef;\n  @ViewChild('mermaidContainer') mermaidContainer!: ElementRef;\n\n  _mermaidAPI = mermaid.mermaidAPI;\n  _openEditMermaidOverlay: boolean = false;\n  _value = '';\n  _mermaidDiagramSVG = '';\n  activeImageClass: string = 'flex-start';\n\n  override blockOptionActions: { action: string, icon: string }[] = [\n    { action: 'flex-start', icon: 'format_align_left' },\n    { action: 'center', icon: 'format_align_center' },\n    { action: 'flex-end', icon: 'format_align_right' }\n  ];\n\n  renderMermaidDiagram(mermaidDiagram: string): void {\n    const uniqueId = `mermaid-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n    this.ngZone.runOutsideAngular(() => {\n      this._mermaidAPI.render(uniqueId, mermaidDiagram).then(\n        data => this.ngZone.run(() => this._mermaidDiagramSVG = data.svg),\n        error => console.warn(`Error: ${error}`)\n      );\n    });\n  }\n\n  override ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      this._mermaidAPI.initialize({ startOnLoad: false });\n    });\n    if(this.value) {\n      this.renderMermaidDiagram(this.value);\n      this._value = this.value;\n    } else {\n      this.openEditUrlOverlay();\n    }\n    super.ngOnInit();\n  }\n\n  override changeValue(value: string) {\n    super.changeValue(value);\n  }\n\n  override handleBlockOptionAction(action: string) {\n    this.activeImageClass = action ?? 'flex-start';\n    super.handleBlockOptionAction(action);\n  }\n\n  openEditUrlOverlay() {\n    this._openEditMermaidOverlay = true;\n  }\n\n  updateMermaid(value: string) {\n    this._value = value;\n    this.renderMermaidDiagram(value);\n    this.changeValue(value);\n    this._openEditMermaidOverlay = false;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsMermaidBlockComponent } from './ngx-editorjs-mermaid-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-mermaid-blockquotes-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-mermaid-block [blockId]=\"blockId\" [formControlName]=\"formControlName\" [savedAction]=\"savedAction\"></ngx-editorjs-mermaid-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsMermaidBlockComponent\n  ],\n})\nexport class NgxEditorjsMermaidBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n  @Input() savedAction!: string;\n}\n","/*\n * Public API Surface of ngx-editorjs-mermaid-block\n */\n\nexport * from './lib/ngx-editorjs-mermaid-block.service';\nexport * from './lib/ngx-editorjs-mermaid-block.component';\nexport * from './lib/ngx-editorjs-mermaid-block.mediator';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorParagraphBlockService {\n\n  constructor() { }\n}\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { BaseBlockComponent, AutofocusDirective } from '@tmdjr/ngx-editorjs';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-paragraph-block',\n  template: `\n    <p class=\"flex-spacer\" #paragraph contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></p>\n  `,\n  styles: [`:host { display: flex; flex-direction: column; } p { font-size: 1.6rem; line-height: 3.2rem; }`],\n  imports: [\n    AutofocusDirective\n  ]\n})\nexport class NgxEditorjsParagraphBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('paragraph') element!: ElementRef;\n\n  override ngOnInit() {\n    super.ngOnInit();\n  }\n\n  ngAfterViewInit(): void {\n    super.viewChild = this.element;\n  }\n\n  override onMouseEnter(event: Event) {\n    super.onMouseEnter(event);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-paragraph-client-block',\n  template: `\n    <p class=\"flex-spacer\" [innerHTML]=\"value\"></p>\n  `,\n  styles: [`:host { display: flex; flex-direction: column; } p { font-size: 1.6rem; line-height: 3.2rem; }`],\n  imports: []\n})\nexport class NgxEditorjsParagraphClientBlockComponent {\n  @Input() value = '';\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsParagraphBlockComponent } from './ngx-editorjs-paragraph-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-meditator-paragraph-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-paragraph-block [blockId]=\"blockId\" [formControlName]=\"formControlName\"></ngx-editorjs-paragraph-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsParagraphBlockComponent\n  ],\n})\nexport class NgxEditorjsParagraphBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n}\n","import { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ]\n})\nexport class NgxEditorParagraphBlockModule { }\n","/*\n * Public API Surface of ngx-editorjs-paragraph-block\n */\n\nexport * from './lib/ngx-editorjs-paragraph-block.service';\nexport * from './lib/ngx-editorjs-paragraph-block.component';\nexport * from './lib/ngx-editorjs-paragraph-client-block.component';\nexport * from './lib/ngx-editorjs-paragraph-block.mediator';\nexport * from './lib/ngx-editorjs-paragraph-block.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsQuizBlockService {\n\n  constructor() { }\n}\n","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, ReactiveFormsModule, ValidatorFn, Validators } from '@angular/forms';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatLegacyFormFieldModule as MatFormFieldModule } from '@angular/material/legacy-form-field';\nimport { MatLegacyInputModule as MatInputModule } from '@angular/material/legacy-input';\nimport { MatLegacySelectModule as MatSelectModule} from '@angular/material/legacy-select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Subject, takeUntil } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\n\ntype RatioOption = { value: string };\nexport type QuizConfig = {\n  question: string,\n  correctAnswer: string,\n  correctAnswerResponse: string,\n  incorrectAnswerResponse: string,\n  ratioOptions: RatioOption[]\n};\n\nfunction validateRatioOptions(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const optionsArray = control as FormArray;\n    if (optionsArray.controls.length < 2) {\n      return { 'notEnoughOptions': true };\n    }\n    return null;\n  };\n}\n\n\n@Component({\n  selector: 'quiz-config',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"quiz-block-modal\" >\n      <form [formGroup]=\"quizConfigForm\">\n\n        <h1 mat-dialog-title>Quiz Configuration</h1>\n\n        <h2>1) Create a Question.</h2>\n        <mat-form-field appearance=\"outline\" color=\"accent\">\n          <mat-label>Question</mat-label>\n          <textarea #title matInput formControlName=\"question\"></textarea>\n          <mat-error *ngIf=\"quizConfigForm.get('question')?.errors\">{{quizConfigFormErrorMessages['question']}}</mat-error>\n        </mat-form-field>\n\n        <ng-container *ngIf=\"quizConfigForm.get('question')?.valid\">\n          <h2>2) Create the possible answers <span>(Create at least 2 options)</span></h2>\n          <div formArrayName=\"ratioOptions\">\n            <div *ngFor=\"let option of ratioOptions.controls; let i = index\" [formGroupName]=\"i\">\n              <div class=\"ratio-option\">\n                <mat-form-field appearance=\"outline\" color=\"accent\" class=\"ratio-option-input\">\n                  <mat-label>Option {{i + 1}}</mat-label>\n                  <input matInput type=\"text\" formControlName=\"value\"/>\n                </mat-form-field>\n                <button mat-icon-button color=\"warn\" type=\"button\" (click)=\"removeRatioOption(i)\">\n                  <mat-icon>delete</mat-icon>\n                </button>\n              </div>\n            </div>\n            <div class=\"answers-action-group\">\n              <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"addRatioOption()\">Add Answer</button>\n            </div>\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"quizConfigForm.get('question')?.valid && quizConfigForm.get('ratioOptions')?.valid\">\n          <h2>3) Select the correct answer</h2>\n          <mat-form-field appearance=\"outline\" color=\"accent\">\n            <mat-label>Answer</mat-label>\n            <mat-select formControlName=\"correctAnswer\">\n              <mat-option *ngFor=\"let option of ratioOptions.controls; let i = index\" [value]=\"option.get('value')?.value\">\n                {{ option.get('value')?.value }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"quizConfigForm.get('correctAnswer')?.errors\">{{quizConfigFormErrorMessages['correctAnswer']}}</mat-error>\n          </mat-form-field>\n        </ng-container>\n\n        <ng-container *ngIf=\"quizConfigForm.get('question')?.valid &&  quizConfigForm.get('ratioOptions')?.valid && quizConfigForm.get('correctAnswer')?.valid\">\n          <h2>4) Correct answer response.</h2>\n          <mat-form-field appearance=\"outline\" color=\"accent\">\n            <mat-label>Response</mat-label>\n            <textarea #title matInput formControlName=\"correctAnswerResponse\"></textarea>\n            <mat-error *ngIf=\"quizConfigForm.get('correctAnswerResponse')?.errors\">{{quizConfigFormErrorMessages['correctAnswerResponse']}}</mat-error>\n          </mat-form-field>\n        </ng-container>\n\n        <ng-container *ngIf=\"quizConfigForm.get('question')?.valid &&  quizConfigForm.get('ratioOptions')?.valid && quizConfigForm.get('correctAnswer')?.valid\">\n          <h2>5) Incorrect answer response.</h2>\n          <mat-form-field appearance=\"outline\" color=\"accent\">\n            <mat-label>Response</mat-label>\n            <textarea #title matInput formControlName=\"incorrectAnswerResponse\"></textarea>\n            <mat-error *ngIf=\"quizConfigForm.get('incorrectAnswerResponse')?.errors\">{{quizConfigFormErrorMessages['incorrectAnswerResponse']}}</mat-error>\n          </mat-form-field>\n        </ng-container>\n\n        <div class=\"action-group\">\n          <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"updateQuiz()\" [disabled]=\"quizConfigForm.invalid\">Save</button>\n          <button mat-flat-button color=\"warn\" type=\"button\" (click)=\"closeConfig()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  `,\n  styles: [`\n    :host {\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      padding: 20px;\n    }\n    :host form {\n      display: flex;\n      flex-direction: column;\n    }\n    :host form .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n    .answers-action-group {\n      padding-bottom: 20px;\n    }\n    :host h2 span{\n      font-size: 12px;\n      color: #f0ad4e;\n    }\n  `],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatIconModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class QuizConfigComponent implements OnInit {\n  constructor(private formBuilder: FormBuilder) { }\n  destory: Subject<boolean> = new Subject();\n\n  errorMessages: { [key: string]: string } = { required: 'Required' };\n  quizConfigFormErrorMessages: { [key: string]: string } = { question: '', correctAnswer: '' }\n\n  quizConfigForm!: FormGroup;\n\n  get ratioOptions(): FormArray {\n    return this.quizConfigForm.get('ratioOptions') as FormArray;\n  }\n\n  @Input() value!: QuizConfig;\n  @Output() quizValue = new EventEmitter<QuizConfig>();\n\n  ngOnInit(): void {\n    this.quizConfigForm = this.formBuilder.group({\n      question: [this.value.question ?? '', [Validators.required]],\n      correctAnswer: [this.value.correctAnswer ?? undefined, [Validators.required]],\n      correctAnswerResponse: [this.value.correctAnswerResponse ?? '', [Validators.required]],\n      incorrectAnswerResponse: [this.value.incorrectAnswerResponse ?? '', [Validators.required]],\n      ratioOptions: this.formBuilder.array((this.value.ratioOptions ?? [])\n                    .map(option => this.formBuilder.group({ value: [option.value, Validators.required] })), validateRatioOptions())\n\n    });\n\n    this.quizConfigForm.statusChanges\n    .pipe(takeUntil(this.destory))\n    .subscribe(() => this.setErrorsMessages(this.quizConfigForm, this.quizConfigFormErrorMessages));\n  }\n\n  ngOnDestroy(): void {\n    this.destory.next(true);\n  }\n\n  updateQuiz() {\n    this.quizValue.emit(this.quizConfigForm.value);\n  }\n\n  closeConfig() {\n    this.quizValue.emit(this.value);\n  }\n\n  addRatioOption(): void {\n    const option = this.formBuilder.group({\n      value: ['', [Validators.required]]\n    });\n    this.ratioOptions.push(option);\n  }\n\n  removeRatioOption(index: number): void {\n    this.quizConfigForm.get('correctAnswer')?.setValue(undefined);\n    this.ratioOptions.removeAt(index);\n  }\n\n  setErrorsMessages(formGroup: FormGroup, formControlMessages: { [key: string]: string }): void {\n    Object.keys(formGroup.controls).forEach(element => {\n      const errors = formGroup.get(element)?.errors;\n      if(errors) {         \n        const error = Object.keys(errors)[0];\n        formControlMessages[element] = this.errorMessages[error];\n      }\n    });\n  }\n}\n\n\n","import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatLegacyRadioModule as MatRatioModule } from '@angular/material/legacy-radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BaseBlockComponent, AutofocusDirective } from '@tmdjr/ngx-editorjs';\nimport { QuizConfig, QuizConfigComponent } from './quiz-config/quiz-config.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-quiz-block',\n  template: `\n    <ng-container *ngIf=\"_openEditQuizOverlay; else elseTemplate\">\n      <quiz-config [value]=\"_value\" (quizValue)=\"updateQuiz($event)\"></quiz-config>\n    </ng-container>\n    <ng-template #elseTemplate>\n      <div class=\"quiz-conatiner\">\n        <h1>Quiz</h1>\n        <p #paragraph>{{ _value.question }}</p>\n        <mat-radio-group class=\"answer-ratio-group\" [value]=\"_value.correctAnswer\">\n          <mat-radio-button *ngFor=\"let option of _value.ratioOptions\" [value]=\"option.value\">{{ option.value }}</mat-radio-button>\n        </mat-radio-group>\n        <div class=\"action-group\">\n          <button mat-flat-button color=\"primary\" type=\"button\" (click)=\"openEditQuizOverlay()\">Edit</button>\n        </div>\n      </div>\n    </ng-template>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; padding-bottom: 22px; }\n    .answer-ratio-group {\n      display: flex;\n      flex-direction: column;\n      gap: 21px;\n    }\n    .quiz-conatiner {\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      padding: 20px;\n    }\n    .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n  `],\n  imports: [\n    CommonModule,\n    AutofocusDirective,\n    MatButtonModule,\n    MatRatioModule,\n    MatIconModule,\n    QuizConfigComponent\n  ]\n})\nexport class NgxEditorjsQuizBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  override useInlineToolbar = false;\n  override useInputType = false;\n\n  @ViewChild('paragraph') element!: ElementRef;\n\n  _openEditQuizOverlay = false;\n  _value: QuizConfig = {\n    question: '',\n    correctAnswer: '',\n    ratioOptions: [],\n    correctAnswerResponse: '',\n    incorrectAnswerResponse: ''\n  };\n\n  override ngOnInit() {\n    !!this.value && (this._value = JSON.parse(this.value));\n    !this.value && this.openEditQuizOverlay();\n    super.ngOnInit();\n  }\n\n  ngAfterViewInit(): void {\n    super.viewChild = this.element;\n  }\n\n  override onMouseEnter(event: Event) {\n    super.onMouseEnter(event);\n  }\n\n  openEditQuizOverlay() {\n    this._openEditQuizOverlay = true;\n  }\n\n  updateQuiz(value: QuizConfig) {\n    this._value = value;\n    this.changeValue(JSON.stringify(value));\n    this._openEditQuizOverlay = false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatLegacyRadioModule as MatRatioModule } from '@angular/material/legacy-radio';\nimport { QuizConfig } from './quiz-config/quiz-config.component';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-image-client-block',\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatRatioModule,\n    FormsModule\n  ],\n  template: `\n    <div class=\"quiz-conatiner\">\n      <h1>Quiz</h1>\n      <p *ngIf=\"answerResponse\" [ngClass]=\"isAnswerCorrect ? 'successful-text' : 'failure-text'\" >{{ answerResponse }}</p>\n      <p #paragraph>{{ _value.question }}</p>\n      <mat-radio-group [(ngModel)]=\"userAnswer\" [disabled]=\"answerSubmited\">\n        <ol type=\"a\" class=\"answer-ratio-group\">\n          <li *ngFor=\"let option of _value.ratioOptions\">\n          <mat-radio-button [value]=\"option.value\">{{ option.value }}</mat-radio-button>\n          </li>\n        </ol>\n        \n      </mat-radio-group>\n      <div class=\"action-group\">\n        <button mat-flat-button color=\"primary\" type=\"button\" (click)=\"onQuizAnswerClick()\" [disabled]=\"!userAnswer || answerSubmited\">Submit</button>\n      </div>\n    </div>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; padding-bottom: 22px; }\n    .answer-ratio-group {\n      display: flex;\n      flex-direction: column;\n      gap: 21px;\n    }\n    .answer-ratio-group li::before {\n      content: \")\";\n      margin-right: 0.5em;\n    }\n    .quiz-conatiner {\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      padding: 20px;\n    }\n    .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n  `]\n})\nexport class NgxEditorjsQuizClientBlockComponent {\n\n  isAnswerCorrect: boolean | undefined = undefined;\n  answerResponse: string | undefined = undefined;\n  answerSubmited = false;\n  userAnswer: string | undefined = undefined;\n  _value: QuizConfig = {\n    question: '',\n    correctAnswer: '',\n    ratioOptions: [],\n    correctAnswerResponse: '',\n    incorrectAnswerResponse: ''\n  };\n\n  @Input() \n  set value(value: string) {\n    !!value && (this._value = JSON.parse(value));\n  }\n\n  onQuizAnswerClick() {\n    this.answerSubmited = true;\n    this.isAnswerCorrect = this.userAnswer === this._value.correctAnswer;\n    this.answerResponse = this.isAnswerCorrect ? this._value.correctAnswerResponse : this._value.incorrectAnswerResponse;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsQuizBlockComponent } from './ngx-editorjs-quiz-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-quiz-paragraph-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-quiz-block [blockId]=\"blockId\" [formControlName]=\"formControlName\"></ngx-editorjs-quiz-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsQuizBlockComponent\n  ],\n})\nexport class NgxEditorjsQuizBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n}\n","/*\n * Public API Surface of ngx-editorjs-quiz-block\n */\nexport * from './lib/ngx-editorjs-quiz-block.service';\nexport * from './lib/ngx-editorjs-quiz-block.component';\nexport * from './lib/ngx-editorjs-quiz-client-block.component';\nexport * from './lib/ngx-editorjs-quiz-block.mediator';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { ComponentRef, Inject, Injectable, InjectionToken, Optional, Type, ViewRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\nexport const NGX_EDITORJS_OPTIONS = new InjectionToken<NgxEditorjsOptions>('NGX_EDITORJS_OPTIONS');\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsService {\n\n  blocks: SearchableBlock[];\n\n  requestValue!: Subject<boolean>;\n\n  constructor(@Optional() @Inject(NGX_EDITORJS_OPTIONS) options: NgxEditorjsOptions) {\n    this.blocks = options?.blocks || [];\n  }\n\n  toolbarComponentDetachSubject = new Subject<boolean>();\n  toolbarComponentDetach$: Observable<boolean> = this.toolbarComponentDetachSubject.asObservable();\n\n  adjustBlockPositionSubject = new Subject<AdjustBlockPosition>();\n  adjustBlockPosition$: Observable<AdjustBlockPosition> = this.adjustBlockPositionSubject.asObservable();\n\n  addNewBlockSubject = new Subject<CreateBlockAction>();\n  addNewBlock$: Observable<CreateBlockAction> = this.addNewBlockSubject.asObservable();\n\n  updateBlockOptionActionSubject = new Subject<UpdateBlockOptionAction>();\n  updateBlockOptionAction$: Observable<UpdateBlockOptionAction> = this.updateBlockOptionActionSubject.asObservable();\n  \n}\n\n// Create interface for NgxEditorjsValue\nexport interface NgxEditorjsOutputBlock {\n  blockId: string;\n  sortIndex: number;\n  componentInstanceName: string;\n  dataClean: string;\n  savedAction?: string;\n}\n\n// Create interface for Block\nexport interface Block {\n  sortIndex: number;\n  componentRef: ComponentRef<unknown>;\n  dataClean: string;\n  savedAction?: string;\n  componentInstanceName: string;\n}\n\nexport interface NgxEditorjsOptions {\n  blocks?: SearchableBlock[];\n}\n\nexport enum AdjustBlockPositionActions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  DELETE = 'DELETE'\n}\n\nexport interface AdjustBlockPosition {\n  blockId: string;\n  action: AdjustBlockPositionActions;\n}\n\nexport interface BlockMediatorComponent {\n  blockId: string;\n  form: FormGroup;\n  formControlName: string;\n  savedAction?: string;\n}\n\nexport interface SearchableBlock {\n  name: string;\n  component: Type<unknown> | null;\n  componentInstanceName: string;\n  type?: string;\n}\n\nexport interface CreateBlockAction {\n  blockId: string | null\n  componentInstanceName: string;\n  component: Type<unknown> | null;\n  value?: string;\n  componentSortIndex?: number;\n  savedAction?: string;\n}\n\nexport interface BlockOptionAction {\n  action: string;\n  icon?: string;\n  text?: string;\n}\n\nexport interface UpdateBlockOptionAction {\n  blockId: string;\n  action: string;\n}","<div class=\"block-list-container mat-elevation-z8\">\n  <mat-form-field appearance=\"fill\" color=\"accent\">\n    <mat-label>Filter</mat-label>\n    <input class=\"filter-text\"\n      matInput\n      [formControl]=\"blockCtrl\"\n      [autofocus]=\"true\">\n  </mat-form-field>\n  <mat-list class=\"block-list-panel\"\n    *ngIf=\"filteredBlocks$ | async; let filteredBlocks\">\n    <mat-list-item class=\"block-list-item\"\n      *ngIf=\"filteredBlocks.length <= 0\"\n      matRipple\n      mat-list-item>\n      No Results\n    </mat-list-item>\n    <mat-list-item class=\"block-list-item\"\n      *ngFor=\"let block of filteredBlocks\"\n      matRipple\n      mat-list-item\n      (click)=\"addBlock(block)\">\n      {{block.name}}\n    </mat-list-item>\n  </mat-list>\n</div>","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { NgxEditorjsService, SearchableBlock } from '../../../../ngx-editorjs.service';\nimport { combineLatest, map, Observable, of, startWith, Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'searchable-block-list',\n  templateUrl: './searchable-block-list.component.html',\n  styleUrls: ['./searchable-block-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchableBlockListComponent implements OnInit {\n\n  @Output('addBlock') addBlockEmitter = new EventEmitter();\n\n  blockCtrl = new FormControl([]);\n  blocks!: SearchableBlock[];\n  // blocksDefaults: SearchableBlock[] = [\n  //   { type: 'HeaderBlockMediator', name: 'Header', component: null },\n  // ];\n\n  filter$ = this.blockCtrl.valueChanges.pipe(startWith(''));\n  filteredBlocks$!: Observable<SearchableBlock[]>;\n  destory: Subject<boolean> = new Subject();\n\n  constructor(private ngxEdotorjsService: NgxEditorjsService) { }\n\n  ngOnInit(): void {\n    // this.blocks = this.blocksDefaults.concat(this.ngxEdotorjsService.blocks);\n    this.blocks = this.ngxEdotorjsService.blocks;\n    this.filteredBlocks$ = combineLatest([ of(this.blocks), this.filter$ ])\n    .pipe(\n      takeUntil(this.destory),\n      map(([blocks, filterString]) => {\n        if(typeof filterString !== 'string') filterString = '';\n        filterString = filterString.replace(/\\\\/g, '');\n        const pattern = filterString?.split('').map((v: string) => `(?=.*${v})`).join('');\n        const regex = new RegExp(`${pattern}`, 'gi');\n\n        // return blocks.filter(block => regex.exec(block));\n        return blocks.filter(block => block.name.match(regex));\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.destory.next(true);\n  }\n\n  addBlock(block: SearchableBlock) {\n    this.addBlockEmitter.emit(block);\n  }\n}\n","<div class=\"block-list-container mat-elevation-z8\">\n  <div class=\"block-option-list-panel\">\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"adjustBlockPosition(AdjustBlockPositionActions.UP)\">\n      <mat-icon>arrow_upward</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"adjustBlockPosition(AdjustBlockPositionActions.DELETE)\">\n      <mat-icon>delete</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"adjustBlockPosition(AdjustBlockPositionActions.DOWN)\">\n      <mat-icon>arrow_downward</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      *ngFor=\"let blockOptionAction of blockOptionActions\"\n      (click)=\"handleBlockOptionAction(blockOptionAction.action)\"\n      matRipple>\n      <mat-icon *ngIf=\"blockOptionAction.icon\">{{blockOptionAction.icon}}</mat-icon>\n      <span *ngIf=\"blockOptionAction.text\" class=\"block-option-list-item-text\">{{blockOptionAction.text}}</span>\n    </div>\n  </div>\n</div>","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewRef } from '@angular/core';\nimport { AdjustBlockPositionActions, BlockOptionAction } from '../../../../ngx-editorjs.service';\n\n@Component({\n  selector: 'block-options-list',\n  templateUrl: './block-options-list.component.html',\n  styleUrls: ['./block-options-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BlockOptionsListComponent {\n\n  @Input() blockOptionActions: BlockOptionAction[] | undefined;\n  @Output('handleBlockOptionAction') handleBlockOptionActionEmitter = new EventEmitter();\n\n  readonly AdjustBlockPositionActions = AdjustBlockPositionActions; \n  @Output('adjustBlockPosition') adjustBlockPositionEmitter = new EventEmitter();\n\n  constructor() { }\n\n  adjustBlockPosition(action: AdjustBlockPositionActions) {\n    this.adjustBlockPositionEmitter.emit(action);\n  }\n\n  handleBlockOptionAction(action: string) {\n    this.handleBlockOptionActionEmitter.emit(action);\n  }\n}\n","<div class=\"toolbar-container\">\n  <div class=\"toolbar-buttons-container\">\n    <div class=\"toolbar-buttons mat-elevation-z4\"\n      #blockListTigger=\"cdkOverlayOrigin\"\n      cdkOverlayOrigin\n      matRipple \n      (click)=\"openBlocksList()\">\n      <span class=\"material-icons\">add</span>\n    </div>\n    <div class=\"toolbar-buttons mat-elevation-z4\"\n      cdkOverlayOrigin\n      #blockOptionListTigger=\"cdkOverlayOrigin\"\n      matRipple\n      (click)=\"openBlocksOptionList()\">\n      <span class=\"material-icons\">drag_indicator</span>\n    </div>\n  </div>\n</div>\n\n<!-- Block type search list -->\n<ng-template cdkConnectedOverlay\n  (overlayOutsideClick)=\"openBlocks = false\"\n  [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n  [cdkConnectedOverlayOpen]=\"openBlocks\"\n  [cdkConnectedOverlayHasBackdrop]=\"true\"\n  [cdkConnectedOverlayOffsetY]=\"15\"\n  [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\">\n  <searchable-block-list (addBlock)=\"addBlock($event)\"></searchable-block-list>\n</ng-template>\n\n\n<!-- Options List-->\n<ng-template\n  cdkConnectedOverlay\n  (overlayOutsideClick)=\"openBlocksOption = false\"\n  [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n  [cdkConnectedOverlayOpen]=\"openBlocksOption\"\n  [cdkConnectedOverlayHasBackdrop]=\"true\"\n  [cdkConnectedOverlayOffsetX]=\"-49\"\n  [cdkConnectedOverlayOffsetY]=\"15\"\n  [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\">\n  <block-options-list\n    [blockOptionActions]=\"blockOptionActions\"\n    (handleBlockOptionAction)=\"handleBlockOptionAction($event)\"\n    (adjustBlockPosition)=\"adjustBlockPosition($event)\"></block-options-list>\n</ng-template>\n\n\n\n","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { AdjustBlockPositionActions, BlockOptionAction, NgxEditorjsService, SearchableBlock } from '../../../ngx-editorjs.service';\n@Component({\n  selector: 'toolbar-block',\n  templateUrl: './toolbar-block.component.html',\n  styleUrls: ['./toolbar-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarBlockComponent {\n\n  @Output('handleBlockOptionAction') handleBlockOptionActionEmitter = new EventEmitter();\n\n  @Input() blockId!: string;\n  @Input() blockOptionActions: BlockOptionAction[] | undefined;\n\n  openBlocks = false;\n  openBlocksOption = false;\n\n  constructor(private ngxEdotorjsService: NgxEditorjsService) {}\n  \n  openBlocksList() {\n    this.openBlocks = !this.openBlocks;\n  }\n  \n  openBlocksOptionList() {\n    this.openBlocksOption = !this.openBlocksOption;\n  }\n  \n  adjustBlockPosition(action: AdjustBlockPositionActions) {\n    this.ngxEdotorjsService.adjustBlockPositionSubject.next({ blockId: this.blockId, action });\n    this.closeLists();\n  }\n\n  addBlock({ componentInstanceName, component }: SearchableBlock) {\n    this.ngxEdotorjsService.addNewBlockSubject.next({ blockId: this.blockId, component, componentInstanceName: componentInstanceName ?? '' });\n    this.closeLists();\n  }\n\n  closeLists() {\n    this.openBlocks = false;\n    this.openBlocksOption = false;\n  }\n\n  handleBlockOptionAction(action: string) {\n    this.handleBlockOptionActionEmitter.emit(action);\n  }\n}\n","<div class=\"block-list-container mat-elevation-z8\">\n  <div class=\"block-option-list-panel\">\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('bold')\">\n      <mat-icon>format_bold</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('italic')\">\n      <mat-icon>format_italic</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('underlined')\">\n      <mat-icon>format_underlined</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('strikethrough')\">\n      <mat-icon>strikethrough_s</mat-icon>\n    </div>\n    <!-- <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('hiliteColor', 'red')\">\n      <mat-icon>highlight</mat-icon>\n    </div> -->\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addCustomInlineTag('code', 'inline-code-example')\">\n      <mat-icon>code</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"openUrlInput()\">\n      <mat-icon>insert_link</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"clearTags()\">\n      <mat-icon>format_clear</mat-icon>\n    </div>\n\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('justifyLeft')\">\n      <mat-icon>format_align_left</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('justifyCenter')\">\n      <mat-icon>format_align_center</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('justifyRight')\">\n      <mat-icon>format_align_right</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('justifyFull')\">\n      <mat-icon>format_align_justify</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('insertUnorderedList')\">\n      <mat-icon>format_list_bulleted</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('insertOrderedList')\">\n      <mat-icon>format_list_numbered</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('hiliteColor', 'yellow')\">\n      <mat-icon>highlight</mat-icon>\n    </div>\n  </div>\n  <div *ngIf=\"showURLInputField\" class=\"block-option-list-panel\">\n    <input type=\"text\" placeholder=\"Enter URL\" class=\"block-option-input\" [(ngModel)]=\"url\" />\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"createLink()\">\n      <mat-icon>add</mat-icon>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'inline-toolbar-block',\n  templateUrl: './inline-toolbar-block.component.html',\n  styleUrls: ['./inline-toolbar-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InlineToolbarBlockComponent implements OnInit {\n\n  @Input() selection!: Selection;\n\n  @Output('closeInlineToobarOverlay') closeInlineToobarOverlayEmitter = new EventEmitter();\n\n  url: string = '';\n  showURLInputField: boolean = false;\n  savedRanges: Range[] = [];\n\n  constructor(private readonly renderer: Renderer2) { }\n\n  ngOnInit(): void {\n  }\n  \n  closeInlineToobarOverlay() {\n    this.closeInlineToobarOverlayEmitter.emit();\n  }\n\n  addInlineTag(tag: string, optionValue?: string | null) {\n    // https://stackoverflow.com/questions/60581285/execcommand-is-now-obsolete-whats-the-alternative\n    document.execCommand(tag, true, optionValue!);\n    this.closeInlineToobarOverlay();\n  }\n\n  addCustomInlineTag(tag: string, className?: string | null) {\n    const range = this.selection.getRangeAt(0);\n    const element = this.renderer.createElement(tag);\n    element.className = className ?? '';\n    element.innerHTML = range.toString();\n    range.deleteContents();\n    range.insertNode(element);\n    this.closeInlineToobarOverlay();\n  }\n\n  clearTags() {\n      document.execCommand('removeFormat');\n      document.execCommand('unlink');\n      this.closeInlineToobarOverlay();\n    }\n\n  openUrlInput() {\n    this.savedRanges.push(this.selection.getRangeAt(0));\n    this.showURLInputField = true;\n  }\n\n  createLink() {\n    this.selection.removeAllRanges();\n    this.selection.addRange(this.savedRanges.pop()!);\n    document.execCommand('createLink', false, this.url);\n    this.closeInlineToobarOverlay();\n  }\n}\n","import { ComponentPortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport {\n  Component,\n  OnInit,\n  Self,\n  HostListener,\n  ElementRef,\n  ApplicationRef,\n  Injector,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  Input,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { merge, Subject, take, takeUntil } from 'rxjs';\nimport { BlockOptionAction, NgxEditorjsService } from '../../../ngx-editorjs.service';\nimport { ToolbarBlockComponent } from '../toolbar-block/toolbar-block.component';\nimport { InlineToolbarBlockComponent } from '../inline-toolbar-block/inline-toolbar-block.component';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\n\n@Component({ template: '' })\nexport class BaseBlockComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  constructor(\n    @Self() public controlDir: NgControl,\n    private appRef: ApplicationRef,\n    private injector: Injector,\n    private viewContainerRef: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private ngxEdotorjsService: NgxEditorjsService,\n    private overlay: Overlay,\n    public ngZone: NgZone\n  ) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  destory: Subject<boolean> = new Subject();\n\n  @Input() blockId!: string;\n  @Input() \n  set savedAction(action: string) {\n    this.handleBlockOptionAction(action);\n  }\n\n  blockOptionActions: BlockOptionAction[] | undefined;\n   \n  isActive: boolean = false;\n  error: string = '';\n  escalateMsg: boolean = true;\n  value: string = '';\n  disabled: boolean = false;\n  valid: boolean = true;\n\n  basePortalOutlet = new DomPortalOutlet(\n    this.viewContainerRef.element.nativeElement,\n    this.componentFactoryResolver,\n    this.appRef,\n    this.injector\n  );\n\n  viewChild!: ElementRef;\n\n  toolbarBlockPortal!: ComponentPortal<ToolbarBlockComponent>;\n  overlayRef!: OverlayRef;\n\n  useInlineToolbar: boolean = true;\n  useInputType: boolean = true;\n  useOnPasteHTMLRemoval: boolean = true;\n\n  ngOnInit() {\n    this.controlDir.valueChanges?.subscribe((val) => this.valueChange(val));    \n  }\n\n  ngOnDestroy(): void {\n    this.destory.next(true);\n  }\n\n  valueChange(value: string): void {\n    this.valid = this.controlDir.control?.status !== 'INVALID';\n  }\n\n  writeValue(value: string): void {\n    this.value = value ?? '';\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onBlur(event?: InputEvent) {\n    this.isActive = event?.data !== '';\n    this.escalateMsg = this.valid === false;\n    this.onTouched();\n  }\n\n  onFocus() {\n    this.isActive = true;\n    this.escalateMsg = false;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  onTouched = () => {};\n\n  onChange: (value: string) => void = () => {};\n\n  changeValue(value: string) {\n    this.value = value;\n    this.onChange(value);\n  }\n\n  @HostListener('input')\n  onInput() {\n    this.useInputType && this.onChange(this.viewChild.nativeElement.innerHTML);\n  }\n\n  @HostListener('mouseup', ['$event.target'])\n  onMouseUp(event: Event) {\n    requestAnimationFrame(() => this.checkToDisplayInlineToolbarBlock());\n  }\n\n  @HostListener('mouseenter', ['$event.target'])\n  onMouseEnter(event: Event) {    \n    this.removeAndAddToolbarBlock();\n  }\n\n  @HostListener('paste', ['$event'])\n  onPaste(event: Event) {\n    if(this.useOnPasteHTMLRemoval) {\n      event.preventDefault();\n      const text = (event as ClipboardEvent).clipboardData?.getData('text/plain');\n      document.execCommand('insertText', false, text);\n    }\n  }\n\n  removeAndAddToolbarBlock() {\n    if(!this.basePortalOutlet.hasAttached()) {\n      this.ngxEdotorjsService.toolbarComponentDetachSubject.next(true);\n\n      this.toolbarBlockPortal = new ComponentPortal(ToolbarBlockComponent);\n      const toolbarComponent = this.basePortalOutlet.attach(this.toolbarBlockPortal);\n      \n      toolbarComponent.instance.blockId = this.blockId;\n      toolbarComponent.instance.blockOptionActions = this.blockOptionActions;\n\n      toolbarComponent.instance.handleBlockOptionActionEmitter\n      .pipe(takeUntil(this.destory))\n      .subscribe((action: string) => {\n        this.ngxEdotorjsService.updateBlockOptionActionSubject.next({ blockId: this.blockId, action });\n        this.handleBlockOptionAction(action);\n      });\n\n      this.ngxEdotorjsService.toolbarComponentDetach$\n      .pipe(take(1))\n      .subscribe(() => this.detachToolbarComponent())\n    }\n  }\n\n  // Override this method in child component\n  handleBlockOptionAction(action: string) { }\n\n  detachToolbarComponent() {\n    this.basePortalOutlet.detach();\n    // this.viewContainerRef.remove(0);\n  }\n\n  checkToDisplayInlineToolbarBlock() {\n    const selection = window.getSelection();\n    if(this.useInlineToolbar && selection && selection.toString() !== '') {\n      const range = selection.getRangeAt(0);\n      const selectionRect = range.getBoundingClientRect();\n      // console.log({\n      //   event,\n      //   selection,\n      //   selectionText: selection?.toString(),\n      //   range,\n      //   selectionRect\n      // });\n\n      this.overlayRef = this.overlay.create({\n        hasBackdrop: true,\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n        positionStrategy: this.overlay.position()\n          .flexibleConnectedTo(selectionRect!)\n          .withPositions([{\n            offsetY: 8,\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top',\n          }])\n      });\n      const inlineToolbar = this.overlayRef.attach(new ComponentPortal(InlineToolbarBlockComponent));\n      inlineToolbar.instance.selection = selection;\n\n      merge(this.overlayRef.backdropClick(), inlineToolbar.instance.closeInlineToobarOverlayEmitter)\n      .pipe(take(1))\n      .subscribe(() => this.overlayRef.dispose());\n    }\n  }\n}\n","import { AfterContentInit, AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  standalone: true,\n  selector: '[autofocus]'\n})\nexport class AutofocusDirective implements AfterContentInit {\n  _autofocus!: boolean;\n  @Input() set autofocus(condition: boolean) {\n    this._autofocus = condition !== false;\n  }\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngAfterContentInit() {\n    if (this._autofocus || typeof this._autofocus === 'undefined') {\n      const nativeElement = this.elementRef.nativeElement;\n      setTimeout(() => nativeElement.focus?.());\n    }\n  }\n}\n","import { Component, OnInit, ViewChild, AfterViewInit, ElementRef, Input, ViewChildren, QueryList } from '@angular/core';\nimport { BlockOptionAction } from '../../../ngx-editorjs.service';\nimport { BaseBlockComponent } from '../base-block/base-block.component';\n\n@Component({\n  selector: 'ngx-editorjs-header-block',\n  template: `\n    <span #header [ngSwitch]=\"whichHeader\">\n        <h2 *ngSwitchCase=\"'h2'\" class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h2>\n        <h3 *ngSwitchCase=\"'h3'\" class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h3>\n        <h4 *ngSwitchCase=\"'h4'\" class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h4>\n        <h5 *ngSwitchCase=\"'h5'\" class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h5>\n        <h6 *ngSwitchCase=\"'h6'\" class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h6>\n        <h1 *ngSwitchDefault class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h1>\n    </span>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; }\n  `]\n})\nexport class NgxEditorjsHeaderBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('header', { read: ElementRef }) element!: ElementRef<HTMLHeadingElement>;\n\n  whichHeader!: string\n\n  override blockOptionActions: BlockOptionAction[] = [\n    { action: 'h1', text: 'H1' },\n    { action: 'h2', text: 'H2' },\n    { action: 'h3', text: 'H3' },\n    { action: 'h4', text: 'H4' },\n    { action: 'h5', text: 'H5' },\n    { action: 'h6', text: 'H6' }\n  ];\n\n  ngAfterViewInit(): void {\n    super.viewChild = new ElementRef(this.element.nativeElement.firstElementChild);\n  }\n\n  override handleBlockOptionAction(action: string) {\n    this.whichHeader = action;\n    // Have to wait for the next frame to get the new element\n    if (this.element) {\n      requestAnimationFrame(() => {\n        super.viewChild = new ElementRef(this.element.nativeElement.firstElementChild);\n        this.value = this.controlDir.control?.value ?? '';\n      });\n    }\n  }\n}\n","import { Component, Input, ViewRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n@Component({\n  selector: 'ngx-editorjs-meditator-header-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-header-block [blockId]=\"blockId\" [formControlName]=\"formControlName\" [savedAction]=\"savedAction\"></ngx-editorjs-header-block>\n    </div>\n  `,\n})\nexport class NgxEditorjsHeaderBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n  @Input() savedAction!: string;\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, ViewContainerRef, ViewRef } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { combineLatest, concatMap, forkJoin, from, map, of, Subject, takeUntil, tap } from 'rxjs';\nimport { NgxEditorjsHeaderBlockMediator } from './components/blocks/ngx-editorjs-header-block/ngx-editorjs-header-block.mediator';\nimport { \n  AdjustBlockPosition,\n  AdjustBlockPositionActions,\n  Block,\n  BlockMediatorComponent,\n  CreateBlockAction,\n  NgxEditorjsService,\n  NgxEditorjsOutputBlock,\n  SearchableBlock,\n  UpdateBlockOptionAction\n} from './ngx-editorjs.service';\n\n// ['header',{ type: 'header', dataClean: '' }],\n// ['paragraph', { type: 'paragraph', dataClean: '' }],\n// ['list', { type: 'list', dataClean: '' }],\n// ['image', { type: 'image', dataClean: '' }],\n// ['quote', { type: 'quote', dataClean: '' }],\n// ['code', { type: 'code', dataClean: '' }],\n// ['delimiter', { type: 'delimiter', dataClean: '' }],\n// ['raw', { type: 'raw', dataClean: '' }],\n// ['table', { type: 'table', dataClean: '' }],\n// ['linkTool', { type: 'linkTool', dataClean: '' }],\n// ['embed', { type: 'embed', dataClean: '' }],\n// ['marker', { type: 'marker', dataClean: '' }],\n// ['warning', { type: 'warning', dataClean: '' }],\n// ['checklist', { type: 'checklist', dataClean: '' }],\n// ['inlineCode', { type: 'inlineCode', dataClean: '' }],\n// ['delimiter', { type: 'delimiter', dataClean: '' }],\n\nexport const HeaderSearchableBlock: SearchableBlock = {\n  name: 'Header',\n  component: NgxEditorjsHeaderBlockMediator,\n  componentInstanceName: 'NgxEditorjsHeaderBlockMediator',\n};\n\n@Component({\n  selector: 'ngx-editorjs',\n  template: `\n    <form [formGroup]=\"formGroup\">\n      <ng-container #ngxEditor></ng-container>\n    </form>\n  `,\n  styles: []\n})\nexport class NgxEditorjsComponent implements OnInit, OnDestroy {\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private ngxEditorjsService: NgxEditorjsService\n  ) {}\n\n  @Input() \n  set inputData(blocks: NgxEditorjsOutputBlock[]) {\n    requestAnimationFrame(() => this.clearSortCreateNgxEditorjsBlocks(blocks));\n  }\n\n  @Input() requestValue!: Subject<boolean>;\n  @Output() valueRequested = new EventEmitter<NgxEditorjsOutputBlock[]>();\n\n  // @Output('ngxOnInitForm') ngxOnInitForm = new EventEmitter<FormGroup>();\n\n  @ViewChild('ngxEditor', { read: ViewContainerRef, static: true }) ngxEditor!: ViewContainerRef;\n\n  formGroup: FormGroup = this.formBuilder.group({});\n  blockControlMap: Map<string, Block> = new Map();\n\n  destroy: Subject<void> = new Subject();\n\n\n  ngOnInit(): void {\n    // @TODO: add a way only add on first load\n    this.ngxEditorjsService.blocks.unshift(HeaderSearchableBlock);\n    \n    // this.ngxOnInitForm.emit(this.formGroup);\n    this.requestValue\n    .pipe(takeUntil(this.destroy))\n    .subscribe(() => this.parentRequestCurrentValue());\n\n    this.ngxEditorjsService.adjustBlockPosition$\n    .pipe(takeUntil(this.destroy))\n    .subscribe((adjustBlockPosition: AdjustBlockPosition) => {\n      adjustBlockPosition.action === AdjustBlockPositionActions.DELETE ? \n      this.deleteNgxEditorjsBlock(adjustBlockPosition) : this.moveNgxEditorjsBlock(adjustBlockPosition);\n    });\n\n    this.ngxEditorjsService.addNewBlock$\n    .pipe(takeUntil(this.destroy))\n    .subscribe((block) => this.createNgxEditorjsBlock(block));\n\n    this.ngxEditorjsService.updateBlockOptionAction$\n    .pipe(takeUntil(this.destroy))\n    .subscribe((block) => this.updateNgxEditorjsBlock(block));\n\n    // this.clearSortCreateNgxEditorjsBlocks([]);\n  }\n\n  ngOnDestroy(): void {\n    // @todo: add a way only add on first load\n    this.ngxEditorjsService.blocks.shift();\n    this.destroy.next();\n  }\n\n  loadNgxEditorjsBlock({ blockId, component, value, savedAction, componentInstanceName }: CreateBlockAction): void {\n    this.formGroup.addControl(blockId!, this.formBuilder.control(value, []));\n\n    const componentRef = this.ngxEditor.createComponent(component!, { index: this.ngxEditor.length });\n    const blockMediator = componentRef.instance as BlockMediatorComponent;\n    blockMediator.blockId = blockId!;\n    blockMediator.form = this.formGroup;\n    blockMediator.formControlName = blockId!;      \n    blockMediator.savedAction = savedAction;\n\n    this.blockControlMap.set(blockId!, {\n      sortIndex: this.ngxEditor.length - 1,\n      componentRef: componentRef,\n      componentInstanceName: componentInstanceName,\n      dataClean: value!,\n      savedAction\n    });\n  };\n\n  createNgxEditorjsBlock({ blockId, component, componentInstanceName }: CreateBlockAction): void {\n    \n    if(!component || !blockId) return;\n    const block = component ?? NgxEditorjsHeaderBlockMediator;\n    const controlName = Math.random().toString(36).slice(2);\n    \n    let viewRef: ViewRef | undefined;\n    if(blockId) viewRef = this.blockControlMap.get(blockId)!.componentRef.hostView;\n\n    this.formGroup.addControl(controlName, this.formBuilder.control('', []));\n\n    const sortIndex = viewRef ? this.ngxEditor.indexOf(viewRef) + 1 : 0;\n    const componentRef = this.ngxEditor.createComponent(block, { index: sortIndex });\n    const blockMediator = componentRef.instance as BlockMediatorComponent;\n    blockMediator.blockId = controlName;\n    blockMediator.form = this.formGroup;\n    blockMediator.formControlName = controlName;\n\n    this.blockControlMap.forEach((block) => { if(block.sortIndex >= sortIndex) block.sortIndex++ });\n    this.blockControlMap.set(controlName, { sortIndex, dataClean: '', componentRef, componentInstanceName });\n  }\n\n  moveNgxEditorjsBlock({ blockId, action }: AdjustBlockPosition): void {\n    const viewRef = this.blockControlMap.get(blockId)!.componentRef.hostView;\n    const sortIndex = this.ngxEditor.indexOf(viewRef);\n    const newSortIndex = action === AdjustBlockPositionActions.UP ? sortIndex - 1 : sortIndex + 1;\n    const inRange = newSortIndex >= 0 && newSortIndex <= this.ngxEditor.length - 1;\n    this.ngxEditor.move(viewRef, inRange ? newSortIndex : sortIndex);\n\n    this.blockControlMap.forEach((block) => {\n      if(block.sortIndex === sortIndex) block.sortIndex = newSortIndex;\n      else if(block.sortIndex === newSortIndex) block.sortIndex = sortIndex;\n    });\n  }\n\n  updateNgxEditorjsBlock({ blockId, action }: UpdateBlockOptionAction): void {\n    this.blockControlMap.forEach((block, blockIdKey) => {\n      if(blockIdKey === blockId) block.savedAction = action;\n    });\n  }\n\n  deleteNgxEditorjsBlock({ blockId }: AdjustBlockPosition): void {\n    const viewRef = this.blockControlMap.get(blockId)!.componentRef.hostView;\n    const index = this.ngxEditor.indexOf(viewRef);\n    if (this.ngxEditor.length - 1 !== 0) {\n      this.blockControlMap.delete(blockId);\n      this.ngxEditor.remove(index);\n      this.blockControlMap.forEach((block) => {\n        if(block.sortIndex > index) block.sortIndex--;\n      });\n    }\n  }\n\n  parentRequestCurrentValue(): void {\n    const blocks: NgxEditorjsOutputBlock[] = [];\n    this.blockControlMap.forEach((block, key) => {\n      blocks.push({\n        blockId: key,\n        sortIndex: block.sortIndex,\n        componentInstanceName: block.componentInstanceName,\n        dataClean: this.formGroup.get(key)?.value,\n        savedAction: block.savedAction\n      })\n    });\n    this.valueRequested.emit(blocks);\n  }\n\n  clearSortCreateNgxEditorjsBlocks(blocks: NgxEditorjsOutputBlock[]): void {\n    if(blocks === undefined || blocks.length === 0 ) {\n      this.createNgxEditorjsBlock({ blockId: null, component: null, componentInstanceName: '' });\n      return;\n    }\n    // Clear\n    this.ngxEditor.clear();\n    this.blockControlMap.clear();\n    // Sort\n    blocks.sort((a, b) => a.sortIndex - b.sortIndex);\n    // Create\n    blocks.forEach((block) => {\n      const componentInstanceObject = \n        this.ngxEditorjsService.blocks.find((b) => b.componentInstanceName === block.componentInstanceName)\n          ?? this.ngxEditorjsService.blocks[0];\n\n      const createBlockAction: CreateBlockAction = { \n        blockId: block.blockId,\n        component: componentInstanceObject?.component,\n        componentInstanceName: block.componentInstanceName,\n        value: block.dataClean,\n        componentSortIndex: block.sortIndex,\n        savedAction: block.savedAction\n      };\n      this.loadNgxEditorjsBlock(createBlockAction);\n    });\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutofocusDirective } from '../../../directives/autofocus/autofocus.directive';\n\nimport { NgxEditorjsHeaderBlockComponent } from './ngx-editorjs-header-block.component';\nimport { NgxEditorjsHeaderBlockMediator } from './ngx-editorjs-header-block.mediator';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    NgxEditorjsHeaderBlockComponent,\n    NgxEditorjsHeaderBlockMediator\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AutofocusDirective\n  ],\n  exports: [\n    NgxEditorjsHeaderBlockMediator\n  ]\n})\nexport class NgxEditorjsHeaderBlockModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { AutofocusDirective } from './autofocus.directive';\n\n\n\n@NgModule({\n  declarations: [\n    // AutofocusDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    // AutofocusDirective\n  ]\n})\nexport class AutofocusModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToolbarBlockComponent } from './toolbar-block.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { AutofocusModule } from '../../../directives/autofocus/autofocus.module';\n\nimport { MatLegacyListModule as MatListModule } from '@angular/material/legacy-list';\nimport { MatLegacyFormFieldModule as MatFormFieldModule } from '@angular/material/legacy-form-field'\nimport { MatLegacyInputModule as MatInputModule } from '@angular/material/legacy-input'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatRippleModule } from '@angular/material/core';\nimport { SearchableBlockListComponent } from './searchable-block-list/searchable-block-list.component';\nimport { BlockOptionsListComponent } from './block-options-list/block-options-list.component'\n\n\n@NgModule({\n  declarations: [\n    ToolbarBlockComponent,\n    SearchableBlockListComponent,\n    BlockOptionsListComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    OverlayModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatIconModule,\n    MatRippleModule,\n    AutofocusModule\n  ],\n  exports: [\n    ToolbarBlockComponent\n  ]\n})\nexport class ToolbarBlockModule { }\n","import { Component, Input } from '@angular/core';\n@Component({\n  selector: 'meditator-inline-toolbar-block',\n  template: `<inline-toolbar-block></inline-toolbar-block>`,\n})\nexport class InlineToolbarBlockMediator {\n  @Input() attachPosition!: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InlineToolbarBlockComponent } from './inline-toolbar-block.component';\nimport { InlineToolbarBlockMediator } from './inline-toolbar-block.mediator';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatLegacyListModule as MatListModule } from '@angular/material/legacy-list';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    InlineToolbarBlockMediator,\n    InlineToolbarBlockComponent\n  ],\n  imports: [\n    CommonModule,\n    MatListModule,\n    MatIconModule,\n    MatRippleModule,\n    FormsModule\n  ]\n})\nexport class InlineToolbarBlockModule { }\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsComponent } from './ngx-editorjs.component';\nimport { NgxEditorjsHeaderBlockModule } from './components/blocks/ngx-editorjs-header-block/ngx-editorjs-header-block.module';\nimport { ToolbarBlockModule } from './components/blocks/toolbar-block/toolbar-block.module';\nimport { AutofocusModule } from './directives/autofocus/autofocus.module';\nimport { CommonModule } from '@angular/common';\nimport { InlineToolbarBlockModule } from './components/blocks/inline-toolbar-block/inline-toolbar-block.module';\n@NgModule({\n  declarations: [\n    NgxEditorjsComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgxEditorjsHeaderBlockModule,\n    ToolbarBlockModule,\n    AutofocusModule,\n    InlineToolbarBlockModule,\n  ],\n  exports: [\n    NgxEditorjsComponent\n  ]\n})\nexport class NgxEditorjsModule { }\n","/*\n * Public API Surface of ngx-editorjs\n */\n\nexport * from './lib/ngx-editorjs.service';\nexport * from './lib/ngx-editorjs.component';\nexport * from './lib/ngx-editorjs.module';\n\nexport * from './lib/components/blocks/base-block/base-block.component';\nexport * from './lib/directives/autofocus/autofocus.directive';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["RouterModule","routes","path","pathMatch","loadChildren","then","m","HomeModule","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","consts","template","i0","BrowserModule","BrowserAnimationsModule","MatLegacyButtonModule","MatButtonModule","MatIconModule","NavbarModule","HttpClientModule","NGX_EDITORJS_OPTIONS","NGX_EDITORJS_CLIENT_OPTIONS","NgxEditorjsParagraphBlockMediator","NgxEditorjsParagraphClientBlockComponent","NgxEditorjsBlockquotesBlockMediator","NgxEditorjsBlockquotesClientBlockComponent","NgxEditorjsImageBlockMediator","NgxEditorjsImageClientBlockComponent","NgxEditorjsCodeBlockMediator","NgxEditorjsCodeClientBlockComponent","NgxEditorjsQuizBlockMediator","NgxEditorjsQuizClientBlockComponent","NgxEditorjsMermaidBlockMediator","AppModule","bootstrap","provide","useValue","blocks","name","component","componentInstanceName","declarations","NavbarComponent","CommonModule","ThemePickerModule","ThemePickerService","ThemePickerComponent","themePickerService","iconRegistry","sanitizer","Map","themeExampleIconURL","bypassSecurityTrustResourceUrl","THEME_EXAMPLE_ICON","addSvgIcon","themeName","getStoredThemeName","selectTheme","value","NOT_FOUND","DEFAULT_THEME","ngOnInit","theme","setStyle","storeTheme","currentTheme","MatLegacyMenuModule","MatMenuModule","MatLegacyTooltipModule","MatTooltipModule","DOCUMENT","document","webstorageService","setLocalstorageItem","key","STRORAGE_KEY","getLocalstorageItem","href","getLinkElementForKey","setAttribute","removeStyle","existingLinkElement","getExistingLinkElementByKey","head","removeChild","createLinkElementWithKey","querySelector","linkEl","createElement","classList","add","appendChild","factory","Subject","WebstorageService","localStorageValueChangeSub","asObservable","sessionStorageValueChangeSub","getLocalStorageSize","Blob","Object","values","localStorage","size","item","getItem","LOCAL_STORAGE_ITEM_NOT_FOUND_ERROR","next","setItem","removeLocalstorageItem","removeItem","clearLocalstorage","clear","getSessionStorageSize","sessionStorage","getSessionStorageItem","SESSION_STORAGE_ITEM_NOT_FOUND_ERROR","setSessionStorageItem","removeSessionStorageItem","clearSessionStorage","providedIn","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error","NgxEditorBlockquotesBlockService","Injectable","args","Component","selector","styles","Input","NgxEditorjsBlockquotesBlockComponent","BaseBlockComponent","ngAfterViewInit","viewChild","element","onMouseEnter","event","AutofocusDirective","standalone","ViewChild","ReactiveFormsModule","blockId","form","formControlName","NgxEditorBlockquotesBlockModule","NgModule","InjectionToken","NgxEditorjsClientService","options","Optional","Inject","NgxEditorjsHeaderClientBlockComponent","savedAction","action","whichHeader","changeDetection","OnPush","NgxEditorjsClientComponent","ngxEditorjsClientService","inputData","requestAnimationFrame","clearSortCreateNgxEditorjsBlocks","unshift","HeaderSearchableBlock","ngxEditorClient","sort","a","b","sortIndex","forEach","block","componentInstanceObject","find","createBlockAction","dataClean","componentSortIndex","loadNgxEditorjsBlock","componentRef","createComponent","index","length","blockMediator","instance","i1.NgxEditorjsClientService","ViewContainerRef","read","static","NgxEditorjsClientModule","NgxEditorjsCodeBlockService","lineNumbers","mode","readOnly","codeMirrorOptions","CodemirrorModule","FormsModule","NgxEditorjsCodeBlockComponent","icon","extraKeys","handleBlockOptionAction","NgxEditorjsCodeBlockModule","NgxEditorjsImageBlockService","url","title","_value","JSON","parse","activeImageClass","onImageClick","log","ImageConfigComponent","formBuilder","required","EventEmitter","imageConfigForm","group","Validators","statusChanges","pipe","takeUntil","destory","subscribe","setErrorsMessages","imageConfigFormErrorMessages","ngOnDestroy","updateImage","imageValue","emit","closeConfig","formGroup","formControlMessages","keys","controls","errors","get","errorMessages","MatInputModule","i5","MatFormFieldModule","Output","NgxEditorjsImageBlockComponent","openEditUrlOverlay","changeValue","_openEditUrlOverlay","stringify","i1","i2","NgxEditorjsImageBlockModule","NgxEditorjsMermaidBlockService","MermaidConfigComponent","newValue","updateMermaid","mermaidValue","inputs","outputs","features","ctx","mermaid","parseError","hash","warn","SafeHtmlPipe","sanitized","transform","bypassSecurityTrustHtml","pure","Pipe","NgxEditorjsMermaidBlockComponent","mermaidAPI","renderMermaidDiagram","mermaidDiagram","uniqueId","now","Math","floor","random","ngZone","runOutsideAngular","_mermaidAPI","render","data","run","_mermaidDiagramSVG","svg","initialize","startOnLoad","_openEditMermaidOverlay","viewQuery","dependencies","i4","mermaidContainer","encapsulation","NgxEditorParagraphBlockService","NgxEditorjsParagraphBlockComponent","NgxEditorParagraphBlockModule","NgxEditorjsQuizBlockService","validateRatioOptions","control","optionsArray","QuizConfigComponent","question","correctAnswer","ratioOptions","quizConfigForm","undefined","correctAnswerResponse","incorrectAnswerResponse","array","map","option","quizConfigFormErrorMessages","updateQuiz","quizValue","addRatioOption","push","removeRatioOption","setValue","removeAt","i3","MatSelectModule","ChangeDetectionStrategy","NgxEditorjsQuizBlockComponent","openEditQuizOverlay","_openEditQuizOverlay","MatRatioModule","onQuizAnswerClick","answerSubmited","isAnswerCorrect","userAnswer","answerResponse","NgxEditorjsService","toolbarComponentDetachSubject","adjustBlockPositionSubject","addNewBlockSubject","updateBlockOptionActionSubject","AdjustBlockPositionActions","SearchableBlockListComponent","ngxEdotorjsService","FormControl","blockCtrl","valueChanges","startWith","filteredBlocks$","combineLatest","of","filter$","filterString","replace","pattern","split","v","join","regex","RegExp","filter","match","addBlock","addBlockEmitter","BlockOptionsListComponent","adjustBlockPosition","adjustBlockPositionEmitter","handleBlockOptionActionEmitter","blockOptionActions","ToolbarBlockComponent","openBlocksList","openBlocks","openBlocksOptionList","openBlocksOption","closeLists","InlineToolbarBlockComponent","renderer","closeInlineToobarOverlay","closeInlineToobarOverlayEmitter","addInlineTag","tag","optionValue","execCommand","addCustomInlineTag","className","range","selection","getRangeAt","innerHTML","toString","deleteContents","insertNode","clearTags","openUrlInput","savedRanges","showURLInputField","createLink","removeAllRanges","addRange","pop","controlDir","appRef","injector","viewContainerRef","componentFactoryResolver","overlay","DomPortalOutlet","nativeElement","valueAccessor","val","valueChange","valid","status","writeValue","registerOnChange","fn","onChange","registerOnTouched","onTouched","onBlur","isActive","escalateMsg","onFocus","setDisabledState","isDisabled","disabled","onInput","useInputType","onMouseUp","checkToDisplayInlineToolbarBlock","removeAndAddToolbarBlock","onPaste","useOnPasteHTMLRemoval","preventDefault","text","clipboardData","getData","basePortalOutlet","hasAttached","toolbarBlockPortal","ComponentPortal","toolbarComponent","attach","toolbarComponentDetach$","take","detachToolbarComponent","detach","window","getSelection","useInlineToolbar","selectionRect","getBoundingClientRect","overlayRef","create","hasBackdrop","backdropClass","positionStrategy","position","flexibleConnectedTo","withPositions","offsetY","originX","originY","overlayX","overlayY","inlineToolbar","merge","backdropClick","dispose","hostBindings","Self","HostListener","autofocus","condition","_autofocus","elementRef","ngAfterContentInit","setTimeout","focus","Directive","NgxEditorjsHeaderBlockComponent","ElementRef","firstElementChild","NgxEditorjsHeaderBlockMediator","NgxEditorjsComponent","ngxEditorjsService","requestValue","destroy","parentRequestCurrentValue","adjustBlockPosition$","DELETE","deleteNgxEditorjsBlock","moveNgxEditorjsBlock","addNewBlock$","createNgxEditorjsBlock","updateBlockOptionAction$","updateNgxEditorjsBlock","shift","addControl","ngxEditor","blockControlMap","set","controlName","slice","viewRef","hostView","indexOf","newSortIndex","UP","inRange","move","blockIdKey","delete","remove","valueRequested","NgxEditorjsHeaderBlockModule","AutofocusModule","ToolbarBlockModule","OverlayModule","MatListModule","MatRippleModule","InlineToolbarBlockMediator","attachPosition","InlineToolbarBlockModule","NgxEditorjsModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}