{"version":3,"file":"node_modules_mermaid_dist_stateDiagram-v2-9765461d_js.js","mappings":"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","sources":["./node_modules/mermaid/dist/stateDiagram-v2-9765461d.js"],"sourcesContent":["import { D as DEFAULT_DIAGRAM_DIRECTION, a as DEFAULT_STATE_TYPE, b as DIVIDER_TYPE, S as STMT_RELATION, c as STMT_STATE, e as DEFAULT_NESTED_DOC_DIR, p as parser, d as db, s as styles } from \"./styles-47a825a5.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { select } from \"d3\";\nimport { l as log, g as getConfig, e as common } from \"./commonDb-573409be.js\";\nimport { r as render } from \"./index-5219d011.js\";\nimport { u as utils, k as configureSvgSize } from \"./utils-d622194a.js\";\nimport \"./mermaidAPI-3ae0f2f0.js\";\nimport \"stylis\";\nimport \"dompurify\";\nimport \"lodash-es/isEmpty.js\";\nimport \"dayjs\";\nimport \"khroma\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-2e77835f.js\";\nimport \"./createText-1f5f8f92.js\";\nimport \"@khanacademy/simple-markdown\";\nimport \"./svgDraw-2526cba0.js\";\nimport \"@braintree/sanitize-url\";\nimport \"lodash-es/memoize.js\";\nconst SHAPE_STATE = \"rect\";\nconst SHAPE_STATE_WITH_DESC = \"rectWithTitle\";\nconst SHAPE_START = \"start\";\nconst SHAPE_END = \"end\";\nconst SHAPE_DIVIDER = \"divider\";\nconst SHAPE_GROUP = \"roundedWithTitle\";\nconst SHAPE_NOTE = \"note\";\nconst SHAPE_NOTEGROUP = \"noteGroup\";\nconst CSS_DIAGRAM = \"statediagram\";\nconst CSS_STATE = \"state\";\nconst CSS_DIAGRAM_STATE = `${CSS_DIAGRAM}-${CSS_STATE}`;\nconst CSS_EDGE = \"transition\";\nconst CSS_NOTE = \"note\";\nconst CSS_NOTE_EDGE = \"note-edge\";\nconst CSS_EDGE_NOTE_EDGE = `${CSS_EDGE} ${CSS_NOTE_EDGE}`;\nconst CSS_DIAGRAM_NOTE = `${CSS_DIAGRAM}-${CSS_NOTE}`;\nconst CSS_CLUSTER = \"cluster\";\nconst CSS_DIAGRAM_CLUSTER = `${CSS_DIAGRAM}-${CSS_CLUSTER}`;\nconst CSS_CLUSTER_ALT = \"cluster-alt\";\nconst CSS_DIAGRAM_CLUSTER_ALT = `${CSS_DIAGRAM}-${CSS_CLUSTER_ALT}`;\nconst PARENT = \"parent\";\nconst NOTE = \"note\";\nconst DOMID_STATE = \"state\";\nconst DOMID_TYPE_SPACER = \"----\";\nconst NOTE_ID = `${DOMID_TYPE_SPACER}${NOTE}`;\nconst PARENT_ID = `${DOMID_TYPE_SPACER}${PARENT}`;\nconst G_EDGE_STYLE = \"fill:none\";\nconst G_EDGE_ARROWHEADSTYLE = \"fill: #333\";\nconst G_EDGE_LABELPOS = \"c\";\nconst G_EDGE_LABELTYPE = \"text\";\nconst G_EDGE_THICKNESS = \"normal\";\nlet nodeDb = {};\nlet graphItemCount = 0;\nconst setConf = function(cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    cnf[key];\n  }\n};\nconst getClasses = function(text, diagramObj) {\n  log.trace(\"Extracting classes\");\n  diagramObj.db.clear();\n  try {\n    diagramObj.parser.parse(text);\n    diagramObj.db.extract(diagramObj.db.getRootDocV2());\n    return diagramObj.db.getClasses();\n  } catch (e) {\n    return e;\n  }\n};\nfunction getClassesFromDbInfo(dbInfoItem) {\n  if (dbInfoItem === void 0 || dbInfoItem === null) {\n    return \"\";\n  } else {\n    if (dbInfoItem.classes) {\n      return dbInfoItem.classes.join(\" \");\n    } else {\n      return \"\";\n    }\n  }\n}\nfunction stateDomId(itemId = \"\", counter = 0, type = \"\", typeSpacer = DOMID_TYPE_SPACER) {\n  const typeStr = type !== null && type.length > 0 ? `${typeSpacer}${type}` : \"\";\n  return `${DOMID_STATE}-${itemId}${typeStr}-${counter}`;\n}\nconst setupNode = (g, parent, parsedItem, diagramStates, diagramDb, altFlag) => {\n  const itemId = parsedItem.id;\n  const classStr = getClassesFromDbInfo(diagramStates[itemId]);\n  if (itemId !== \"root\") {\n    let shape = SHAPE_STATE;\n    if (parsedItem.start === true) {\n      shape = SHAPE_START;\n    }\n    if (parsedItem.start === false) {\n      shape = SHAPE_END;\n    }\n    if (parsedItem.type !== DEFAULT_STATE_TYPE) {\n      shape = parsedItem.type;\n    }\n    if (!nodeDb[itemId]) {\n      nodeDb[itemId] = {\n        id: itemId,\n        shape,\n        description: common.sanitizeText(itemId, getConfig()),\n        classes: `${classStr} ${CSS_DIAGRAM_STATE}`\n      };\n    }\n    const newNode = nodeDb[itemId];\n    if (parsedItem.description) {\n      if (Array.isArray(newNode.description)) {\n        newNode.shape = SHAPE_STATE_WITH_DESC;\n        newNode.description.push(parsedItem.description);\n      } else {\n        if (newNode.description.length > 0) {\n          newNode.shape = SHAPE_STATE_WITH_DESC;\n          if (newNode.description === itemId) {\n            newNode.description = [parsedItem.description];\n          } else {\n            newNode.description = [newNode.description, parsedItem.description];\n          }\n        } else {\n          newNode.shape = SHAPE_STATE;\n          newNode.description = parsedItem.description;\n        }\n      }\n      newNode.description = common.sanitizeTextOrArray(newNode.description, getConfig());\n    }\n    if (newNode.description.length === 1 && newNode.shape === SHAPE_STATE_WITH_DESC) {\n      newNode.shape = SHAPE_STATE;\n    }\n    if (!newNode.type && parsedItem.doc) {\n      log.info(\"Setting cluster for \", itemId, getDir(parsedItem));\n      newNode.type = \"group\";\n      newNode.dir = getDir(parsedItem);\n      newNode.shape = parsedItem.type === DIVIDER_TYPE ? SHAPE_DIVIDER : SHAPE_GROUP;\n      newNode.classes = newNode.classes + \" \" + CSS_DIAGRAM_CLUSTER + \" \" + (altFlag ? CSS_DIAGRAM_CLUSTER_ALT : \"\");\n    }\n    const nodeData = {\n      labelStyle: \"\",\n      shape: newNode.shape,\n      labelText: newNode.description,\n      // typeof newNode.description === 'object'\n      //   ? newNode.description[0]\n      //   : newNode.description,\n      classes: newNode.classes,\n      style: \"\",\n      //styles.style,\n      id: itemId,\n      dir: newNode.dir,\n      domId: stateDomId(itemId, graphItemCount),\n      type: newNode.type,\n      padding: 15\n      //getConfig().flowchart.padding\n    };\n    nodeData.centerLabel = true;\n    if (parsedItem.note) {\n      const noteData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTE,\n        labelText: parsedItem.note.text,\n        classes: CSS_DIAGRAM_NOTE,\n        // useHtmlLabels: false,\n        style: \"\",\n        // styles.style,\n        id: itemId + NOTE_ID + \"-\" + graphItemCount,\n        domId: stateDomId(itemId, graphItemCount, NOTE),\n        type: newNode.type,\n        padding: 15\n        //getConfig().flowchart.padding\n      };\n      const groupData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTEGROUP,\n        labelText: parsedItem.note.text,\n        classes: newNode.classes,\n        style: \"\",\n        // styles.style,\n        id: itemId + PARENT_ID,\n        domId: stateDomId(itemId, graphItemCount, PARENT),\n        type: \"group\",\n        padding: 0\n        //getConfig().flowchart.padding\n      };\n      graphItemCount++;\n      const parentNodeId = itemId + PARENT_ID;\n      g.setNode(parentNodeId, groupData);\n      g.setNode(noteData.id, noteData);\n      g.setNode(itemId, nodeData);\n      g.setParent(itemId, parentNodeId);\n      g.setParent(noteData.id, parentNodeId);\n      let from = itemId;\n      let to = noteData.id;\n      if (parsedItem.note.position === \"left of\") {\n        from = noteData.id;\n        to = itemId;\n      }\n      g.setEdge(from, to, {\n        arrowhead: \"none\",\n        arrowType: \"\",\n        style: G_EDGE_STYLE,\n        labelStyle: \"\",\n        classes: CSS_EDGE_NOTE_EDGE,\n        arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n        labelpos: G_EDGE_LABELPOS,\n        labelType: G_EDGE_LABELTYPE,\n        thickness: G_EDGE_THICKNESS\n      });\n    } else {\n      g.setNode(itemId, nodeData);\n    }\n  }\n  if (parent && parent.id !== \"root\") {\n    log.trace(\"Setting node \", itemId, \" to be child of its parent \", parent.id);\n    g.setParent(itemId, parent.id);\n  }\n  if (parsedItem.doc) {\n    log.trace(\"Adding nodes children \");\n    setupDoc(g, parsedItem, parsedItem.doc, diagramStates, diagramDb, !altFlag);\n  }\n};\nconst setupDoc = (g, parentParsedItem, doc, diagramStates, diagramDb, altFlag) => {\n  log.trace(\"items\", doc);\n  doc.forEach((item) => {\n    switch (item.stmt) {\n      case STMT_STATE:\n        setupNode(g, parentParsedItem, item, diagramStates, diagramDb, altFlag);\n        break;\n      case DEFAULT_STATE_TYPE:\n        setupNode(g, parentParsedItem, item, diagramStates, diagramDb, altFlag);\n        break;\n      case STMT_RELATION:\n        {\n          setupNode(g, parentParsedItem, item.state1, diagramStates, diagramDb, altFlag);\n          setupNode(g, parentParsedItem, item.state2, diagramStates, diagramDb, altFlag);\n          const edgeData = {\n            id: \"edge\" + graphItemCount,\n            arrowhead: \"normal\",\n            arrowTypeEnd: \"arrow_barb\",\n            style: G_EDGE_STYLE,\n            labelStyle: \"\",\n            label: common.sanitizeText(item.description, getConfig()),\n            arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n            labelpos: G_EDGE_LABELPOS,\n            labelType: G_EDGE_LABELTYPE,\n            thickness: G_EDGE_THICKNESS,\n            classes: CSS_EDGE\n          };\n          g.setEdge(item.state1.id, item.state2.id, edgeData, graphItemCount);\n          graphItemCount++;\n        }\n        break;\n    }\n  });\n};\nconst getDir = (parsedItem, defaultDir = DEFAULT_NESTED_DOC_DIR) => {\n  let dir = defaultDir;\n  if (parsedItem.doc) {\n    for (let i = 0; i < parsedItem.doc.length; i++) {\n      const parsedItemDoc = parsedItem.doc[i];\n      if (parsedItemDoc.stmt === \"dir\") {\n        dir = parsedItemDoc.value;\n      }\n    }\n  }\n  return dir;\n};\nconst draw = function(text, id, _version, diag) {\n  log.info(\"Drawing state diagram (v2)\", id);\n  nodeDb = {};\n  let dir = diag.db.getDirection();\n  if (dir === void 0) {\n    dir = DEFAULT_DIAGRAM_DIRECTION;\n  }\n  const { securityLevel, state: conf } = getConfig();\n  const nodeSpacing = conf.nodeSpacing || 50;\n  const rankSpacing = conf.rankSpacing || 50;\n  log.info(diag.db.getRootDocV2());\n  diag.db.extract(diag.db.getRootDocV2());\n  log.info(diag.db.getRootDocV2());\n  const diagramStates = diag.db.getStates();\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: getDir(diag.db.getRootDocV2()),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  setupNode(g, void 0, diag.db.getRootDocV2(), diagramStates, diag.db, true);\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  render(element, g, [\"barb\"], CSS_DIAGRAM, id);\n  const padding = 8;\n  utils.insertTitle(svg, \"statediagramTitleText\", conf.titleTopMargin, diag.db.getDiagramTitle());\n  const bounds = svg.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  svg.attr(\"class\", CSS_DIAGRAM);\n  const svgBounds = svg.node().getBBox();\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`;\n  log.debug(`viewBox ${vBox}`);\n  svg.attr(\"viewBox\", vBox);\n  const labels = document.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n  for (const label of labels) {\n    const dim = label.getBBox();\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", SHAPE_STATE);\n    rect.setAttribute(\"rx\", 0);\n    rect.setAttribute(\"ry\", 0);\n    rect.setAttribute(\"width\", dim.width);\n    rect.setAttribute(\"height\", dim.height);\n    label.insertBefore(rect, label.firstChild);\n  }\n};\nconst renderer = {\n  setConf,\n  getClasses,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["D","DEFAULT_DIAGRAM_DIRECTION","a","DEFAULT_STATE_TYPE","b","DIVIDER_TYPE","S","STMT_RELATION","c","STMT_STATE","e","DEFAULT_NESTED_DOC_DIR","p","parser","d","db","s","styles","graphlib","select","l","log","g","getConfig","common","r","render","u","utils","k","configureSvgSize","SHAPE_STATE","SHAPE_STATE_WITH_DESC","SHAPE_START","SHAPE_END","SHAPE_DIVIDER","SHAPE_GROUP","SHAPE_NOTE","SHAPE_NOTEGROUP","CSS_DIAGRAM","CSS_STATE","CSS_DIAGRAM_STATE","CSS_EDGE","CSS_NOTE","CSS_NOTE_EDGE","CSS_EDGE_NOTE_EDGE","CSS_DIAGRAM_NOTE","CSS_CLUSTER","CSS_DIAGRAM_CLUSTER","CSS_CLUSTER_ALT","CSS_DIAGRAM_CLUSTER_ALT","PARENT","NOTE","DOMID_STATE","DOMID_TYPE_SPACER","NOTE_ID","PARENT_ID","G_EDGE_STYLE","G_EDGE_ARROWHEADSTYLE","G_EDGE_LABELPOS","G_EDGE_LABELTYPE","G_EDGE_THICKNESS","nodeDb","graphItemCount","setConf","cnf","keys","Object","key","getClasses","text","diagramObj","trace","clear","parse","extract","getRootDocV2","getClassesFromDbInfo","dbInfoItem","classes","join","stateDomId","itemId","counter","type","typeSpacer","typeStr","length","setupNode","parent","parsedItem","diagramStates","diagramDb","altFlag","id","classStr","shape","start","description","sanitizeText","newNode","Array","isArray","push","sanitizeTextOrArray","doc","info","getDir","dir","nodeData","labelStyle","labelText","style","domId","padding","centerLabel","note","noteData","groupData","parentNodeId","setNode","setParent","from","to","position","setEdge","arrowhead","arrowType","arrowheadStyle","labelpos","labelType","thickness","setupDoc","parentParsedItem","forEach","item","stmt","state1","state2","edgeData","arrowTypeEnd","label","defaultDir","i","parsedItemDoc","value","draw","_version","diag","getDirection","securityLevel","state","conf","nodeSpacing","rankSpacing","getStates","Graph","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","sandboxElement","root","nodes","contentDocument","body","svg","element","insertTitle","titleTopMargin","getDiagramTitle","bounds","node","getBBox","width","height","attr","svgBounds","useMaxWidth","vBox","x","y","debug","labels","document","querySelectorAll","dim","rect","createElementNS","setAttribute","insertBefore","firstChild","renderer","diagram","init","arrowMarkerAbsolute"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}