{"version":3,"file":"default-node_modules_mermaid_dist_createText-aebacdfe_js.js","mappings":"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,OAAOpT,EAAE,CAACoT,IAAI,CAAC;EACjB;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;;AAEoD;AACsB;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMQ,UAAU,GAAG4U,UAAU,CAAC,UAAU,CAAC;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM3U,iBAAiB,GAAG2U,UAAU,CAAC,YAAY,CAAC;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM1U,UAAU,GAAG0U,UAAU,CAAC,qBAAqB,CAAC;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASzU,YAAYA,CAACX,IAAI,EAAE;EACjC;IACE;IACA;IACAA,IAAI,KAAK,IAAI,KAAKA,IAAI,GAAG7S,iEAAK,CAACwU,KAAK,IAAI3B,IAAI,KAAK7S,iEAAK,CAACkoB,GAAG;EAAC;AAE/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMhS,UAAU,GAAG+R,UAAU,CAAC,IAAI,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM9R,aAAa,GAAG8R,UAAU,CAAC,YAAY,CAAC;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMnS,gBAAgB,GAAGmS,UAAU,CAAC,gBAAgB,CAAC;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASjT,kBAAkBA,CAACnC,IAAI,EAAE;EACvC,OAAOA,IAAI,KAAK,IAAI,IAAIA,IAAI,GAAG7S,iEAAK,CAACmoB,aAAa;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASnN,yBAAyBA,CAACnI,IAAI,EAAE;EAC9C,OAAOA,IAAI,KAAK,IAAI,KAAKA,IAAI,GAAG7S,iEAAK,CAACooB,GAAG,IAAIvV,IAAI,KAAK7S,iEAAK,CAACwU,KAAK,CAAC;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,aAAaA,CAACpC,IAAI,EAAE;EAClC,OACEA,IAAI,KAAK7S,iEAAK,CAACmoB,aAAa,IAC5BtV,IAAI,KAAK7S,iEAAK,CAACqoB,YAAY,IAC3BxV,IAAI,KAAK7S,iEAAK,CAACwU,KAAK;AAExB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM8T,kBAAkB,GAAGL,UAAU,CAACD,sFAAuB,CAAC;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMO,iBAAiB,GAAGN,UAAU,CAAC,IAAI,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAUA,CAACO,KAAK,EAAE;EACzB,OAAOpuB,KAAK;;EAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,KAAKA,CAACyY,IAAI,EAAE;IACnB,OAAOA,IAAI,KAAK,IAAI,IAAI2V,KAAK,CAAC1gC,IAAI,CAACmB,MAAM,CAACi1B,YAAY,CAACrL,IAAI,CAAC,CAAC;EAC/D;AACF;;;;;;;;;;;;;;;AC1PA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO,MAAMmV,uBAAuB,GAClC,ixCAAixC;;;;;;;;;;;;;;;;;ACXvtC;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","sources":["./node_modules/debug/src/browser.js","./node_modules/debug/src/common.js","./node_modules/ms/index.js","./node_modules/decode-named-character-reference/index.dom.js","./node_modules/dequal/dist/index.mjs","./node_modules/diff/lib/index.mjs","./node_modules/kleur/index.mjs","./node_modules/mdast-util-from-markdown/dev/lib/index.js","./node_modules/mdast-util-to-string/lib/index.js","./node_modules/mermaid/dist/createText-aebacdfe.js","./node_modules/micromark-core-commonmark/dev/lib/attention.js","./node_modules/micromark-core-commonmark/dev/lib/autolink.js","./node_modules/micromark-core-commonmark/dev/lib/blank-line.js","./node_modules/micromark-core-commonmark/dev/lib/block-quote.js","./node_modules/micromark-core-commonmark/dev/lib/character-escape.js","./node_modules/micromark-core-commonmark/dev/lib/character-reference.js","./node_modules/micromark-core-commonmark/dev/lib/code-fenced.js","./node_modules/micromark-core-commonmark/dev/lib/code-indented.js","./node_modules/micromark-core-commonmark/dev/lib/code-text.js","./node_modules/micromark-core-commonmark/dev/lib/content.js","./node_modules/micromark-core-commonmark/dev/lib/definition.js","./node_modules/micromark-core-commonmark/dev/lib/hard-break-escape.js","./node_modules/micromark-core-commonmark/dev/lib/heading-atx.js","./node_modules/micromark-core-commonmark/dev/lib/html-flow.js","./node_modules/micromark-core-commonmark/dev/lib/html-text.js","./node_modules/micromark-core-commonmark/dev/lib/label-end.js","./node_modules/micromark-core-commonmark/dev/lib/label-start-image.js","./node_modules/micromark-core-commonmark/dev/lib/label-start-link.js","./node_modules/micromark-core-commonmark/dev/lib/line-ending.js","./node_modules/micromark-core-commonmark/dev/lib/list.js","./node_modules/micromark-core-commonmark/dev/lib/setext-underline.js","./node_modules/micromark-core-commonmark/dev/lib/thematic-break.js","./node_modules/micromark-factory-destination/dev/index.js","./node_modules/micromark-factory-label/dev/index.js","./node_modules/micromark-factory-space/dev/index.js","./node_modules/micromark-factory-title/dev/index.js","./node_modules/micromark-factory-whitespace/dev/index.js","./node_modules/micromark-util-character/dev/index.js","./node_modules/micromark-util-character/dev/lib/unicode-punctuation-regex.js","./node_modules/micromark-util-chunked/dev/index.js","./node_modules/micromark-util-classify-character/dev/index.js","./node_modules/micromark-util-combine-extensions/index.js","./node_modules/micromark-util-decode-numeric-character-reference/dev/index.js","./node_modules/micromark-util-decode-string/dev/index.js","./node_modules/micromark-util-html-tag-name/index.js","./node_modules/micromark-util-normalize-identifier/dev/index.js","./node_modules/micromark-util-resolve-all/index.js","./node_modules/micromark-util-subtokenize/dev/index.js","./node_modules/micromark-util-symbol/codes.js","./node_modules/micromark-util-symbol/constants.js","./node_modules/micromark-util-symbol/types.js","./node_modules/micromark-util-symbol/values.js","./node_modules/micromark/dev/lib/constructs.js","./node_modules/micromark/dev/lib/create-tokenizer.js","./node_modules/micromark/dev/lib/initialize/content.js","./node_modules/micromark/dev/lib/initialize/document.js","./node_modules/micromark/dev/lib/initialize/flow.js","./node_modules/micromark/dev/lib/initialize/text.js","./node_modules/micromark/dev/lib/parse.js","./node_modules/micromark/dev/lib/postprocess.js","./node_modules/micromark/dev/lib/preprocess.js","./node_modules/unist-util-stringify-position/lib/index.js","./node_modules/uvu/assert/index.mjs","./node_modules/uvu/diff/index.mjs"],"sourcesContent":["/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","function Diff() {}\nDiff.prototype = {\n  diff: function diff(oldString, newString) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = options.callback;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.options = options;\n    var self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function () {\n          callback(undefined, value);\n        }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    } // Allow subclasses to massage the input prior to running\n\n\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n    var newLen = newString.length,\n        oldLen = oldString.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n\n    if (options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return done([{\n        value: this.join(newString),\n        count: newString.length\n      }]);\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath = void 0;\n\n        var addPath = bestPath[diagonalPath - 1],\n            removePath = bestPath[diagonalPath + 1],\n            _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen,\n            canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n          return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n\n\n    if (callback) {\n      (function exec() {\n        setTimeout(function () {\n          if (editLength > maxEditLength) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      })();\n    } else {\n      while (editLength <= maxEditLength) {\n        var ret = execEditLength();\n\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n  pushComponent: function pushComponent(components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n    var newLen = newString.length,\n        oldLen = oldString.length,\n        newPos = basePath.newPos,\n        oldPos = newPos - diagonalPath,\n        commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  equals: function equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n    }\n  },\n  removeEmpty: function removeEmpty(array) {\n    var ret = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n\n    return ret;\n  },\n  castInput: function castInput(value) {\n    return value;\n  },\n  tokenize: function tokenize(value) {\n    return value.split('');\n  },\n  join: function join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, components, newString, oldString, useLongestToken) {\n  var componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        var value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function (value, i) {\n          var oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n\n      if (componentPos && components[componentPos - 1].added) {\n        var tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  } // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n\n\n  var lastComponent = components[componentLen - 1];\n\n  if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar characterDiff = new Diff();\nfunction diffChars(oldStr, newStr, options) {\n  return characterDiff.diff(oldStr, newStr, options);\n}\n\nfunction generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (var name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n\n  return defaults;\n}\n\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\n\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\nvar reWhitespace = /\\S/;\nvar wordDiff = new Diff();\n\nwordDiff.equals = function (left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n};\n\nwordDiff.tokenize = function (value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n  for (var i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nfunction diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {\n    ignoreWhitespace: true\n  });\n  return wordDiff.diff(oldStr, newStr, options);\n}\nfunction diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nvar lineDiff = new Diff();\n\nlineDiff.tokenize = function (value) {\n  var retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  } // Merge the content and line separators into single tokens\n\n\n  for (var i = 0; i < linesAndNewlines.length; i++) {\n    var line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nfunction diffLines(oldStr, newStr, callback) {\n  return lineDiff.diff(oldStr, newStr, callback);\n}\nfunction diffTrimmedLines(oldStr, newStr, callback) {\n  var options = generateOptions(callback, {\n    ignoreWhitespace: true\n  });\n  return lineDiff.diff(oldStr, newStr, options);\n}\n\nvar sentenceDiff = new Diff();\n\nsentenceDiff.tokenize = function (value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nfunction diffSentences(oldStr, newStr, callback) {\n  return sentenceDiff.diff(oldStr, newStr, callback);\n}\n\nvar cssDiff = new Diff();\n\ncssDiff.tokenize = function (value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nfunction diffCss(oldStr, newStr, callback) {\n  return cssDiff.diff(oldStr, newStr, callback);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar objectPrototypeToString = Object.prototype.toString;\nvar jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\njsonDiff.useLongestToken = true;\njsonDiff.tokenize = lineDiff.tokenize;\n\njsonDiff.castInput = function (value) {\n  var _this$options = this.options,\n      undefinedReplacement = _this$options.undefinedReplacement,\n      _this$options$stringi = _this$options.stringifyReplacer,\n      stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n    return typeof v === 'undefined' ? undefinedReplacement : v;\n  } : _this$options$stringi;\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\n\njsonDiff.equals = function (left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nfunction diffJson(oldObj, newObj, options) {\n  return jsonDiff.diff(oldObj, newObj, options);\n} // This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  var i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  var canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (_typeof(obj) === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n\n    var sortedKeys = [],\n        _key;\n\n    for (_key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(_key)) {\n        sortedKeys.push(_key);\n      }\n    }\n\n    sortedKeys.sort();\n\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      _key = sortedKeys[i];\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n\n  return canonicalizedObj;\n}\n\nvar arrayDiff = new Diff();\n\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\n\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nfunction parsePatch(uniDiff) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    var index = {};\n    list.push(index); // Parse diff metadata\n\n    while (i < diffstr.length) {\n      var line = diffstr[i]; // File header found, end parsing diff metadata\n\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n        break;\n      } // Diff index\n\n\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    } // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n\n\n    parseFileHeader(index);\n    parseFileHeader(index); // Parse hunks\n\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      var _line = diffstr[i];\n\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n        break;\n      } else if (/^@@/.test(_line)) {\n        index.hunks.push(parseHunk());\n      } else if (_line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n      } else {\n        i++;\n      }\n    }\n  } // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n\n\n  function parseFileHeader(index) {\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n    if (fileHeader) {\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      var data = fileHeader[2].split('\\t', 2);\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n      if (/^\".*\"$/.test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n      i++;\n    }\n  } // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n\n\n  function parseHunk() {\n    var chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n    var hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    }; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    var addCount = 0,\n        removeCount = 0;\n\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n        break;\n      }\n\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    } // Handle the empty block count case\n\n\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    } // Perform optional sanity checking\n\n\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n\n// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction distanceIterator (start, minLine, maxLine) {\n  var wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      } // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n\n\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      } // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n\n\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    } // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n\n  };\n}\n\nfunction applyPatch(source, uniDiff) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  } // Apply the diff to the input\n\n\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n    return line === patchContent;\n  },\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n      removeEOFNL,\n      addEOFNL;\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n\n\n  function hunkFits(hunk, toPos) {\n    for (var j = 0; j < hunk.lines.length; j++) {\n      var line = hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line;\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n\n        toPos++;\n      }\n    }\n\n    return true;\n  } // Search best fit offsets for each hunk based on the previous ones\n\n\n  for (var i = 0; i < hunks.length; i++) {\n    var hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n    var iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    } // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n\n\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  } // Apply patch hunks\n\n\n  var diffOffset = 0;\n\n  for (var _i = 0; _i < hunks.length; _i++) {\n    var _hunk = hunks[_i],\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n    diffOffset += _hunk.newLines - _hunk.oldLines;\n\n    for (var j = 0; j < _hunk.lines.length; j++) {\n      var line = _hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line,\n          delimiter = _hunk.linedelimiters[j];\n\n      if (operation === ' ') {\n        _toPos++;\n      } else if (operation === '-') {\n        lines.splice(_toPos, 1);\n        delimiters.splice(_toPos, 1);\n        /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(_toPos, 0, content);\n        delimiters.splice(_toPos, 0, delimiter);\n        _toPos++;\n      } else if (operation === '\\\\') {\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  } // Handle EOFNL insertion/removal\n\n\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n\n  for (var _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n\n  return lines.join('');\n} // Wrapper that supports multiple file patches via callbacks.\n\nfunction applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  var currentIndex = 0;\n\n  function processIndex() {\n    var index = uniDiff[currentIndex++];\n\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function (err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      var updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function (err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n\n  processIndex();\n}\n\nfunction structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  var diff = diffLines(oldStr, newStr, options);\n\n  if (!diff) {\n    return;\n  }\n\n  diff.push({\n    value: '',\n    lines: []\n  }); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function (entry) {\n      return ' ' + entry;\n    });\n  }\n\n  var hunks = [];\n  var oldRangeStart = 0,\n      newRangeStart = 0,\n      curRange = [],\n      oldLine = 1,\n      newLine = 1;\n\n  var _loop = function _loop(i) {\n    var current = diff[i],\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      var _curRange;\n\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        var prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      } // Output our changes\n\n\n      (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n        return (current.added ? '+' : '-') + entry;\n      }))); // Track the updated file position\n\n\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          var _curRange2;\n\n          // Overlapping\n          (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n        } else {\n          var _curRange3;\n\n          // end the range and output\n          var contextSize = Math.min(lines.length, options.context);\n\n          (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n          var hunk = {\n            oldStart: oldRangeStart,\n            oldLines: oldLine - oldRangeStart + contextSize,\n            newStart: newRangeStart,\n            newLines: newLine - newRangeStart + contextSize,\n            lines: curRange\n          };\n\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            var oldEOFNewline = /\\n$/.test(oldStr);\n            var newEOFNewline = /\\n$/.test(newStr);\n            var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n\n            if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n\n          hunks.push(hunk);\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  };\n\n  for (var i = 0; i < diff.length; i++) {\n    _loop(i);\n  }\n\n  return {\n    oldFileName: oldFileName,\n    newFileName: newFileName,\n    oldHeader: oldHeader,\n    newHeader: newHeader,\n    hunks: hunks\n  };\n}\nfunction formatPatch(diff) {\n  var ret = [];\n\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (var i = 0; i < diff.hunks.length; i++) {\n    var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n\nfunction arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\nfunction arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (var i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calcLineCount(hunk) {\n  var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n      oldLines = _calcOldNewLineCount.oldLines,\n      newLines = _calcOldNewLineCount.newLines;\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\nfunction merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n  var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n  var mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    var mineCurrent = mine.hunks[mineIndex] || {\n      oldStart: Infinity\n    },\n        theirsCurrent = theirs.hunks[theirsIndex] || {\n      oldStart: Infinity\n    };\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      var mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {\n      mine: mine,\n      theirs: theirs\n    };\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart,\n    oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset,\n    newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  var mine = {\n    offset: mineOffset,\n    lines: mineLines,\n    index: 0\n  },\n      their = {\n    offset: theirOffset,\n    lines: theirLines,\n    index: 0\n  }; // Handle any leading content\n\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    var mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      var _hunk$lines;\n\n      // Mine inserted\n      (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      var _hunk$lines2;\n\n      // Theirs inserted\n      (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  } // Now push anything that may be remaining\n\n\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      var _hunk$lines3;\n\n      (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      var _hunk$lines4;\n\n      (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    var _hunk$lines5;\n\n    (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n\n  if (theirChanges.merged) {\n    var _hunk$lines6;\n\n    (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\n\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  var ret = [],\n      operation = state.lines[state.index][0];\n\n  while (state.index < state.lines.length) {\n    var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\n\nfunction collectContext(state, matchChanges) {\n  var changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n    var change = state.lines[state.index],\n        match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n    merged.push(match);\n    matchIndex++; // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged: merged,\n    changes: changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function (prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\n\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (var i = 0; i < delta; i++) {\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  var oldLines = 0;\n  var newLines = 0;\n  lines.forEach(function (line) {\n    if (typeof line !== 'string') {\n      var myCount = calcOldNewLineCount(line.mine);\n      var theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n  return {\n    oldLines: oldLines,\n    newLines: newLines\n  };\n}\n\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes) {\n  var ret = [],\n      change,\n      operation;\n\n  for (var i = 0; i < changes.length; i++) {\n    change = changes[i];\n\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n\n  return ret;\n}\n\nfunction convertChangesToXML(changes) {\n  var ret = [];\n\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  var n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n  return n;\n}\n\nexport { Diff, applyPatch, applyPatches, canonicalize, convertChangesToDMP, convertChangesToXML, createPatch, createTwoFilesPatch, diffArrays, diffChars, diffCss, diffJson, diffLines, diffSentences, diffTrimmedLines, diffWords, diffWordsWithSpace, merge, parsePatch, structuredPatch };\n","'use strict';\n\nlet FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY=true;\nif (typeof process !== 'undefined') {\n\t({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n\tisTTY = process.stdout && process.stdout.isTTY;\n}\n\nconst $ = {\n\tenabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== 'dumb' && (\n\t\tFORCE_COLOR != null && FORCE_COLOR !== '0' || isTTY\n\t),\n\n\t// modifiers\n\treset: init(0, 0),\n\tbold: init(1, 22),\n\tdim: init(2, 22),\n\titalic: init(3, 23),\n\tunderline: init(4, 24),\n\tinverse: init(7, 27),\n\thidden: init(8, 28),\n\tstrikethrough: init(9, 29),\n\n\t// colors\n\tblack: init(30, 39),\n\tred: init(31, 39),\n\tgreen: init(32, 39),\n\tyellow: init(33, 39),\n\tblue: init(34, 39),\n\tmagenta: init(35, 39),\n\tcyan: init(36, 39),\n\twhite: init(37, 39),\n\tgray: init(90, 39),\n\tgrey: init(90, 39),\n\n\t// background colors\n\tbgBlack: init(40, 49),\n\tbgRed: init(41, 49),\n\tbgGreen: init(42, 49),\n\tbgYellow: init(43, 49),\n\tbgBlue: init(44, 49),\n\tbgMagenta: init(45, 49),\n\tbgCyan: init(46, 49),\n\tbgWhite: init(47, 49)\n};\n\nfunction run(arr, str) {\n\tlet i=0, tmp, beg='', end='';\n\tfor (; i < arr.length; i++) {\n\t\ttmp = arr[i];\n\t\tbeg += tmp.open;\n\t\tend += tmp.close;\n\t\tif (!!~str.indexOf(tmp.close)) {\n\t\t\tstr = str.replace(tmp.rgx, tmp.close + tmp.open);\n\t\t}\n\t}\n\treturn beg + str + end;\n}\n\nfunction chain(has, keys) {\n\tlet ctx = { has, keys };\n\n\tctx.reset = $.reset.bind(ctx);\n\tctx.bold = $.bold.bind(ctx);\n\tctx.dim = $.dim.bind(ctx);\n\tctx.italic = $.italic.bind(ctx);\n\tctx.underline = $.underline.bind(ctx);\n\tctx.inverse = $.inverse.bind(ctx);\n\tctx.hidden = $.hidden.bind(ctx);\n\tctx.strikethrough = $.strikethrough.bind(ctx);\n\n\tctx.black = $.black.bind(ctx);\n\tctx.red = $.red.bind(ctx);\n\tctx.green = $.green.bind(ctx);\n\tctx.yellow = $.yellow.bind(ctx);\n\tctx.blue = $.blue.bind(ctx);\n\tctx.magenta = $.magenta.bind(ctx);\n\tctx.cyan = $.cyan.bind(ctx);\n\tctx.white = $.white.bind(ctx);\n\tctx.gray = $.gray.bind(ctx);\n\tctx.grey = $.grey.bind(ctx);\n\n\tctx.bgBlack = $.bgBlack.bind(ctx);\n\tctx.bgRed = $.bgRed.bind(ctx);\n\tctx.bgGreen = $.bgGreen.bind(ctx);\n\tctx.bgYellow = $.bgYellow.bind(ctx);\n\tctx.bgBlue = $.bgBlue.bind(ctx);\n\tctx.bgMagenta = $.bgMagenta.bind(ctx);\n\tctx.bgCyan = $.bgCyan.bind(ctx);\n\tctx.bgWhite = $.bgWhite.bind(ctx);\n\n\treturn ctx;\n}\n\nfunction init(open, close) {\n\tlet blk = {\n\t\topen: `\\x1b[${open}m`,\n\t\tclose: `\\x1b[${close}m`,\n\t\trgx: new RegExp(`\\\\x1b\\\\[${close}m`, 'g')\n\t};\n\treturn function (txt) {\n\t\tif (this !== void 0 && this.has !== void 0) {\n\t\t\t!!~this.has.indexOf(open) || (this.has.push(open),this.keys.push(blk));\n\t\t\treturn txt === void 0 ? this : $.enabled ? run(this.keys, txt+'') : txt+'';\n\t\t}\n\t\treturn txt === void 0 ? chain([open], [blk]) : $.enabled ? run([blk], txt+'') : txt+'';\n\t};\n}\n\nexport default $;\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {ok as assert} from 'uvu/assert'\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n  (\n    /**\n     * @param {Value} value\n     * @param {Encoding | Options | null | undefined} [encoding]\n     * @param {Options | null | undefined} [options]\n     * @returns {Root}\n     */\n    function (value, encoding, options) {\n      if (typeof encoding !== 'string') {\n        options = encoding\n        encoding = undefined\n      }\n\n      return compiler(options)(\n        postprocess(\n          parse(options).document().write(preprocess()(value, encoding, true))\n        )\n      )\n    }\n  )\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {type: 'root', children: []}\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === types.listOrdered ||\n        events[index][1].type === types.listUnordered\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          assert(typeof tail === 'number', 'expected list ot be open')\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {sliceSerialize: events[index][2].sliceSerialize},\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0 ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === types.listUnordered ||\n        event[1].type === types.listOrdered ||\n        event[1].type === types.blockQuote\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === types.lineEndingBlank) {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === types.linePrefix ||\n        event[1].type === types.listItemValue ||\n        event[1].type === types.listItemMarker ||\n        event[1].type === types.listItemPrefix ||\n        event[1].type === types.listItemPrefixWhitespace\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === types.listItemPrefix) ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === types.listUnordered ||\n            event[1].type === types.listOrdered))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === types.lineEnding ||\n              tailEvent[1].type === types.lineEndingBlank\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = types.lineEndingBlank\n                listSpread = true\n              }\n\n              tailEvent[1].type = types.lineEnding\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === types.linePrefix ||\n              tailEvent[1].type === types.blockQuotePrefix ||\n              tailEvent[1].type === types.blockQuotePrefixWhitespace ||\n              tailEvent[1].type === types.blockQuoteMarker ||\n              tailEvent[1].type === types.listItemIndent\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === types.listItemPrefix) {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    assert(parent, 'expected `parent`')\n    assert('children' in parent, 'expected `parent`')\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {start: point(token.start)}\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    assert(node, 'expected `node`')\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    assert(node.type !== 'fragment', 'unexpected fragment `exit`ed')\n    assert(node.position, 'expected `position` to be defined')\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      assert(ancestor, 'expected nodes on stack')\n      assert(ancestor.type === 'list', 'expected list on stack')\n      ancestor.start = Number.parseInt(\n        this.sliceSerialize(token),\n        constants.numericBaseDecimal\n      )\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'heading', 'expected heading on stack')\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n\n      assert(\n        depth === 1 ||\n          depth === 2 ||\n          depth === 3 ||\n          depth === 4 ||\n          depth === 5 ||\n          depth === 6,\n        'expected `depth` between `1` and `6`'\n      )\n\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'heading', 'expected heading on stack')\n\n    node.depth =\n      this.sliceSerialize(token).charCodeAt(0) === codes.equalsTo ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert('children' in node, 'expected parent on stack')\n\n    let tail = node.children[node.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {start: point(token.start)}\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    assert(tail, 'expected a `node` to be on the stack')\n    assert('value' in tail, 'expected a `literal` to be on the stack')\n    assert(tail.position, 'expected `node` to have an open position')\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    assert(context, 'expected `node`')\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      assert('children' in context, 'expected `parent`')\n      const tail = context.children[context.children.length - 1]\n      assert(tail.position, 'expected tail to have a starting position')\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'html', 'expected html on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'html', 'expected html on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'inlineCode', 'expected inline code on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'image', 'expected image on stack')\n\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    assert(ancestor, 'expected ancestor on stack')\n    assert(\n      ancestor.type === 'image' || ancestor.type === 'link',\n      'expected image or link on stack'\n    )\n\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    assert(fragment, 'expected node on stack')\n    assert(fragment.type === 'fragment', 'expected fragment on stack')\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n\n    // Assume a reference.\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image reference or link reference on stack'\n    )\n\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    assert(\n      token.type === 'characterReferenceMarkerNumeric' ||\n        token.type === 'characterReferenceMarkerHexadecimal'\n    )\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === types.characterReferenceMarkerNumeric\n          ? constants.numericBaseDecimal\n          : constants.numericBaseHexadecimal\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      assert(result !== false, 'expected reference to decode')\n      value = result\n    }\n\n    const tail = this.stack.pop()\n    assert(tail, 'expected `node`')\n    assert(tail.position, 'expected `node.position`')\n    assert('value' in tail, 'expected `node.value`')\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {type: 'heading', depth: undefined, children: []}\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {line: d.line, column: d.column, offset: d.offset}\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({start: left.start, end: left.end}) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({start: right.start, end: right.end}) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({start: right.start, end: right.end}) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","import { l as log, J as decodeEntities } from \"./mermaid-934d9bea.js\";\nimport { fromMarkdown } from \"mdast-util-from-markdown\";\nimport { dedent } from \"ts-dedent\";\nfunction preprocessMarkdown(markdown) {\n  const withoutMultipleNewlines = markdown.replace(/\\n{2,}/g, \"\\n\");\n  const withoutExtraSpaces = dedent(withoutMultipleNewlines);\n  return withoutExtraSpaces;\n}\nfunction markdownToLines(markdown) {\n  const preprocessedMarkdown = preprocessMarkdown(markdown);\n  const { children } = fromMarkdown(preprocessedMarkdown);\n  const lines = [[]];\n  let currentLine = 0;\n  function processNode(node, parentType = \"normal\") {\n    if (node.type === \"text\") {\n      const textLines = node.value.split(\"\\n\");\n      textLines.forEach((textLine, index) => {\n        if (index !== 0) {\n          currentLine++;\n          lines.push([]);\n        }\n        textLine.split(\" \").forEach((word) => {\n          if (word) {\n            lines[currentLine].push({ content: word, type: parentType });\n          }\n        });\n      });\n    } else if (node.type === \"strong\" || node.type === \"emphasis\") {\n      node.children.forEach((contentNode) => {\n        processNode(contentNode, node.type);\n      });\n    }\n  }\n  children.forEach((treeNode) => {\n    if (treeNode.type === \"paragraph\") {\n      treeNode.children.forEach((contentNode) => {\n        processNode(contentNode);\n      });\n    }\n  });\n  return lines;\n}\nfunction markdownToHTML(markdown) {\n  const { children } = fromMarkdown(markdown);\n  function output(node) {\n    if (node.type === \"text\") {\n      return node.value.replace(/\\n/g, \"<br/>\");\n    } else if (node.type === \"strong\") {\n      return `<strong>${node.children.map(output).join(\"\")}</strong>`;\n    } else if (node.type === \"emphasis\") {\n      return `<em>${node.children.map(output).join(\"\")}</em>`;\n    } else if (node.type === \"paragraph\") {\n      return `<p>${node.children.map(output).join(\"\")}</p>`;\n    }\n    return `Unsupported markdown: ${node.type}`;\n  }\n  return children.map(output).join(\"\");\n}\nfunction splitTextToChars(text) {\n  if (Intl.Segmenter) {\n    return [...new Intl.Segmenter().segment(text)].map((s) => s.segment);\n  }\n  return [...text];\n}\nfunction splitWordToFitWidth(checkFit, word) {\n  const characters = splitTextToChars(word.content);\n  return splitWordToFitWidthRecursion(checkFit, [], characters, word.type);\n}\nfunction splitWordToFitWidthRecursion(checkFit, usedChars, remainingChars, type) {\n  if (remainingChars.length === 0) {\n    return [\n      { content: usedChars.join(\"\"), type },\n      { content: \"\", type }\n    ];\n  }\n  const [nextChar, ...rest] = remainingChars;\n  const newWord = [...usedChars, nextChar];\n  if (checkFit([{ content: newWord.join(\"\"), type }])) {\n    return splitWordToFitWidthRecursion(checkFit, newWord, rest, type);\n  }\n  if (usedChars.length === 0 && nextChar) {\n    usedChars.push(nextChar);\n    remainingChars.shift();\n  }\n  return [\n    { content: usedChars.join(\"\"), type },\n    { content: remainingChars.join(\"\"), type }\n  ];\n}\nfunction splitLineToFitWidth(line, checkFit) {\n  if (line.some(({ content }) => content.includes(\"\\n\"))) {\n    throw new Error(\"splitLineToFitWidth does not support newlines in the line\");\n  }\n  return splitLineToFitWidthRecursion(line, checkFit);\n}\nfunction splitLineToFitWidthRecursion(words, checkFit, lines = [], newLine = []) {\n  if (words.length === 0) {\n    if (newLine.length > 0) {\n      lines.push(newLine);\n    }\n    return lines.length > 0 ? lines : [];\n  }\n  let joiner = \"\";\n  if (words[0].content === \" \") {\n    joiner = \" \";\n    words.shift();\n  }\n  const nextWord = words.shift() ?? { content: \" \", type: \"normal\" };\n  const lineWithNextWord = [...newLine];\n  if (joiner !== \"\") {\n    lineWithNextWord.push({ content: joiner, type: \"normal\" });\n  }\n  lineWithNextWord.push(nextWord);\n  if (checkFit(lineWithNextWord)) {\n    return splitLineToFitWidthRecursion(words, checkFit, lines, lineWithNextWord);\n  }\n  if (newLine.length > 0) {\n    lines.push(newLine);\n    words.unshift(nextWord);\n  } else if (nextWord.content) {\n    const [line, rest] = splitWordToFitWidth(checkFit, nextWord);\n    lines.push([line]);\n    if (rest.content) {\n      words.unshift(rest);\n    }\n  }\n  return splitLineToFitWidthRecursion(words, checkFit, lines);\n}\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\nfunction addHtmlSpan(element, node, width, classes, addBackground = false) {\n  const fo = element.append(\"foreignObject\");\n  const div = fo.append(\"xhtml:div\");\n  const label = node.label;\n  const labelClass = node.isNode ? \"nodeLabel\" : \"edgeLabel\";\n  div.html(\n    `\n    <span class=\"${labelClass} ${classes}\" ` + (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : \"\") + \">\" + label + \"</span>\"\n  );\n  applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"table-cell\");\n  div.style(\"white-space\", \"nowrap\");\n  div.style(\"max-width\", width + \"px\");\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n  if (addBackground) {\n    div.attr(\"class\", \"labelBkg\");\n  }\n  let bbox = div.node().getBoundingClientRect();\n  if (bbox.width === width) {\n    div.style(\"display\", \"table\");\n    div.style(\"white-space\", \"break-spaces\");\n    div.style(\"width\", width + \"px\");\n    bbox = div.node().getBoundingClientRect();\n  }\n  fo.style(\"width\", bbox.width);\n  fo.style(\"height\", bbox.height);\n  return fo.node();\n}\nfunction createTspan(textElement, lineIndex, lineHeight) {\n  return textElement.append(\"tspan\").attr(\"class\", \"text-outer-tspan\").attr(\"x\", 0).attr(\"y\", lineIndex * lineHeight - 0.1 + \"em\").attr(\"dy\", lineHeight + \"em\");\n}\nfunction computeWidthOfText(parentNode, lineHeight, line) {\n  const testElement = parentNode.append(\"text\");\n  const testSpan = createTspan(testElement, 1, lineHeight);\n  updateTextContentAndStyles(testSpan, line);\n  const textLength = testSpan.node().getComputedTextLength();\n  testElement.remove();\n  return textLength;\n}\nfunction computeDimensionOfText(parentNode, lineHeight, text) {\n  var _a;\n  const testElement = parentNode.append(\"text\");\n  const testSpan = createTspan(testElement, 1, lineHeight);\n  updateTextContentAndStyles(testSpan, [{ content: text, type: \"normal\" }]);\n  const textDimension = (_a = testSpan.node()) == null ? void 0 : _a.getBoundingClientRect();\n  if (textDimension) {\n    testElement.remove();\n  }\n  return textDimension;\n}\nfunction createFormattedText(width, g, structuredText, addBackground = false) {\n  const lineHeight = 1.1;\n  const labelGroup = g.append(\"g\");\n  const bkg = labelGroup.insert(\"rect\").attr(\"class\", \"background\");\n  const textElement = labelGroup.append(\"text\").attr(\"y\", \"-10.1\");\n  let lineIndex = 0;\n  for (const line of structuredText) {\n    const checkWidth = (line2) => computeWidthOfText(labelGroup, lineHeight, line2) <= width;\n    const linesUnderWidth = checkWidth(line) ? [line] : splitLineToFitWidth(line, checkWidth);\n    for (const preparedLine of linesUnderWidth) {\n      const tspan = createTspan(textElement, lineIndex, lineHeight);\n      updateTextContentAndStyles(tspan, preparedLine);\n      lineIndex++;\n    }\n  }\n  if (addBackground) {\n    const bbox = textElement.node().getBBox();\n    const padding = 2;\n    bkg.attr(\"x\", -padding).attr(\"y\", -padding).attr(\"width\", bbox.width + 2 * padding).attr(\"height\", bbox.height + 2 * padding);\n    return labelGroup.node();\n  } else {\n    return textElement.node();\n  }\n}\nfunction updateTextContentAndStyles(tspan, wrappedLine) {\n  tspan.text(\"\");\n  wrappedLine.forEach((word, index) => {\n    const innerTspan = tspan.append(\"tspan\").attr(\"font-style\", word.type === \"emphasis\" ? \"italic\" : \"normal\").attr(\"class\", \"text-inner-tspan\").attr(\"font-weight\", word.type === \"strong\" ? \"bold\" : \"normal\");\n    if (index === 0) {\n      innerTspan.text(word.content);\n    } else {\n      innerTspan.text(\" \" + word.content);\n    }\n  });\n}\nconst createText = (el, text = \"\", {\n  style = \"\",\n  isTitle = false,\n  classes = \"\",\n  useHtmlLabels = true,\n  isNode = true,\n  width = 200,\n  addSvgBackground = false\n} = {}) => {\n  log.info(\"createText\", text, style, isTitle, classes, useHtmlLabels, isNode, addSvgBackground);\n  if (useHtmlLabels) {\n    const htmlText = markdownToHTML(text);\n    const node = {\n      isNode,\n      label: decodeEntities(htmlText).replace(\n        /fa[blrs]?:fa-[\\w-]+/g,\n        (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n      ),\n      labelStyle: style.replace(\"fill:\", \"color:\")\n    };\n    const vertexNode = addHtmlSpan(el, node, width, classes, addSvgBackground);\n    return vertexNode;\n  } else {\n    const structuredText = markdownToLines(text);\n    const svgLabel = createFormattedText(width, el, structuredText, addSvgBackground);\n    return svgLabel;\n  }\n};\nexport {\n  createText as a,\n  computeDimensionOfText as c\n};\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n\n          openingSequence = {\n            type: use > 1 ? types.strongSequence : types.emphasisSequence,\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? types.strongSequence : types.emphasisSequence,\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? types.strongText : types.emphasisText,\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? types.strong : types.emphasis,\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n          assert(\n            context.parser.constructs.insideSpan.null,\n            'expected `insideSpan` to be populated'\n          )\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(\n      code === codes.asterisk || code === codes.underscore,\n      'expected asterisk or underscore'\n    )\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n    assert(attentionMarkers, 'expected `attentionMarkers` to be populated')\n\n    const open =\n      !after ||\n      (after === constants.characterGroupPunctuation && before) ||\n      attentionMarkers.includes(code)\n    const close =\n      !before ||\n      (before === constants.characterGroupPunctuation && after) ||\n      attentionMarkers.includes(previous)\n\n    token._open = Boolean(\n      marker === codes.asterisk ? open : open && (before || !close)\n    )\n    token._close = Boolean(\n      marker === codes.asterisk ? close : close && (after || !open)\n    )\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const autolink = {name: 'autolink', tokenize: tokenizeAutolink}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.autolink)\n    effects.enter(types.autolinkMarker)\n    effects.consume(code)\n    effects.exit(types.autolinkMarker)\n    effects.enter(types.autolinkProtocol)\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      code === codes.plusSign ||\n      code === codes.dash ||\n      code === codes.dot ||\n      asciiAlphanumeric(code)\n    ) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === codes.colon) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === codes.plusSign ||\n        code === codes.dash ||\n        code === codes.dot ||\n        asciiAlphanumeric(code)) &&\n      size++ < constants.autolinkSchemeSizeMax\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.autolinkProtocol)\n      effects.enter(types.autolinkMarker)\n      effects.consume(code)\n      effects.exit(types.autolinkMarker)\n      effects.exit(types.autolink)\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.lessThan ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === codes.atSign) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === codes.dot) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === codes.greaterThan) {\n      // Exit, then change the token type.\n      effects.exit(types.autolinkProtocol).type = types.autolinkEmail\n      effects.enter(types.autolinkMarker)\n      effects.consume(code)\n      effects.exit(types.autolinkMarker)\n      effects.exit(types.autolink)\n      return ok\n    }\n\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if (\n      (code === codes.dash || asciiAlphanumeric(code)) &&\n      size++ < constants.autolinkDomainSizeMax\n    ) {\n      const next = code === codes.dash ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/** @type {Construct} */\nexport const blankLine = {tokenize: tokenizeBlankLine, partial: true}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, types.linePrefix)(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === codes.eof || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {tokenize: tokenizeBlockQuoteContinuation},\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.greaterThan) {\n      const state = self.containerState\n\n      assert(state, 'expected `containerState` to be defined in container')\n\n      if (!state.open) {\n        effects.enter(types.blockQuote, {_container: true})\n        state.open = true\n      }\n\n      effects.enter(types.blockQuotePrefix)\n      effects.enter(types.blockQuoteMarker)\n      effects.consume(code)\n      effects.exit(types.blockQuoteMarker)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(types.blockQuotePrefixWhitespace)\n      effects.consume(code)\n      effects.exit(types.blockQuotePrefixWhitespace)\n      effects.exit(types.blockQuotePrefix)\n      return ok\n    }\n\n    effects.exit(types.blockQuotePrefix)\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n      assert(\n        self.parser.constructs.disable.null,\n        'expected `disable.null` to be populated'\n      )\n\n      return factorySpace(\n        effects,\n        contBefore,\n        types.linePrefix,\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : constants.tabSize\n      )(code)\n    }\n\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(types.blockQuote)\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.backslash, 'expected `\\\\`')\n    effects.enter(types.characterEscape)\n    effects.enter(types.escapeMarker)\n    effects.consume(code)\n    effects.exit(types.escapeMarker)\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(types.characterEscapeValue)\n      effects.consume(code)\n      effects.exit(types.characterEscapeValue)\n      effects.exit(types.characterEscape)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.ampersand, 'expected `&`')\n    effects.enter(types.characterReference)\n    effects.enter(types.characterReferenceMarker)\n    effects.consume(code)\n    effects.exit(types.characterReferenceMarker)\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.numberSign) {\n      effects.enter(types.characterReferenceMarkerNumeric)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarkerNumeric)\n      return numeric\n    }\n\n    effects.enter(types.characterReferenceValue)\n    max = constants.characterReferenceNamedSizeMax\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === codes.uppercaseX || code === codes.lowercaseX) {\n      effects.enter(types.characterReferenceMarkerHexadecimal)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarkerHexadecimal)\n      effects.enter(types.characterReferenceValue)\n      max = constants.characterReferenceHexadecimalSizeMax\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter(types.characterReferenceValue)\n    max = constants.characterReferenceDecimalSizeMax\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === codes.semicolon && size) {\n      const token = effects.exit(types.characterReferenceValue)\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(types.characterReferenceMarker)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarker)\n      effects.exit(types.characterReference)\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {tokenize: tokenizeCloseStart, partial: true}\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    assert(\n      code === codes.graveAccent || code === codes.tilde,\n      'expected `` ` `` or `~`'\n    )\n\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === types.linePrefix\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n\n    marker = code\n    effects.enter(types.codeFenced)\n    effects.enter(types.codeFencedFence)\n    effects.enter(types.codeFencedFenceSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    if (sizeOpen < constants.codeFencedSequenceSizeMin) {\n      return nok(code)\n    }\n\n    effects.exit(types.codeFencedFenceSequence)\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, types.whitespace)(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFencedFence)\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n\n    effects.enter(types.codeFencedFenceInfo)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceInfo)\n      return infoBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceInfo)\n      return factorySpace(effects, metaBefore, types.whitespace)(code)\n    }\n\n    if (code === codes.graveAccent && code === marker) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n\n    effects.enter(types.codeFencedFenceMeta)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceMeta)\n      return infoBefore(code)\n    }\n\n    if (code === codes.graveAccent && code === marker) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          types.linePrefix,\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n\n    effects.enter(types.codeFlowValue)\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFlowValue)\n      return beforeContentChunk(code)\n    }\n\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(types.codeFenced)\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      assert(markdownLineEnding(code), 'expected eol')\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n      assert(\n        self.parser.constructs.disable.null,\n        'expected `disable.null` to be populated'\n      )\n\n      // To do: `enter` here or in next state?\n      effects.enter(types.codeFencedFence)\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            types.linePrefix,\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : constants.tabSize\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(types.codeFencedFenceSequence)\n        return sequenceClose(code)\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n\n      if (size >= sizeOpen) {\n        effects.exit(types.codeFencedFenceSequence)\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, types.whitespace)(code)\n          : sequenceCloseAfter(code)\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === codes.eof || markdownLineEnding(code)) {\n        effects.exit(types.codeFencedFence)\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {tokenize: tokenizeFurtherStart, partial: true}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n    assert(markdownSpace(code))\n    effects.enter(types.codeIndented)\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(\n      effects,\n      afterPrefix,\n      types.linePrefix,\n      constants.tabSize + 1\n    )(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === codes.eof) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n\n    effects.enter(types.codeFlowValue)\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFlowValue)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(types.codeIndented)\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(\n      effects,\n      afterPrefix,\n      types.linePrefix,\n      constants.tabSize + 1\n    )(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === types.lineEnding ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === types.lineEnding ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === types.codeTextData) {\n        // Then we have padding.\n        events[headEnterIndex][1].type = types.codeTextPadding\n        events[tailExitIndex][1].type = types.codeTextPadding\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (\n        index !== tailExitIndex &&\n        events[index][1].type !== types.lineEnding\n      ) {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === types.lineEnding\n    ) {\n      events[enter][1].type = types.codeTextData\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== codes.graveAccent ||\n    this.events[this.events.length - 1][1].type === types.characterEscape\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.graveAccent, 'expected `` ` ``')\n    assert(previous.call(self, self.previous), 'expected correct previous')\n    effects.enter(types.codeText)\n    effects.enter(types.codeTextSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === codes.graveAccent) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit(types.codeTextSequence)\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === codes.space) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === codes.graveAccent) {\n      token = effects.enter(types.codeTextSequence)\n      size = 0\n      return sequenceClose(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return between\n    }\n\n    // Data.\n    effects.enter(types.codeTextData)\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.graveAccent ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit(types.codeTextData)\n      return between(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === codes.graveAccent) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(types.codeTextSequence)\n      effects.exit(types.codeText)\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = types.codeTextData\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {tokenize: tokenizeContent, resolve: resolveContent}\n\n/** @type {Construct} */\nconst continuationConstruct = {tokenize: tokenizeContinuation, partial: true}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    assert(\n      code !== codes.eof && !markdownLineEnding(code),\n      'expected no eof or eol'\n    )\n\n    effects.enter(types.content)\n    previous = effects.enter(types.chunkContent, {\n      contentType: constants.contentTypeContent\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === codes.eof) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(types.chunkContent)\n    effects.exit(types.content)\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.consume(code)\n    effects.exit(types.chunkContent)\n    assert(previous, 'expected previous token')\n    previous.next = effects.enter(types.chunkContent, {\n      contentType: constants.contentTypeContent,\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    assert(markdownLineEnding(code), 'expected a line ending')\n    effects.exit(types.chunkContent)\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, prefixed, types.linePrefix)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const definition = {name: 'definition', tokenize: tokenizeDefinition}\n\n/** @type {Construct} */\nconst titleBefore = {tokenize: tokenizeTitleBefore, partial: true}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(types.definition)\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      types.definitionLabel,\n      types.definitionLabelMarker,\n      types.definitionLabelString\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === codes.colon) {\n      effects.enter(types.definitionMarker)\n      effects.consume(code)\n      effects.exit(types.definitionMarker)\n      return markerAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      types.definitionDestination,\n      types.definitionDestinationLiteral,\n      types.definitionDestinationLiteralMarker,\n      types.definitionDestinationRaw,\n      types.definitionDestinationString\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, types.whitespace)(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.definition)\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      types.definitionTitle,\n      types.definitionTitleMarker,\n      types.definitionTitleString\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          titleAfterOptionalWhitespace,\n          types.whitespace\n        )(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === codes.eof || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.backslash, 'expected `\\\\`')\n    effects.enter(types.hardBreakEscape)\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(types.hardBreakEscape)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === types.whitespace) {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === types.whitespace\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === types.atxHeadingSequence &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === types.whitespace))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: types.atxHeadingText,\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: types.chunkText,\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: constants.contentTypeText\n    }\n\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(types.atxHeading)\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(code === codes.numberSign, 'expected `#`')\n    effects.enter(types.atxHeadingSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (\n      code === codes.numberSign &&\n      size++ < constants.atxHeadingOpeningFenceSizeMax\n    ) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === codes.eof || markdownLineEndingOrSpace(code)) {\n      effects.exit(types.atxHeadingSequence)\n      return atBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === codes.numberSign) {\n      effects.enter(types.atxHeadingSequence)\n      return sequenceFurther(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.atxHeading)\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, types.whitespace)(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(types.atxHeadingText)\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === codes.numberSign) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n\n    effects.exit(types.atxHeadingSequence)\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === codes.eof ||\n      code === codes.numberSign ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      effects.exit(types.atxHeadingText)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {tokenize: tokenizeBlankLineBefore, partial: true}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === types.htmlFlow\n    ) {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === types.linePrefix) {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.htmlFlow)\n    effects.enter(types.htmlFlowData)\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.exclamationMark) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === codes.slash) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      marker = constants.htmlInstruction\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      marker = constants.htmlComment\n      return commentOpenInside\n    }\n\n    if (code === codes.leftSquareBracket) {\n      effects.consume(code)\n      marker = constants.htmlCdata\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = constants.htmlDeclaration\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = constants.cdataOpeningString\n\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n\n      return cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === codes.eof ||\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === codes.slash\n      const name = buffer.toLowerCase()\n\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = constants.htmlRaw\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = constants.htmlBasic\n\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      marker = constants.htmlComplete\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === codes.colon || code === codes.underscore || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === codes.dash ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.underscore ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === codes.equalsTo) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.quotationMark || code === codes.apostrophe) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === codes.eof ||\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.slash ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownSpace(code)\n    ) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === codes.dash && marker === constants.htmlComment) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === codes.lessThan && marker === constants.htmlRaw) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === codes.greaterThan && marker === constants.htmlDeclaration) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === codes.questionMark && marker === constants.htmlInstruction) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === codes.rightSquareBracket && marker === constants.htmlCdata) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n\n    if (\n      markdownLineEnding(code) &&\n      (marker === constants.htmlBasic || marker === constants.htmlComplete)\n    ) {\n      effects.exit(types.htmlFlowData)\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.htmlFlowData)\n      return continuationStart(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    assert(markdownLineEnding(code))\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n\n    effects.enter(types.htmlFlowData)\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === codes.greaterThan) {\n      const name = buffer.toLowerCase()\n\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n\n      return continuation(code)\n    }\n\n    if (asciiAlpha(code) && buffer.length < constants.htmlRawSizeMax) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === codes.dash && marker === constants.htmlComment) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.htmlFlowData)\n      return continuationAfter(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(types.htmlFlow)\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(markdownLineEnding(code), 'expected a line ending')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const htmlText = {name: 'htmlText', tokenize: tokenizeHtmlText}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.htmlText)\n    effects.enter(types.htmlTextData)\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.exclamationMark) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === codes.slash) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n\n    if (code === codes.leftSquareBracket) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentEnd\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentEnd\n    }\n\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === codes.greaterThan\n      ? end(code)\n      : code === codes.dash\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = constants.cdataOpeningString\n\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === codes.greaterThan) {\n      return end(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === codes.eof || code === codes.greaterThan) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === codes.greaterThan ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === codes.colon || code === codes.underscore || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === codes.dash ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.underscore ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === codes.equalsTo) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.quotationMark || code === codes.apostrophe) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === codes.eof ||\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      effects.exit(types.htmlTextData)\n      effects.exit(types.htmlText)\n      return ok\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    assert(returnState, 'expected return state')\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.exit(types.htmlTextData)\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          types.linePrefix,\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : constants.tabSize\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(types.htmlTextData)\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {tokenize: tokenizeResource}\n/** @type {Construct} */\nconst referenceFullConstruct = {tokenize: tokenizeReferenceFull}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {tokenize: tokenizeReferenceCollapsed}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (\n      token.type === types.labelImage ||\n      token.type === types.labelLink ||\n      token.type === types.labelEnd\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === types.labelImage ? 4 : 2)\n      token.type = types.data\n      index++\n    }\n  }\n\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === types.link ||\n        (token.type === types.labelLink && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === types.labelLink) {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === types.labelImage || token.type === types.labelLink) &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== types.labelLink) {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === types.labelEnd) {\n      close = index\n    }\n  }\n\n  assert(open !== undefined, '`open` is supposed to be found')\n  assert(close !== undefined, '`close` is supposed to be found')\n\n  const group = {\n    type: events[open][1].type === types.labelLink ? types.link : types.image,\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  const label = {\n    type: types.label,\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n\n  const text = {\n    type: types.labelText,\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n  assert(\n    context.parser.constructs.insideSpan.null,\n    'expected `insideSpan.null` to be populated'\n  )\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n\n  splice(events, open, events.length, media)\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === types.labelImage ||\n        self.events[index][1].type === types.labelLink) &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.rightSquareBracket, 'expected `]`')\n\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({start: labelStart.end, end: self.now()})\n      )\n    )\n    effects.enter(types.labelEnd)\n    effects.enter(types.labelMarker)\n    effects.consume(code)\n    effects.exit(types.labelMarker)\n    effects.exit(types.labelEnd)\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === codes.leftParenthesis) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === codes.leftSquareBracket) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    assert(code === codes.leftParenthesis, 'expected left paren')\n    effects.enter(types.resource)\n    effects.enter(types.resourceMarker)\n    effects.consume(code)\n    effects.exit(types.resourceMarker)\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === codes.rightParenthesis) {\n      return resourceEnd(code)\n    }\n\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      types.resourceDestination,\n      types.resourceDestinationLiteral,\n      types.resourceDestinationLiteralMarker,\n      types.resourceDestinationRaw,\n      types.resourceDestinationString,\n      constants.linkResourceDestinationBalanceMax\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.leftParenthesis\n    ) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        types.resourceTitle,\n        types.resourceTitleMarker,\n        types.resourceTitleString\n      )(code)\n    }\n\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === codes.rightParenthesis) {\n      effects.enter(types.resourceMarker)\n      effects.consume(code)\n      effects.exit(types.resourceMarker)\n      effects.exit(types.resource)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    assert(code === codes.leftSquareBracket, 'expected left bracket')\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      types.reference,\n      types.referenceMarker,\n      types.referenceString\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n    assert(code === codes.leftSquareBracket, 'expected left bracket')\n    effects.enter(types.reference)\n    effects.enter(types.referenceMarker)\n    effects.consume(code)\n    effects.exit(types.referenceMarker)\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.enter(types.referenceMarker)\n      effects.consume(code)\n      effects.exit(types.referenceMarker)\n      effects.exit(types.reference)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.exclamationMark, 'expected `!`')\n    effects.enter(types.labelImage)\n    effects.enter(types.labelImageMarker)\n    effects.consume(code)\n    effects.exit(types.labelImageMarker)\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.leftSquareBracket) {\n      effects.enter(types.labelMarker)\n      effects.consume(code)\n      effects.exit(types.labelMarker)\n      effects.exit(types.labelImage)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === codes.caret &&\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter(types.labelLink)\n    effects.enter(types.labelMarker)\n    effects.consume(code)\n    effects.exit(types.labelMarker)\n    effects.exit(types.labelLink)\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === codes.caret &&\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const lineEnding = {name: 'lineEnding', tokenize: tokenizeLineEnding}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, ok, types.linePrefix)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {tokenize: tokenizeListContinuation},\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {tokenize: tokenizeIndent, partial: true}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === types.linePrefix\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    assert(self.containerState, 'expected state')\n    const kind =\n      self.containerState.type ||\n      (code === codes.asterisk || code === codes.plusSign || code === codes.dash\n        ? types.listUnordered\n        : types.listOrdered)\n\n    if (\n      kind === types.listUnordered\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {_container: true})\n      }\n\n      if (kind === types.listUnordered) {\n        effects.enter(types.listItemPrefix)\n        return code === codes.asterisk || code === codes.dash\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === codes.digit1) {\n        effects.enter(types.listItemPrefix)\n        effects.enter(types.listItemValue)\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    assert(self.containerState, 'expected state')\n    if (asciiDigit(code) && ++size < constants.listItemValueSizeMax) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === codes.rightParenthesis || code === codes.dot)\n    ) {\n      effects.exit(types.listItemValue)\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    assert(self.containerState, 'expected state')\n    assert(code !== codes.eof, 'eof (`null`) is not a marker')\n    effects.enter(types.listItemMarker)\n    effects.consume(code)\n    effects.exit(types.listItemMarker)\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    assert(self.containerState, 'expected state')\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(types.listItemPrefixWhitespace)\n      effects.consume(code)\n      effects.exit(types.listItemPrefixWhitespace)\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    assert(self.containerState, 'expected state')\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit(types.listItemPrefix), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n\n  assert(self.containerState, 'expected state')\n  self.containerState._closeFlow = undefined\n\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    assert(self.containerState, 'expected state')\n    assert(typeof self.containerState.size === 'number', 'expected size')\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      types.listItemIndent,\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    assert(self.containerState, 'expected state')\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    assert(self.containerState, 'expected state')\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      types.linePrefix,\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : constants.tabSize\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n\n  assert(self.containerState, 'expected state')\n  assert(typeof self.containerState.size === 'number', 'expected size')\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    types.listItemIndent,\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    assert(self.containerState, 'expected state')\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.listItemIndent &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  assert(this.containerState, 'expected state')\n  assert(typeof this.containerState.type === 'string', 'expected type')\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n  assert(\n    self.parser.constructs.disable.null,\n    'expected `disable.null` to be populated'\n  )\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    types.listItemPrefixWhitespace,\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : constants.tabSize + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === types.listItemPrefixWhitespace\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === types.content) {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === types.paragraph) {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === types.content) {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === types.definition) {\n        definition = index\n      }\n    }\n  }\n\n  assert(text !== undefined, 'expected a `text` index to be found')\n  assert(content !== undefined, 'expected a `text` index to be found')\n\n  const heading = {\n    type: types.setextHeading,\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = types.setextHeadingText\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n\n    assert(\n      code === codes.dash || code === codes.equalsTo,\n      'expected `=` or `-`'\n    )\n\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== types.lineEnding &&\n        self.events[index][1].type !== types.linePrefix &&\n        self.events[index][1].type !== types.content\n      ) {\n        paragraph = self.events[index][1].type === types.paragraph\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(types.setextHeadingLine)\n      marker = code\n      return before(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(types.setextHeadingLineSequence)\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n\n    effects.exit(types.setextHeadingLineSequence)\n\n    return markdownSpace(code)\n      ? factorySpace(effects, after, types.lineSuffix)(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.setextHeadingLine)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(types.thematicBreak)\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(\n      code === codes.asterisk ||\n        code === codes.dash ||\n        code === codes.underscore,\n      'expected `*`, `-`, or `_`'\n    )\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(types.thematicBreakSequence)\n      return sequence(code)\n    }\n\n    if (\n      size >= constants.thematicBreakMarkerCountMin &&\n      (code === codes.eof || markdownLineEnding(code))\n    ) {\n      effects.exit(types.thematicBreak)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit(types.thematicBreakSequence)\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, types.whitespace)(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.lessThan) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.rightParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === codes.greaterThan) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      markdownLineEnding(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (\n      code === codes.lessThan ||\n      code === codes.greaterThan ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return enclosed\n    }\n\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === codes.eof ||\n        code === codes.rightParenthesis ||\n        markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (balance < limit && code === codes.leftParenthesis) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n\n    if (code === codes.rightParenthesis) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.leftParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (\n      code === codes.leftParenthesis ||\n      code === codes.rightParenthesis ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return raw\n    }\n\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > constants.linkReferenceSizeMax ||\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      (code === codes.rightSquareBracket && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === codes.caret &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return atBreak\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      code === codes.rightSquareBracket ||\n      markdownLineEnding(code) ||\n      size++ > constants.linkReferenceSizeMax\n    ) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === codes.backslash ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.leftParenthesis\n    ) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === codes.leftParenthesis ? codes.rightParenthesis : code\n      return begin\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return factorySpace(effects, atBreak, types.linePrefix)\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === codes.backslash) {\n      effects.consume(code)\n      return inside\n    }\n\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {types} from 'micromark-util-symbol/types.js'\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? types.linePrefix : types.lineSuffix\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < codes.space || code === codes.del)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < codes.horizontalTab\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < codes.nul || code === codes.space)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return (\n    code === codes.horizontalTab ||\n    code === codes.virtualSpace ||\n    code === codes.space\n  )\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","import {constants} from 'micromark-util-symbol/constants.js'\n\n/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < constants.v8MaxSafeChunkSize) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(\n        chunkStart,\n        chunkStart + constants.v8MaxSafeChunkSize\n      )\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n\n      chunkStart += constants.v8MaxSafeChunkSize\n      start += constants.v8MaxSafeChunkSize\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\n\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === codes.eof ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return constants.characterGroupWhitespace\n  }\n\n  if (unicodePunctuation(code)) {\n    return constants.characterGroupPunctuation\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","import {codes} from 'micromark-util-symbol/codes.js'\nimport {values} from 'micromark-util-symbol/values.js'\n\n/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < codes.ht ||\n    code === codes.vt ||\n    (code > codes.cr && code < codes.space) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > codes.tilde && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    /* eslint-disable no-bitwise */\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 ||\n    /* eslint-enable no-bitwise */\n    // Out of range\n    code > 1114111\n  ) {\n    return values.replacementCharacter\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\n\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n\n  if (head === codes.numberSign) {\n    const head = $2.charCodeAt(1)\n    const hex = head === codes.lowercaseX || head === codes.uppercaseX\n    return decodeNumericCharacterReference(\n      $2.slice(hex ? 2 : 1),\n      hex ? constants.numericBaseHexadecimal : constants.numericBaseDecimal\n    )\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","import {values} from 'micromark-util-symbol/values.js'\n\n/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, values.space)\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === types.chunkFlow &&\n      events[index - 1][1].type === types.listItemPrefix\n    ) {\n      assert(event[1]._tokenizer, 'expected `_tokenizer` on subtokens')\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.lineEndingBlank\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.content\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === types.content) {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === types.chunkText) {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === types.lineEnding ||\n          otherEvent[1].type === types.lineEndingBlank\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = types.lineEndingBlank\n            }\n\n            otherEvent[1].type = types.lineEnding\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  assert(token.contentType, 'expected `contentType` on subtokens')\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    assert(\n      !previous || current.previous === previous,\n      'expected previous to match'\n    )\n    assert(!previous || previous.next === current, 'expected next to match')\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(codes.eof)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      assert(current, 'expected a current token')\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n    assert(!current.next, 'expected no next token')\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    assert(start !== undefined, 'expected a start position when splicing')\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * Character codes.\n *\n * This module is compiled away!\n *\n * micromark works based on character codes.\n * This module contains constants for the ASCII block and the replacement\n * character.\n * A couple of them are handled in a special way, such as the line endings\n * (CR, LF, and CR+LF, commonly known as end-of-line: EOLs), the tab (horizontal\n * tab) and its expansion based on what column it’s at (virtual space),\n * and the end-of-file (eof) character.\n * As values are preprocessed before handling them, the actual characters LF,\n * CR, HT, and NUL (which is present as the replacement character), are\n * guaranteed to not exist.\n *\n * Unicode basic latin block.\n */\nexport const codes = /** @type {const} */ ({\n  carriageReturn: -5,\n  lineFeed: -4,\n  carriageReturnLineFeed: -3,\n  horizontalTab: -2,\n  virtualSpace: -1,\n  eof: null,\n  nul: 0,\n  soh: 1,\n  stx: 2,\n  etx: 3,\n  eot: 4,\n  enq: 5,\n  ack: 6,\n  bel: 7,\n  bs: 8,\n  ht: 9, // `\\t`\n  lf: 10, // `\\n`\n  vt: 11, // `\\v`\n  ff: 12, // `\\f`\n  cr: 13, // `\\r`\n  so: 14,\n  si: 15,\n  dle: 16,\n  dc1: 17,\n  dc2: 18,\n  dc3: 19,\n  dc4: 20,\n  nak: 21,\n  syn: 22,\n  etb: 23,\n  can: 24,\n  em: 25,\n  sub: 26,\n  esc: 27,\n  fs: 28,\n  gs: 29,\n  rs: 30,\n  us: 31,\n  space: 32,\n  exclamationMark: 33, // `!`\n  quotationMark: 34, // `\"`\n  numberSign: 35, // `#`\n  dollarSign: 36, // `$`\n  percentSign: 37, // `%`\n  ampersand: 38, // `&`\n  apostrophe: 39, // `'`\n  leftParenthesis: 40, // `(`\n  rightParenthesis: 41, // `)`\n  asterisk: 42, // `*`\n  plusSign: 43, // `+`\n  comma: 44, // `,`\n  dash: 45, // `-`\n  dot: 46, // `.`\n  slash: 47, // `/`\n  digit0: 48, // `0`\n  digit1: 49, // `1`\n  digit2: 50, // `2`\n  digit3: 51, // `3`\n  digit4: 52, // `4`\n  digit5: 53, // `5`\n  digit6: 54, // `6`\n  digit7: 55, // `7`\n  digit8: 56, // `8`\n  digit9: 57, // `9`\n  colon: 58, // `:`\n  semicolon: 59, // `;`\n  lessThan: 60, // `<`\n  equalsTo: 61, // `=`\n  greaterThan: 62, // `>`\n  questionMark: 63, // `?`\n  atSign: 64, // `@`\n  uppercaseA: 65, // `A`\n  uppercaseB: 66, // `B`\n  uppercaseC: 67, // `C`\n  uppercaseD: 68, // `D`\n  uppercaseE: 69, // `E`\n  uppercaseF: 70, // `F`\n  uppercaseG: 71, // `G`\n  uppercaseH: 72, // `H`\n  uppercaseI: 73, // `I`\n  uppercaseJ: 74, // `J`\n  uppercaseK: 75, // `K`\n  uppercaseL: 76, // `L`\n  uppercaseM: 77, // `M`\n  uppercaseN: 78, // `N`\n  uppercaseO: 79, // `O`\n  uppercaseP: 80, // `P`\n  uppercaseQ: 81, // `Q`\n  uppercaseR: 82, // `R`\n  uppercaseS: 83, // `S`\n  uppercaseT: 84, // `T`\n  uppercaseU: 85, // `U`\n  uppercaseV: 86, // `V`\n  uppercaseW: 87, // `W`\n  uppercaseX: 88, // `X`\n  uppercaseY: 89, // `Y`\n  uppercaseZ: 90, // `Z`\n  leftSquareBracket: 91, // `[`\n  backslash: 92, // `\\`\n  rightSquareBracket: 93, // `]`\n  caret: 94, // `^`\n  underscore: 95, // `_`\n  graveAccent: 96, // `` ` ``\n  lowercaseA: 97, // `a`\n  lowercaseB: 98, // `b`\n  lowercaseC: 99, // `c`\n  lowercaseD: 100, // `d`\n  lowercaseE: 101, // `e`\n  lowercaseF: 102, // `f`\n  lowercaseG: 103, // `g`\n  lowercaseH: 104, // `h`\n  lowercaseI: 105, // `i`\n  lowercaseJ: 106, // `j`\n  lowercaseK: 107, // `k`\n  lowercaseL: 108, // `l`\n  lowercaseM: 109, // `m`\n  lowercaseN: 110, // `n`\n  lowercaseO: 111, // `o`\n  lowercaseP: 112, // `p`\n  lowercaseQ: 113, // `q`\n  lowercaseR: 114, // `r`\n  lowercaseS: 115, // `s`\n  lowercaseT: 116, // `t`\n  lowercaseU: 117, // `u`\n  lowercaseV: 118, // `v`\n  lowercaseW: 119, // `w`\n  lowercaseX: 120, // `x`\n  lowercaseY: 121, // `y`\n  lowercaseZ: 122, // `z`\n  leftCurlyBrace: 123, // `{`\n  verticalBar: 124, // `|`\n  rightCurlyBrace: 125, // `}`\n  tilde: 126, // `~`\n  del: 127,\n  // Unicode Specials block.\n  byteOrderMarker: 65279,\n  // Unicode Specials block.\n  replacementCharacter: 65533 // `�`\n})\n","/**\n * This module is compiled away!\n *\n * Parsing markdown comes with a couple of constants, such as minimum or maximum\n * sizes of certain sequences.\n * Additionally, there are a couple symbols used inside micromark.\n * These are all defined here, but compiled away by scripts.\n */\nexport const constants = /** @type {const} */ ({\n  attentionSideBefore: 1, // Symbol to mark an attention sequence as before content: `*a`\n  attentionSideAfter: 2, // Symbol to mark an attention sequence as after content: `a*`\n  atxHeadingOpeningFenceSizeMax: 6, // 6 number signs is fine, 7 isn’t.\n  autolinkDomainSizeMax: 63, // 63 characters is fine, 64 is too many.\n  autolinkSchemeSizeMax: 32, // 32 characters is fine, 33 is too many.\n  cdataOpeningString: 'CDATA[', // And preceded by `<![`.\n  characterGroupWhitespace: 1, // Symbol used to indicate a character is whitespace\n  characterGroupPunctuation: 2, // Symbol used to indicate a character is punctuation\n  characterReferenceDecimalSizeMax: 7, // `&#9999999;`.\n  characterReferenceHexadecimalSizeMax: 6, // `&#xff9999;`.\n  characterReferenceNamedSizeMax: 31, // `&CounterClockwiseContourIntegral;`.\n  codeFencedSequenceSizeMin: 3, // At least 3 ticks or tildes are needed.\n  contentTypeDocument: 'document',\n  contentTypeFlow: 'flow',\n  contentTypeContent: 'content',\n  contentTypeString: 'string',\n  contentTypeText: 'text',\n  hardBreakPrefixSizeMin: 2, // At least 2 trailing spaces are needed.\n  htmlRaw: 1, // Symbol for `<script>`\n  htmlComment: 2, // Symbol for `<!---->`\n  htmlInstruction: 3, // Symbol for `<?php?>`\n  htmlDeclaration: 4, // Symbol for `<!doctype>`\n  htmlCdata: 5, // Symbol for `<![CDATA[]]>`\n  htmlBasic: 6, // Symbol for `<div`\n  htmlComplete: 7, // Symbol for `<x>`\n  htmlRawSizeMax: 8, // Length of `textarea`.\n  linkResourceDestinationBalanceMax: 32, // See: <https://spec.commonmark.org/0.30/#link-destination>, <https://github.com/remarkjs/react-markdown/issues/658#issuecomment-984345577>\n  linkReferenceSizeMax: 999, // See: <https://spec.commonmark.org/0.30/#link-label>\n  listItemValueSizeMax: 10, // See: <https://spec.commonmark.org/0.30/#ordered-list-marker>\n  numericBaseDecimal: 10,\n  numericBaseHexadecimal: 0x10,\n  tabSize: 4, // Tabs have a hard-coded size of 4, per CommonMark.\n  thematicBreakMarkerCountMin: 3, // At least 3 asterisks, dashes, or underscores are needed.\n  v8MaxSafeChunkSize: 10000 // V8 (and potentially others) have problems injecting giant arrays into other arrays, hence we operate in chunks.\n})\n","/**\n * This module is compiled away!\n *\n * Here is the list of all types of tokens exposed by micromark, with a short\n * explanation of what they include and where they are found.\n * In picking names, generally, the rule is to be as explicit as possible\n * instead of reusing names.\n * For example, there is a `definitionDestination` and a `resourceDestination`,\n * instead of one shared name.\n */\n\n// Note: when changing the next record, you must also change `TokenTypeMap`\n// in `micromark-util-types/index.d.ts`.\nexport const types = /** @type {const} */ ({\n  // Generic type for data, such as in a title, a destination, etc.\n  data: 'data',\n\n  // Generic type for syntactic whitespace (tabs, virtual spaces, spaces).\n  // Such as, between a fenced code fence and an info string.\n  whitespace: 'whitespace',\n\n  // Generic type for line endings (line feed, carriage return, carriage return +\n  // line feed).\n  lineEnding: 'lineEnding',\n\n  // A line ending, but ending a blank line.\n  lineEndingBlank: 'lineEndingBlank',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the start of a\n  // line.\n  linePrefix: 'linePrefix',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the end of a\n  // line.\n  lineSuffix: 'lineSuffix',\n\n  // Whole ATX heading:\n  //\n  // ```markdown\n  // #\n  // ## Alpha\n  // ### Bravo ###\n  // ```\n  //\n  // Includes `atxHeadingSequence`, `whitespace`, `atxHeadingText`.\n  atxHeading: 'atxHeading',\n\n  // Sequence of number signs in an ATX heading (`###`).\n  atxHeadingSequence: 'atxHeadingSequence',\n\n  // Content in an ATX heading (`alpha`).\n  // Includes text.\n  atxHeadingText: 'atxHeadingText',\n\n  // Whole autolink (`<https://example.com>` or `<admin@example.com>`)\n  // Includes `autolinkMarker` and `autolinkProtocol` or `autolinkEmail`.\n  autolink: 'autolink',\n\n  // Email autolink w/o markers (`admin@example.com`)\n  autolinkEmail: 'autolinkEmail',\n\n  // Marker around an `autolinkProtocol` or `autolinkEmail` (`<` or `>`).\n  autolinkMarker: 'autolinkMarker',\n\n  // Protocol autolink w/o markers (`https://example.com`)\n  autolinkProtocol: 'autolinkProtocol',\n\n  // A whole character escape (`\\-`).\n  // Includes `escapeMarker` and `characterEscapeValue`.\n  characterEscape: 'characterEscape',\n\n  // The escaped character (`-`).\n  characterEscapeValue: 'characterEscapeValue',\n\n  // A whole character reference (`&amp;`, `&#8800;`, or `&#x1D306;`).\n  // Includes `characterReferenceMarker`, an optional\n  // `characterReferenceMarkerNumeric`, in which case an optional\n  // `characterReferenceMarkerHexadecimal`, and a `characterReferenceValue`.\n  characterReference: 'characterReference',\n\n  // The start or end marker (`&` or `;`).\n  characterReferenceMarker: 'characterReferenceMarker',\n\n  // Mark reference as numeric (`#`).\n  characterReferenceMarkerNumeric: 'characterReferenceMarkerNumeric',\n\n  // Mark reference as numeric (`x` or `X`).\n  characterReferenceMarkerHexadecimal: 'characterReferenceMarkerHexadecimal',\n\n  // Value of character reference w/o markers (`amp`, `8800`, or `1D306`).\n  characterReferenceValue: 'characterReferenceValue',\n\n  // Whole fenced code:\n  //\n  // ````markdown\n  // ```js\n  // alert(1)\n  // ```\n  // ````\n  codeFenced: 'codeFenced',\n\n  // A fenced code fence, including whitespace, sequence, info, and meta\n  // (` ```js `).\n  codeFencedFence: 'codeFencedFence',\n\n  // Sequence of grave accent or tilde characters (` ``` `) in a fence.\n  codeFencedFenceSequence: 'codeFencedFenceSequence',\n\n  // Info word (`js`) in a fence.\n  // Includes string.\n  codeFencedFenceInfo: 'codeFencedFenceInfo',\n\n  // Meta words (`highlight=\"1\"`) in a fence.\n  // Includes string.\n  codeFencedFenceMeta: 'codeFencedFenceMeta',\n\n  // A line of code.\n  codeFlowValue: 'codeFlowValue',\n\n  // Whole indented code:\n  //\n  // ```markdown\n  //     alert(1)\n  // ```\n  //\n  // Includes `lineEnding`, `linePrefix`, and `codeFlowValue`.\n  codeIndented: 'codeIndented',\n\n  // A text code (``` `alpha` ```).\n  // Includes `codeTextSequence`, `codeTextData`, `lineEnding`, and can include\n  // `codeTextPadding`.\n  codeText: 'codeText',\n\n  codeTextData: 'codeTextData',\n\n  // A space or line ending right after or before a tick.\n  codeTextPadding: 'codeTextPadding',\n\n  // A text code fence (` `` `).\n  codeTextSequence: 'codeTextSequence',\n\n  // Whole content:\n  //\n  // ```markdown\n  // [a]: b\n  // c\n  // =\n  // d\n  // ```\n  //\n  // Includes `paragraph` and `definition`.\n  content: 'content',\n  // Whole definition:\n  //\n  // ```markdown\n  // [micromark]: https://github.com/micromark/micromark\n  // ```\n  //\n  // Includes `definitionLabel`, `definitionMarker`, `whitespace`,\n  // `definitionDestination`, and optionally `lineEnding` and `definitionTitle`.\n  definition: 'definition',\n\n  // Destination of a definition (`https://github.com/micromark/micromark` or\n  // `<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteral` or `definitionDestinationRaw`.\n  definitionDestination: 'definitionDestination',\n\n  // Enclosed destination of a definition\n  // (`<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteralMarker` and optionally\n  // `definitionDestinationString`.\n  definitionDestinationLiteral: 'definitionDestinationLiteral',\n\n  // Markers of an enclosed definition destination (`<` or `>`).\n  definitionDestinationLiteralMarker: 'definitionDestinationLiteralMarker',\n\n  // Unenclosed destination of a definition\n  // (`https://github.com/micromark/micromark`).\n  // Includes `definitionDestinationString`.\n  definitionDestinationRaw: 'definitionDestinationRaw',\n\n  // Text in an destination (`https://github.com/micromark/micromark`).\n  // Includes string.\n  definitionDestinationString: 'definitionDestinationString',\n\n  // Label of a definition (`[micromark]`).\n  // Includes `definitionLabelMarker` and `definitionLabelString`.\n  definitionLabel: 'definitionLabel',\n\n  // Markers of a definition label (`[` or `]`).\n  definitionLabelMarker: 'definitionLabelMarker',\n\n  // Value of a definition label (`micromark`).\n  // Includes string.\n  definitionLabelString: 'definitionLabelString',\n\n  // Marker between a label and a destination (`:`).\n  definitionMarker: 'definitionMarker',\n\n  // Title of a definition (`\"x\"`, `'y'`, or `(z)`).\n  // Includes `definitionTitleMarker` and optionally `definitionTitleString`.\n  definitionTitle: 'definitionTitle',\n\n  // Marker around a title of a definition (`\"`, `'`, `(`, or `)`).\n  definitionTitleMarker: 'definitionTitleMarker',\n\n  // Data without markers in a title (`z`).\n  // Includes string.\n  definitionTitleString: 'definitionTitleString',\n\n  // Emphasis (`*alpha*`).\n  // Includes `emphasisSequence` and `emphasisText`.\n  emphasis: 'emphasis',\n\n  // Sequence of emphasis markers (`*` or `_`).\n  emphasisSequence: 'emphasisSequence',\n\n  // Emphasis text (`alpha`).\n  // Includes text.\n  emphasisText: 'emphasisText',\n\n  // The character escape marker (`\\`).\n  escapeMarker: 'escapeMarker',\n\n  // A hard break created with a backslash (`\\\\n`).\n  // Note: does not include the line ending.\n  hardBreakEscape: 'hardBreakEscape',\n\n  // A hard break created with trailing spaces (`  \\n`).\n  // Does not include the line ending.\n  hardBreakTrailing: 'hardBreakTrailing',\n\n  // Flow HTML:\n  //\n  // ```markdown\n  // <div\n  // ```\n  //\n  // Inlcudes `lineEnding`, `htmlFlowData`.\n  htmlFlow: 'htmlFlow',\n\n  htmlFlowData: 'htmlFlowData',\n\n  // HTML in text (the tag in `a <i> b`).\n  // Includes `lineEnding`, `htmlTextData`.\n  htmlText: 'htmlText',\n\n  htmlTextData: 'htmlTextData',\n\n  // Whole image (`![alpha](bravo)`, `![alpha][bravo]`, `![alpha][]`, or\n  // `![alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  image: 'image',\n\n  // Whole link label (`[*alpha*]`).\n  // Includes `labelLink` or `labelImage`, `labelText`, and `labelEnd`.\n  label: 'label',\n\n  // Text in an label (`*alpha*`).\n  // Includes text.\n  labelText: 'labelText',\n\n  // Start a link label (`[`).\n  // Includes a `labelMarker`.\n  labelLink: 'labelLink',\n\n  // Start an image label (`![`).\n  // Includes `labelImageMarker` and `labelMarker`.\n  labelImage: 'labelImage',\n\n  // Marker of a label (`[` or `]`).\n  labelMarker: 'labelMarker',\n\n  // Marker to start an image (`!`).\n  labelImageMarker: 'labelImageMarker',\n\n  // End a label (`]`).\n  // Includes `labelMarker`.\n  labelEnd: 'labelEnd',\n\n  // Whole link (`[alpha](bravo)`, `[alpha][bravo]`, `[alpha][]`, or `[alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  link: 'link',\n\n  // Whole paragraph:\n  //\n  // ```markdown\n  // alpha\n  // bravo.\n  // ```\n  //\n  // Includes text.\n  paragraph: 'paragraph',\n\n  // A reference (`[alpha]` or `[]`).\n  // Includes `referenceMarker` and an optional `referenceString`.\n  reference: 'reference',\n\n  // A reference marker (`[` or `]`).\n  referenceMarker: 'referenceMarker',\n\n  // Reference text (`alpha`).\n  // Includes string.\n  referenceString: 'referenceString',\n\n  // A resource (`(https://example.com \"alpha\")`).\n  // Includes `resourceMarker`, an optional `resourceDestination` with an optional\n  // `whitespace` and `resourceTitle`.\n  resource: 'resource',\n\n  // A resource destination (`https://example.com`).\n  // Includes `resourceDestinationLiteral` or `resourceDestinationRaw`.\n  resourceDestination: 'resourceDestination',\n\n  // A literal resource destination (`<https://example.com>`).\n  // Includes `resourceDestinationLiteralMarker` and optionally\n  // `resourceDestinationString`.\n  resourceDestinationLiteral: 'resourceDestinationLiteral',\n\n  // A resource destination marker (`<` or `>`).\n  resourceDestinationLiteralMarker: 'resourceDestinationLiteralMarker',\n\n  // A raw resource destination (`https://example.com`).\n  // Includes `resourceDestinationString`.\n  resourceDestinationRaw: 'resourceDestinationRaw',\n\n  // Resource destination text (`https://example.com`).\n  // Includes string.\n  resourceDestinationString: 'resourceDestinationString',\n\n  // A resource marker (`(` or `)`).\n  resourceMarker: 'resourceMarker',\n\n  // A resource title (`\"alpha\"`, `'alpha'`, or `(alpha)`).\n  // Includes `resourceTitleMarker` and optionally `resourceTitleString`.\n  resourceTitle: 'resourceTitle',\n\n  // A resource title marker (`\"`, `'`, `(`, or `)`).\n  resourceTitleMarker: 'resourceTitleMarker',\n\n  // Resource destination title (`alpha`).\n  // Includes string.\n  resourceTitleString: 'resourceTitleString',\n\n  // Whole setext heading:\n  //\n  // ```markdown\n  // alpha\n  // bravo\n  // =====\n  // ```\n  //\n  // Includes `setextHeadingText`, `lineEnding`, `linePrefix`, and\n  // `setextHeadingLine`.\n  setextHeading: 'setextHeading',\n\n  // Content in a setext heading (`alpha\\nbravo`).\n  // Includes text.\n  setextHeadingText: 'setextHeadingText',\n\n  // Underline in a setext heading, including whitespace suffix (`==`).\n  // Includes `setextHeadingLineSequence`.\n  setextHeadingLine: 'setextHeadingLine',\n\n  // Sequence of equals or dash characters in underline in a setext heading (`-`).\n  setextHeadingLineSequence: 'setextHeadingLineSequence',\n\n  // Strong (`**alpha**`).\n  // Includes `strongSequence` and `strongText`.\n  strong: 'strong',\n\n  // Sequence of strong markers (`**` or `__`).\n  strongSequence: 'strongSequence',\n\n  // Strong text (`alpha`).\n  // Includes text.\n  strongText: 'strongText',\n\n  // Whole thematic break:\n  //\n  // ```markdown\n  // * * *\n  // ```\n  //\n  // Includes `thematicBreakSequence` and `whitespace`.\n  thematicBreak: 'thematicBreak',\n\n  // A sequence of one or more thematic break markers (`***`).\n  thematicBreakSequence: 'thematicBreakSequence',\n\n  // Whole block quote:\n  //\n  // ```markdown\n  // > a\n  // >\n  // > b\n  // ```\n  //\n  // Includes `blockQuotePrefix` and flow.\n  blockQuote: 'blockQuote',\n  // The `>` or `> ` of a block quote.\n  blockQuotePrefix: 'blockQuotePrefix',\n  // The `>` of a block quote prefix.\n  blockQuoteMarker: 'blockQuoteMarker',\n  // The optional ` ` of a block quote prefix.\n  blockQuotePrefixWhitespace: 'blockQuotePrefixWhitespace',\n\n  // Whole unordered list:\n  //\n  // ```markdown\n  // - a\n  //   b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listOrdered: 'listOrdered',\n\n  // Whole ordered list:\n  //\n  // ```markdown\n  // 1. a\n  //    b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listUnordered: 'listUnordered',\n\n  // The indent of further list item lines.\n  listItemIndent: 'listItemIndent',\n\n  // A marker, as in, `*`, `+`, `-`, `.`, or `)`.\n  listItemMarker: 'listItemMarker',\n\n  // The thing that starts a list item, such as `1. `.\n  // Includes `listItemValue` if ordered, `listItemMarker`, and\n  // `listItemPrefixWhitespace` (unless followed by a line ending).\n  listItemPrefix: 'listItemPrefix',\n\n  // The whitespace after a marker.\n  listItemPrefixWhitespace: 'listItemPrefixWhitespace',\n\n  // The numerical value of an ordered item.\n  listItemValue: 'listItemValue',\n\n  // Internal types used for subtokenizers, compiled away\n  chunkDocument: 'chunkDocument',\n  chunkContent: 'chunkContent',\n  chunkFlow: 'chunkFlow',\n  chunkText: 'chunkText',\n  chunkString: 'chunkString'\n})\n","/**\n * This module is compiled away!\n *\n * While micromark works based on character codes, this module includes the\n * string versions of ’em.\n * The C0 block, except for LF, CR, HT, and w/ the replacement character added,\n * are available here.\n */\nexport const values = /** @type {const} */ ({\n  ht: '\\t',\n  lf: '\\n',\n  cr: '\\r',\n  space: ' ',\n  exclamationMark: '!',\n  quotationMark: '\"',\n  numberSign: '#',\n  dollarSign: '$',\n  percentSign: '%',\n  ampersand: '&',\n  apostrophe: \"'\",\n  leftParenthesis: '(',\n  rightParenthesis: ')',\n  asterisk: '*',\n  plusSign: '+',\n  comma: ',',\n  dash: '-',\n  dot: '.',\n  slash: '/',\n  digit0: '0',\n  digit1: '1',\n  digit2: '2',\n  digit3: '3',\n  digit4: '4',\n  digit5: '5',\n  digit6: '6',\n  digit7: '7',\n  digit8: '8',\n  digit9: '9',\n  colon: ':',\n  semicolon: ';',\n  lessThan: '<',\n  equalsTo: '=',\n  greaterThan: '>',\n  questionMark: '?',\n  atSign: '@',\n  uppercaseA: 'A',\n  uppercaseB: 'B',\n  uppercaseC: 'C',\n  uppercaseD: 'D',\n  uppercaseE: 'E',\n  uppercaseF: 'F',\n  uppercaseG: 'G',\n  uppercaseH: 'H',\n  uppercaseI: 'I',\n  uppercaseJ: 'J',\n  uppercaseK: 'K',\n  uppercaseL: 'L',\n  uppercaseM: 'M',\n  uppercaseN: 'N',\n  uppercaseO: 'O',\n  uppercaseP: 'P',\n  uppercaseQ: 'Q',\n  uppercaseR: 'R',\n  uppercaseS: 'S',\n  uppercaseT: 'T',\n  uppercaseU: 'U',\n  uppercaseV: 'V',\n  uppercaseW: 'W',\n  uppercaseX: 'X',\n  uppercaseY: 'Y',\n  uppercaseZ: 'Z',\n  leftSquareBracket: '[',\n  backslash: '\\\\',\n  rightSquareBracket: ']',\n  caret: '^',\n  underscore: '_',\n  graveAccent: '`',\n  lowercaseA: 'a',\n  lowercaseB: 'b',\n  lowercaseC: 'c',\n  lowercaseD: 'd',\n  lowercaseE: 'e',\n  lowercaseF: 'f',\n  lowercaseG: 'g',\n  lowercaseH: 'h',\n  lowercaseI: 'i',\n  lowercaseJ: 'j',\n  lowercaseK: 'k',\n  lowercaseL: 'l',\n  lowercaseM: 'm',\n  lowercaseN: 'n',\n  lowercaseO: 'o',\n  lowercaseP: 'p',\n  lowercaseQ: 'q',\n  lowercaseR: 'r',\n  lowercaseS: 's',\n  lowercaseT: 't',\n  lowercaseU: 'u',\n  lowercaseV: 'v',\n  lowercaseW: 'w',\n  lowercaseX: 'x',\n  lowercaseY: 'y',\n  lowercaseZ: 'z',\n  leftCurlyBrace: '{',\n  verticalBar: '|',\n  rightCurlyBrace: '}',\n  tilde: '~',\n  replacementCharacter: '�'\n})\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [codes.asterisk]: list,\n  [codes.plusSign]: list,\n  [codes.dash]: list,\n  [codes.digit0]: list,\n  [codes.digit1]: list,\n  [codes.digit2]: list,\n  [codes.digit3]: list,\n  [codes.digit4]: list,\n  [codes.digit5]: list,\n  [codes.digit6]: list,\n  [codes.digit7]: list,\n  [codes.digit8]: list,\n  [codes.digit9]: list,\n  [codes.greaterThan]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [codes.leftSquareBracket]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [codes.horizontalTab]: codeIndented,\n  [codes.virtualSpace]: codeIndented,\n  [codes.space]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [codes.numberSign]: headingAtx,\n  [codes.asterisk]: thematicBreak,\n  [codes.dash]: [setextUnderline, thematicBreak],\n  [codes.lessThan]: htmlFlow,\n  [codes.equalsTo]: setextUnderline,\n  [codes.underscore]: thematicBreak,\n  [codes.graveAccent]: codeFenced,\n  [codes.tilde]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [codes.ampersand]: characterReference,\n  [codes.backslash]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [codes.carriageReturn]: lineEnding,\n  [codes.lineFeed]: lineEnding,\n  [codes.carriageReturnLineFeed]: lineEnding,\n  [codes.exclamationMark]: labelStartImage,\n  [codes.ampersand]: characterReference,\n  [codes.asterisk]: attention,\n  [codes.lessThan]: [autolink, htmlText],\n  [codes.leftSquareBracket]: labelStartLink,\n  [codes.backslash]: [hardBreakEscape, characterEscape],\n  [codes.rightSquareBracket]: labelEnd,\n  [codes.underscore]: attention,\n  [codes.graveAccent]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {null: [attention, resolveText]}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {null: [codes.asterisk, codes.underscore]}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {null: []}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport createDebug from 'debug'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {values} from 'micromark-util-symbol/values.js'\nimport {ok as assert} from 'uvu/assert'\n\nconst debug = createDebug('micromark')\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from ? Object.assign({}, from) : {line: 1, column: 1, offset: 0},\n    {_index: 0, _bufferIndex: -1}\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {interrupt: true})\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: codes.eof,\n    code: codes.eof,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== codes.eof) {\n      return []\n    }\n\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {line, column, offset, _index, _bufferIndex}\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n    debug('position: define skip: `%j`', point)\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    assert(consumed === true, 'expected character to be consumed')\n    consumed = undefined\n    debug('main: passing `%s` to %s', code, state && state.name)\n    expectedCode = code\n    assert(typeof state === 'function', 'expected state')\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    assert(code === expectedCode, 'expected given code to equal expected code')\n\n    debug('consume: `%s`', code)\n\n    assert(\n      consumed === undefined,\n      'expected code to not have been consumed: this might be because `return x(code)` instead of `return x` was used'\n    )\n    assert(\n      code === null\n        ? context.events.length === 0 ||\n            context.events[context.events.length - 1][0] === 'exit'\n        : context.events[context.events.length - 1][0] === 'enter',\n      'expected last token to be open'\n    )\n\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === codes.carriageReturnLineFeed ? 2 : 1\n      accountForPotentialSkip()\n      debug('position: after eol: `%j`', point)\n    } else if (code !== codes.virtualSpace) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n\n    assert(typeof type === 'string', 'expected string type')\n    assert(type.length > 0, 'expected non-empty string')\n    debug('enter: `%s`', type)\n\n    context.events.push(['enter', token, context])\n\n    stack.push(token)\n\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    assert(typeof type === 'string', 'expected string type')\n    assert(type.length > 0, 'expected non-empty string')\n\n    const token = stack.pop()\n    assert(token, 'cannot close w/o open tokens')\n    token.end = now()\n\n    assert(type === token.type, 'expected exit token to match current token')\n\n    assert(\n      !(\n        token.start._index === token.end._index &&\n        token.start._bufferIndex === token.end._bufferIndex\n      ),\n      'expected non-empty token (`' + type + '`)'\n    )\n\n    debug('exit: `%s`', token.type)\n    context.events.push(['exit', token, context])\n\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          assert(bogusState, 'expected `bogusState` to be given')\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n          assert(\n            context.parser.constructs.disable.null,\n            'expected `disable.null` to be populated'\n          )\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        assert(code === expectedCode, 'expected code')\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        assert(code === expectedCode, 'expected code')\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n\n    assert(\n      construct.partial ||\n        context.events.length === 0 ||\n        context.events[context.events.length - 1][0] === 'exit',\n      'expected last token to end'\n    )\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n\n    return {restore, from: startEventsIndex}\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n      debug('position: restore: `%j`', point)\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n\n  if (startIndex === endIndex) {\n    assert(endBufferIndex > -1, 'expected non-negative end buffer index')\n    assert(startBufferIndex > -1, 'expected non-negative start buffer index')\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        assert(startBufferIndex === 0, 'expected `startBufferIndex` to be `0`')\n        view.shift()\n      }\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case codes.carriageReturn: {\n          value = values.cr\n\n          break\n        }\n\n        case codes.lineFeed: {\n          value = values.lf\n\n          break\n        }\n\n        case codes.carriageReturnLineFeed: {\n          value = values.cr + values.lf\n\n          break\n        }\n\n        case codes.horizontalTab: {\n          value = expandTabs ? values.space : values.ht\n\n          break\n        }\n\n        case codes.virtualSpace: {\n          if (!expandTabs && atTab) continue\n          value = values.space\n\n          break\n        }\n\n        default: {\n          assert(typeof chunk === 'number', 'expected number')\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === codes.horizontalTab\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {InitialConstruct} */\nexport const content = {tokenize: initializeContent}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, contentStart, types.linePrefix)\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    assert(\n      code !== codes.eof && !markdownLineEnding(code),\n      'expected anything other than a line ending or EOF'\n    )\n    effects.enter(types.paragraph)\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(types.chunkText, {\n      contentType: constants.contentTypeText,\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === codes.eof) {\n      effects.exit(types.chunkText)\n      effects.exit(types.paragraph)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit(types.chunkText)\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {InitialConstruct} */\nexport const document = {tokenize: initializeDocument}\n\n/** @type {Construct} */\nconst containerConstruct = {tokenize: tokenizeContainer}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      assert(\n        item[0].continuation,\n        'expected `continuation` to be defined on container construct'\n      )\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined after continuation'\n    )\n\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === types.chunkFlow\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      assert(point, 'could not find previous flow chunk')\n\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    assert(\n      self.currentConstruct,\n      'expected `currentConstruct` to be defined on tokenizer'\n    )\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined on tokenizer'\n    )\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === codes.eof) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter(types.chunkFlow, {\n      contentType: constants.contentTypeFlow,\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === codes.eof) {\n      writeToChild(effects.exit(types.chunkFlow), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit(types.chunkFlow))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    assert(childFlow, 'expected `childFlow` to be defined when continuing')\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === types.chunkFlow\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      assert(point, 'could not find previous flow chunk')\n\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      assert(\n        entry[0].exit,\n        'expected `exit` to be defined on container construct'\n      )\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined when closing flow'\n    )\n    assert(childFlow, 'expected `childFlow` to be defined when closing it')\n    childFlow.write([codes.eof])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n  assert(\n    this.parser.constructs.disable.null,\n    'expected `disable.null` to be populated'\n  )\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    types.linePrefix,\n    this.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : constants.tabSize\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\n/** @type {InitialConstruct} */\nexport const flow = {tokenize: initializeFlow}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        types.linePrefix\n      )\n    )\n  )\n\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEndingBlank)\n    effects.consume(code)\n    effects.exit(types.lineEndingBlank)\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\nimport {types} from 'micromark-util-symbol/types.js'\nimport {ok as assert} from 'uvu/assert'\n\nexport const resolver = {resolveAll: createResolver()}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === codes.eof) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter(types.data)\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(types.data)\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === codes.eof) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        // Always populated by defaults.\n        assert(Array.isArray(list), 'expected `disable.null` to be populated')\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === types.data) {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== types.data) {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === types.lineEnding) &&\n      events[eventIndex - 1][1].type === types.data\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === codes.space) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === codes.horizontalTab) {\n          tabs = true\n          size++\n        } else if (chunk === codes.virtualSpace) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length ||\n            tabs ||\n            size < constants.hardBreakPrefixSizeMin\n              ? types.lineSuffix\n              : types.hardBreakTrailing,\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs = /** @type {FullNormalizedExtension} */ (\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n  )\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nimport {codes} from 'micromark-util-symbol/codes.js'\nimport {constants} from 'micromark-util-symbol/constants.js'\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === codes.byteOrderMarker) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (\n        code === codes.lf &&\n        startPosition === endPosition &&\n        atCarriageReturn\n      ) {\n        chunks.push(codes.carriageReturnLineFeed)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(codes.carriageReturn)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case codes.nul: {\n            chunks.push(codes.replacementCharacter)\n            column++\n\n            break\n          }\n\n          case codes.ht: {\n            next = Math.ceil(column / constants.tabSize) * constants.tabSize\n            chunks.push(codes.horizontalTab)\n            while (column++ < next) chunks.push(codes.virtualSpace)\n\n            break\n          }\n\n          case codes.lf: {\n            chunks.push(codes.lineFeed)\n            column = 1\n\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(codes.carriageReturn)\n      if (buffer) chunks.push(buffer)\n      chunks.push(codes.eof)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","import { dequal } from 'dequal';\nimport { compare, lines } from 'uvu/diff';\n\nfunction dedent(str) {\n\tstr = str.replace(/\\r?\\n/g, '\\n');\n  let arr = str.match(/^[ \\t]*(?=\\S)/gm);\n  let i = 0, min = 1/0, len = (arr||[]).length;\n  for (; i < len; i++) min = Math.min(min, arr[i].length);\n  return len && min ? str.replace(new RegExp(`^[ \\\\t]{${min}}`, 'gm'), '') : str;\n}\n\nexport class Assertion extends Error {\n\tconstructor(opts={}) {\n\t\tsuper(opts.message);\n\t\tthis.name = 'Assertion';\n\t\tthis.code = 'ERR_ASSERTION';\n\t\tif (Error.captureStackTrace) {\n\t\t\tError.captureStackTrace(this, this.constructor);\n\t\t}\n\t\tthis.details = opts.details || false;\n\t\tthis.generated = !!opts.generated;\n\t\tthis.operator = opts.operator;\n\t\tthis.expects = opts.expects;\n\t\tthis.actual = opts.actual;\n\t}\n}\n\nfunction assert(bool, actual, expects, operator, detailer, backup, msg) {\n\tif (bool) return;\n\tlet message = msg || backup;\n\tif (msg instanceof Error) throw msg;\n\tlet details = detailer && detailer(actual, expects);\n\tthrow new Assertion({ actual, expects, operator, message, details, generated: !msg });\n}\n\nexport function ok(val, msg) {\n\tassert(!!val, false, true, 'ok', false, 'Expected value to be truthy', msg);\n}\n\nexport function is(val, exp, msg) {\n\tassert(val === exp, val, exp, 'is', compare, 'Expected values to be strictly equal:', msg);\n}\n\nexport function equal(val, exp, msg) {\n\tassert(dequal(val, exp), val, exp, 'equal', compare, 'Expected values to be deeply equal:', msg);\n}\n\nexport function unreachable(msg) {\n\tassert(false, true, false, 'unreachable', false, 'Expected not to be reached!', msg);\n}\n\nexport function type(val, exp, msg) {\n\tlet tmp = typeof val;\n\tassert(tmp === exp, tmp, exp, 'type', false, `Expected \"${tmp}\" to be \"${exp}\"`, msg);\n}\n\nexport function instance(val, exp, msg) {\n\tlet name = '`' + (exp.name || exp.constructor.name) + '`';\n\tassert(val instanceof exp, val, exp, 'instance', false, `Expected value to be an instance of ${name}`, msg);\n}\n\nexport function match(val, exp, msg) {\n\tif (typeof exp === 'string') {\n\t\tassert(val.includes(exp), val, exp, 'match', false, `Expected value to include \"${exp}\" substring`, msg);\n\t} else {\n\t\tassert(exp.test(val), val, exp, 'match', false, `Expected value to match \\`${String(exp)}\\` pattern`, msg);\n\t}\n}\n\nexport function snapshot(val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val === exp, val, exp, 'snapshot', lines, 'Expected value to match snapshot:', msg);\n}\n\nconst lineNums = (x, y) => lines(x, y, 1);\nexport function fixture(val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val === exp, val, exp, 'fixture', lineNums, 'Expected value to match fixture:', msg);\n}\n\nexport function throws(blk, exp, msg) {\n\tif (!msg && typeof exp === 'string') {\n\t\tmsg = exp; exp = null;\n\t}\n\n\ttry {\n\t\tblk();\n\t\tassert(false, false, true, 'throws', false, 'Expected function to throw', msg);\n\t} catch (err) {\n\t\tif (err instanceof Assertion) throw err;\n\n\t\tif (typeof exp === 'function') {\n\t\t\tassert(exp(err), false, true, 'throws', false, 'Expected function to throw matching exception', msg);\n\t\t} else if (exp instanceof RegExp) {\n\t\t\tassert(exp.test(err.message), false, true, 'throws', false, `Expected function to throw exception matching \\`${String(exp)}\\` pattern`, msg);\n\t\t}\n\t}\n}\n\n// ---\n\nexport function not(val, msg) {\n\tassert(!val, true, false, 'not', false, 'Expected value to be falsey', msg);\n}\n\nnot.ok = not;\n\nis.not = function (val, exp, msg) {\n\tassert(val !== exp, val, exp, 'is.not', false, 'Expected values not to be strictly equal', msg);\n}\n\nnot.equal = function (val, exp, msg) {\n\tassert(!dequal(val, exp), val, exp, 'not.equal', false, 'Expected values not to be deeply equal', msg);\n}\n\nnot.type = function (val, exp, msg) {\n\tlet tmp = typeof val;\n\tassert(tmp !== exp, tmp, exp, 'not.type', false, `Expected \"${tmp}\" not to be \"${exp}\"`, msg);\n}\n\nnot.instance = function (val, exp, msg) {\n\tlet name = '`' + (exp.name || exp.constructor.name) + '`';\n\tassert(!(val instanceof exp), val, exp, 'not.instance', false, `Expected value not to be an instance of ${name}`, msg);\n}\n\nnot.snapshot = function (val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val !== exp, val, exp, 'not.snapshot', false, 'Expected value not to match snapshot', msg);\n}\n\nnot.fixture = function (val, exp, msg) {\n\tval=dedent(val); exp=dedent(exp);\n\tassert(val !== exp, val, exp, 'not.fixture', false, 'Expected value not to match fixture', msg);\n}\n\nnot.match = function (val, exp, msg) {\n\tif (typeof exp === 'string') {\n\t\tassert(!val.includes(exp), val, exp, 'not.match', false, `Expected value not to include \"${exp}\" substring`, msg);\n\t} else {\n\t\tassert(!exp.test(val), val, exp, 'not.match', false, `Expected value not to match \\`${String(exp)}\\` pattern`, msg);\n\t}\n}\n\nnot.throws = function (blk, exp, msg) {\n\tif (!msg && typeof exp === 'string') {\n\t\tmsg = exp; exp = null;\n\t}\n\n\ttry {\n\t\tblk();\n\t} catch (err) {\n\t\tif (typeof exp === 'function') {\n\t\t\tassert(!exp(err), true, false, 'not.throws', false, 'Expected function not to throw matching exception', msg);\n\t\t} else if (exp instanceof RegExp) {\n\t\t\tassert(!exp.test(err.message), true, false, 'not.throws', false, `Expected function not to throw exception matching \\`${String(exp)}\\` pattern`, msg);\n\t\t} else if (!exp) {\n\t\t\tassert(false, true, false, 'not.throws', false, 'Expected function not to throw', msg);\n\t\t}\n\t}\n}\n","import kleur from 'kleur';\nimport * as diff from 'diff';\n\nconst colors = {\n\t'--': kleur.red,\n\t'··': kleur.grey,\n\t'++': kleur.green,\n};\n\nconst TITLE = kleur.dim().italic;\nconst TAB=kleur.dim('→'), SPACE=kleur.dim('·'), NL=kleur.dim('↵');\nconst LOG = (sym, str) => colors[sym](sym + PRETTY(str)) + '\\n';\nconst LINE = (num, x) => kleur.dim('L' + String(num).padStart(x, '0') + ' ');\nconst PRETTY = str => str.replace(/[ ]/g, SPACE).replace(/\\t/g, TAB).replace(/(\\r?\\n)/g, NL);\n\nfunction line(obj, prev, pad) {\n\tlet char = obj.removed ? '--' : obj.added ? '++' : '··';\n\tlet arr = obj.value.replace(/\\r?\\n$/, '').split('\\n');\n\tlet i=0, tmp, out='';\n\n\tif (obj.added) out += colors[char]().underline(TITLE('Expected:')) + '\\n';\n\telse if (obj.removed) out += colors[char]().underline(TITLE('Actual:')) + '\\n';\n\n\tfor (; i < arr.length; i++) {\n\t\ttmp = arr[i];\n\t\tif (tmp != null) {\n\t\t\tif (prev) out += LINE(prev + i, pad);\n\t\t\tout += LOG(char, tmp || '\\n');\n\t\t}\n\t}\n\n\treturn out;\n}\n\n// TODO: want better diffing\n//~> complex items bail outright\nexport function arrays(input, expect) {\n\tlet arr = diff.diffArrays(input, expect);\n\tlet i=0, j=0, k=0, tmp, val, char, isObj, str;\n\tlet out = LOG('··', '[');\n\n\tfor (; i < arr.length; i++) {\n\t\tchar = (tmp = arr[i]).removed ? '--' : tmp.added ? '++' : '··';\n\n\t\tif (tmp.added) {\n\t\t\tout += colors[char]().underline(TITLE('Expected:')) + '\\n';\n\t\t} else if (tmp.removed) {\n\t\t\tout += colors[char]().underline(TITLE('Actual:')) + '\\n';\n\t\t}\n\n\t\tfor (j=0; j < tmp.value.length; j++) {\n\t\t\tisObj = (tmp.value[j] && typeof tmp.value[j] === 'object');\n\t\t\tval = stringify(tmp.value[j]).split(/\\r?\\n/g);\n\t\t\tfor (k=0; k < val.length;) {\n\t\t\t\tstr = '  ' + val[k++] + (isObj ? '' : ',');\n\t\t\t\tif (isObj && k === val.length && (j + 1) < tmp.value.length) str += ',';\n\t\t\t\tout += LOG(char, str);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out + LOG('··', ']');\n}\n\nexport function lines(input, expect, linenum = 0) {\n\tlet i=0, tmp, output='';\n\tlet arr = diff.diffLines(input, expect);\n\tlet pad = String(expect.split(/\\r?\\n/g).length - linenum).length;\n\n\tfor (; i < arr.length; i++) {\n\t\toutput += line(tmp = arr[i], linenum, pad);\n\t\tif (linenum && !tmp.removed) linenum += tmp.count;\n\t}\n\n\treturn output;\n}\n\nexport function chars(input, expect) {\n\tlet arr = diff.diffChars(input, expect);\n\tlet i=0, output='', tmp;\n\n\tlet l1 = input.length;\n\tlet l2 = expect.length;\n\n\tlet p1 = PRETTY(input);\n\tlet p2 = PRETTY(expect);\n\n\ttmp = arr[i];\n\n\tif (l1 === l2) {\n\t\t// no length offsets\n\t} else if (tmp.removed && arr[i + 1]) {\n\t\tlet del = tmp.count - arr[i + 1].count;\n\t\tif (del == 0) {\n\t\t\t// wash~\n\t\t} else if (del > 0) {\n\t\t\texpect = ' '.repeat(del) + expect;\n\t\t\tp2 = ' '.repeat(del) + p2;\n\t\t\tl2 += del;\n\t\t} else if (del < 0) {\n\t\t\tinput = ' '.repeat(-del) + input;\n\t\t\tp1 = ' '.repeat(-del) + p1;\n\t\t\tl1 += -del;\n\t\t}\n\t}\n\n\toutput += direct(p1, p2, l1, l2);\n\n\tif (l1 === l2) {\n\t\tfor (tmp='  '; i < l1; i++) {\n\t\t\ttmp += input[i] === expect[i] ? ' ' : '^';\n\t\t}\n\t} else {\n\t\tfor (tmp='  '; i < arr.length; i++) {\n\t\t\ttmp += ((arr[i].added || arr[i].removed) ? '^' : ' ').repeat(Math.max(arr[i].count, 0));\n\t\t\tif (i + 1 < arr.length && ((arr[i].added && arr[i+1].removed) || (arr[i].removed && arr[i+1].added))) {\n\t\t\t\tarr[i + 1].count -= arr[i].count;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output + kleur.red(tmp);\n}\n\nexport function direct(input, expect, lenA = String(input).length, lenB = String(expect).length) {\n\tlet gutter = 4;\n\tlet lenC = Math.max(lenA, lenB);\n\tlet typeA=typeof input, typeB=typeof expect;\n\n\tif (typeA !== typeB) {\n\t\tgutter = 2;\n\n\t\tlet delA = gutter + lenC - lenA;\n\t\tlet delB = gutter + lenC - lenB;\n\n\t\tinput += ' '.repeat(delA) + kleur.dim(`[${typeA}]`);\n\t\texpect += ' '.repeat(delB) + kleur.dim(`[${typeB}]`);\n\n\t\tlenA += delA + typeA.length + 2;\n\t\tlenB += delB + typeB.length + 2;\n\t\tlenC = Math.max(lenA, lenB);\n\t}\n\n\tlet output = colors['++']('++' + expect + ' '.repeat(gutter + lenC - lenB) + TITLE('(Expected)')) + '\\n';\n\treturn output + colors['--']('--' + input + ' '.repeat(gutter + lenC - lenA) + TITLE('(Actual)')) + '\\n';\n}\n\nexport function sort(input, expect) {\n\tvar k, i=0, tmp, isArr = Array.isArray(input);\n\tvar keys=[], out=isArr ? Array(input.length) : {};\n\n\tif (isArr) {\n\t\tfor (i=0; i < out.length; i++) {\n\t\t\ttmp = input[i];\n\t\t\tif (!tmp || typeof tmp !== 'object') out[i] = tmp;\n\t\t\telse out[i] = sort(tmp, expect[i]); // might not be right\n\t\t}\n\t} else {\n\t\tfor (k in expect)\n\t\t\tkeys.push(k);\n\n\t\tfor (; i < keys.length; i++) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(input, k = keys[i])) {\n\t\t\t\tif (!(tmp = input[k]) || typeof tmp !== 'object') out[k] = tmp;\n\t\t\t\telse out[k] = sort(tmp, expect[k]);\n\t\t\t}\n\t\t}\n\n\t\tfor (k in input) {\n\t\t\tif (!out.hasOwnProperty(k)) {\n\t\t\t\tout[k] = input[k]; // expect didnt have\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\nexport function circular() {\n\tvar cache = new Set;\n\treturn function print(key, val) {\n\t\tif (val === void 0) return '[__VOID__]';\n\t\tif (typeof val === 'number' && val !== val) return '[__NAN__]';\n\t\tif (typeof val === 'bigint') return val.toString();\n\t\tif (!val || typeof val !== 'object') return val;\n\t\tif (cache.has(val)) return '[Circular]';\n\t\tcache.add(val); return val;\n\t}\n}\n\nexport function stringify(input) {\n\treturn JSON.stringify(input, circular(), 2).replace(/\"\\[__NAN__\\]\"/g, 'NaN').replace(/\"\\[__VOID__\\]\"/g, 'undefined');\n}\n\nexport function compare(input, expect) {\n\tif (Array.isArray(expect) && Array.isArray(input)) return arrays(input, expect);\n\tif (expect instanceof RegExp) return chars(''+input, ''+expect);\n\n\tlet isA = input && typeof input == 'object';\n\tlet isB = expect && typeof expect == 'object';\n\n\tif (isA && isB) input = sort(input, expect);\n\tif (isB) expect = stringify(expect);\n\tif (isA) input = stringify(input);\n\n\tif (expect && typeof expect == 'object') {\n\t\tinput = stringify(sort(input, expect));\n\t\texpect = stringify(expect);\n\t}\n\n\tisA = typeof input == 'string';\n\tisB = typeof expect == 'string';\n\n\tif (isA && /\\r?\\n/.test(input)) return lines(input, ''+expect);\n\tif (isB && /\\r?\\n/.test(expect)) return lines(''+input, expect);\n\tif (isA && isB) return chars(input, expect);\n\n\treturn direct(input, expect);\n}\n"],"names":["exports","formatArgs","save","load","useColors","storage","localstorage","destroy","warned","console","warn","colors","window","process","type","__nwjs","navigator","userAgent","toLowerCase","match","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","args","namespace","module","humanize","diff","c","color","splice","index","lastC","replace","log","debug","namespaces","setItem","removeItem","error","r","getItem","env","DEBUG","localStorage","require","formatters","j","v","JSON","stringify","message","setup","createDebug","default","coerce","disable","enable","enabled","Object","keys","forEach","key","names","skips","selectColor","hash","i","length","charCodeAt","Math","abs","prevTime","enableOverride","namespacesCache","enabledCache","self","curr","Number","Date","ms","prev","unshift","format","formatter","val","call","logFn","apply","extend","defineProperty","enumerable","configurable","get","set","init","delimiter","newDebug","split","len","push","slice","map","toNamespace","join","name","test","regexp","toString","substring","Error","stack","s","m","h","d","w","y","options","parse","isFinite","long","fmtLong","fmtShort","str","String","exec","n","parseFloat","undefined","msAbs","round","plural","isPlural","element","createElement","decodeNamedCharacterReference","value","characterReference","innerHTML","char","textContent","has","prototype","hasOwnProperty","find","iter","tar","dequal","foo","bar","ctor","tmp","constructor","getTime","Array","Set","size","Map","ArrayBuffer","Uint8Array","DataView","byteLength","getInt8","isView","Diff","oldString","newString","arguments","callback","done","setTimeout","castInput","removeEmpty","tokenize","newLen","oldLen","editLength","maxEditLength","min","bestPath","newPos","components","oldPos","extractCommon","count","execEditLength","diagonalPath","basePath","addPath","removePath","_oldPos","canAdd","canRemove","clonePath","pushComponent","buildValues","useLongestToken","ret","added","removed","last","commonCount","equals","left","right","comparator","ignoreCase","array","chars","componentPos","componentLen","component","oldValue","lastComponent","pop","path","characterDiff","diffChars","oldStr","newStr","generateOptions","defaults","extendedWordChars","reWhitespace","wordDiff","ignoreWhitespace","tokens","diffWords","diffWordsWithSpace","lineDiff","retLines","linesAndNewlines","line","newlineIsToken","trim","diffLines","diffTrimmedLines","sentenceDiff","diffSentences","cssDiff","diffCss","_typeof","obj","Symbol","iterator","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","isArray","_arrayLikeToArray","from","o","minLen","arr2","TypeError","objectPrototypeToString","jsonDiff","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","k","canonicalize","diffJson","oldObj","newObj","replacementStack","replacer","canonicalizedObj","toJSON","sortedKeys","_key","sort","arrayDiff","diffArrays","oldArr","newArr","parsePatch","uniDiff","diffstr","delimiters","list","parseIndex","header","parseFileHeader","hunks","_line","parseHunk","strict","fileHeader","keyPrefix","data","fileName","substr","chunkHeaderIndex","chunkHeaderLine","chunkHeader","hunk","oldStart","oldLines","newStart","newLines","lines","linedelimiters","addCount","removeCount","indexOf","operation","distanceIterator","start","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","applyPatch","source","compareLine","lineNumber","patchContent","errorCount","fuzzFactor","offset","removeEOFNL","addEOFNL","hunkFits","toPos","content","diffOffset","_i","_hunk","_toPos","previousOperation","_k","applyPatches","currentIndex","processIndex","complete","loadFile","err","updatedContent","patched","structuredPatch","oldFileName","newFileName","oldHeader","newHeader","context","contextLines","entry","oldRangeStart","newRangeStart","curRange","oldLine","newLine","_loop","current","_curRange","_curRange2","_curRange3","contextSize","oldEOFNewline","newEOFNewline","noNlBeforeAdds","formatPatch","createTwoFilesPatch","createPatch","arrayEqual","a","b","arrayStartsWith","calcLineCount","_calcOldNewLineCount","calcOldNewLineCount","merge","mine","theirs","base","loadPatch","fileNameChanged","selectField","mineIndex","theirsIndex","mineOffset","theirsOffset","mineCurrent","Infinity","theirsCurrent","hunkBefore","cloneHunk","mergedHunk","mergeLines","param","patch","conflict","check","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","mutualChange","_hunk$lines","collectChange","_hunk$lines2","removal","insertTrailing","myChanges","theirChanges","allRemoves","skipRemoveSuperset","_hunk$lines3","_hunk$lines4","_hunk$lines5","swap","collectContext","merged","_hunk$lines6","insert","state","matchChanges","changes","matchIndex","contextChanges","conflicted","change","reduce","removeChanges","delta","changeContent","myCount","theirCount","convertChangesToDMP","convertChangesToXML","escapeHTML","FORCE_COLOR","NODE_DISABLE_COLORS","NO_COLOR","TERM","isTTY","stdout","$","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","grey","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","run","beg","end","open","close","rgx","chain","ctx","bind","blk","txt","ok","assert","preprocess","postprocess","decodeNumericCharacterReference","decodeString","normalizeIdentifier","codes","constants","types","stringifyPosition","own","fromMarkdown","encoding","compiler","write","config","transforms","canContainEols","enter","autolink","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","heading","blockQuote","characterEscape","codeFenced","codeFlow","codeFencedFenceInfo","buffer","codeFencedFenceMeta","codeIndented","codeText","codeTextData","codeFlowValue","definition","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreakEscape","hardBreak","hardBreakTrailing","htmlFlow","html","htmlFlowData","htmlText","htmlTextData","image","label","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","paragraph","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","thematicBreak","exit","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","lineEnding","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","events","tree","children","tokenStack","resume","setData","getData","listStack","tail","prepareList","handler","assign","sliceSerialize","defaultOnError","position","point","column","containerBalance","listSpread","lineIndex","firstBlankLineIndex","atMarker","event","lineEndingBlank","linePrefix","listItemMarker","listItemPrefix","listItemPrefixWhitespace","tailIndex","tailEvent","blockQuotePrefix","blockQuotePrefixWhitespace","blockQuoteMarker","listItemIndent","_spread","create","and","token","node","errorHandler","parent","onExitError","ancestor","numericBaseDecimal","lang","meta","identifier","title","url","depth","equalsTo","text","includes","referenceType","string","fragment","alt","numericBaseHexadecimal","result","ordered","spread","checked","combined","extensions","extension","emptyOptions","settings","includeImageAlt","includeHtml","one","all","values","Boolean","l","J","decodeEntities","dedent","preprocessMarkdown","markdown","withoutMultipleNewlines","withoutExtraSpaces","markdownToLines","preprocessedMarkdown","currentLine","processNode","parentType","textLines","textLine","word","contentNode","treeNode","markdownToHTML","output","splitTextToChars","Intl","Segmenter","segment","splitWordToFitWidth","checkFit","characters","splitWordToFitWidthRecursion","usedChars","remainingChars","nextChar","rest","newWord","shift","splitLineToFitWidth","some","splitLineToFitWidthRecursion","words","joiner","nextWord","lineWithNextWord","applyStyle","dom","styleFn","attr","addHtmlSpan","width","classes","addBackground","fo","append","div","labelClass","isNode","labelStyle","bbox","getBoundingClientRect","height","createTspan","textElement","lineHeight","computeWidthOfText","parentNode","testElement","testSpan","updateTextContentAndStyles","textLength","getComputedTextLength","remove","computeDimensionOfText","_a","textDimension","createFormattedText","g","structuredText","labelGroup","bkg","checkWidth","line2","linesUnderWidth","preparedLine","tspan","getBBox","padding","wrappedLine","innerTspan","createText","el","isTitle","useHtmlLabels","addSvgBackground","info","vertexNode","svgLabel","classifyCharacter","resolveAll","attention","tokenizeAttention","resolveAllAttention","group","openingSequence","closingSequence","use","nextEvents","_close","_open","movePoint","strongSequence","emphasisSequence","strongText","emphasisText","parser","constructs","insideSpan","null","effects","attentionMarkers","previous","before","marker","code","asterisk","underscore","inside","consume","after","characterGroupPunctuation","_bufferIndex","asciiAlpha","asciiAlphanumeric","asciiAtext","asciiControl","tokenizeAutolink","nok","lessThan","autolinkMarker","schemeOrEmailAtext","emailAtext","plusSign","dash","dot","schemeInsideOrEmailAtext","colon","urlInside","autolinkSchemeSizeMax","greaterThan","eof","space","atSign","emailAtSignOrDot","emailLabel","emailValue","autolinkDomainSizeMax","next","factorySpace","markdownLineEnding","markdownSpace","blankLine","tokenizeBlankLine","partial","tokenizeBlockQuoteStart","continuation","tokenizeBlockQuoteContinuation","containerState","_container","contStart","contBefore","tabSize","attempt","asciiPunctuation","tokenizeCharacterEscape","backslash","escapeMarker","asciiDigit","asciiHexDigit","tokenizeCharacterReference","max","ampersand","characterReferenceMarker","numberSign","numeric","characterReferenceNamedSizeMax","uppercaseX","lowercaseX","characterReferenceHexadecimalSizeMax","characterReferenceDecimalSizeMax","semicolon","nonLazyContinuation","tokenizeNonLazyContinuation","tokenizeCodeFenced","concrete","closeStart","tokenizeCloseStart","initialPrefix","sizeOpen","beforeSequenceOpen","graveAccent","tilde","codeFencedFenceSequence","sequenceOpen","codeFencedSequenceSizeMin","infoBefore","whitespace","interrupt","atNonLazyBreak","chunkString","contentType","contentTypeString","metaBefore","contentBefore","contentStart","beforeContentChunk","contentChunk","startBefore","beforeSequenceClose","sequenceClose","sequenceCloseAfter","lineStart","lazy","now","tokenizeCodeIndented","furtherStart","tokenizeFurtherStart","afterPrefix","atBreak","tokenizeCodeText","resolve","resolveCodeText","tailExitIndex","headEnterIndex","codeTextPadding","codeTextSequence","between","subtokenize","tokenizeContent","resolveContent","continuationConstruct","tokenizeContinuation","chunkStart","chunkContent","contentTypeContent","chunkInside","contentEnd","contentContinue","startLookahead","prefixed","flow","factoryDestination","factoryLabel","factoryTitle","factoryWhitespace","markdownLineEndingOrSpace","tokenizeDefinition","titleBefore","tokenizeTitleBefore","leftSquareBracket","labelAfter","definitionLabel","definitionLabelMarker","definitionMarker","markerAfter","destinationBefore","destinationAfter","definitionDestination","definitionDestinationLiteral","definitionDestinationLiteralMarker","definitionDestinationRaw","afterWhitespace","defined","beforeMarker","titleAfter","definitionTitle","definitionTitleMarker","titleAfterOptionalWhitespace","tokenizeHardBreakEscape","headingAtx","tokenizeHeadingAtx","resolveHeadingAtx","atxHeadingText","chunkText","contentTypeText","atxHeadingOpeningFenceSizeMax","sequenceFurther","htmlBlockNames","htmlRawNames","tokenizeHtmlFlow","resolveTo","resolveToHtmlFlow","blankLineBefore","tokenizeBlankLineBefore","nonLazyContinuationStart","tokenizeNonLazyContinuationStart","closingTag","markerB","exclamationMark","declarationOpen","slash","tagCloseStart","questionMark","htmlInstruction","continuationDeclarationInside","fromCharCode","tagName","htmlComment","commentOpenInside","htmlCdata","cdataOpenInside","htmlDeclaration","cdataOpeningString","htmlRaw","htmlBasic","basicSelfClosing","htmlComplete","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","quotationMark","apostrophe","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","rightSquareBracket","continuationCdataInside","continuationAfter","continuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","htmlRawSizeMax","tokenizeHtmlText","returnState","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelEnd","tokenizeLabelEnd","resolveToLabelEnd","resolveAllLabelEnd","resourceConstruct","tokenizeResource","referenceFullConstruct","tokenizeReferenceFull","referenceCollapsedConstruct","tokenizeReferenceCollapsed","labelImage","labelLink","media","_inactive","_balanced","labelStart","labelEndNok","labelMarker","leftParenthesis","labelEndOk","referenceNotFull","resourceStart","resourceMarker","resourceBefore","resourceOpen","rightParenthesis","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceDestination","resourceDestinationLiteral","resourceDestinationLiteralMarker","resourceDestinationRaw","linkResourceDestinationBalanceMax","resourceBetween","resourceTitleAfter","resourceTitle","resourceTitleMarker","referenceFull","referenceFullAfter","referenceFullMissing","referenceMarker","referenceCollapsedStart","referenceCollapsedOpen","labelStartImage","tokenizeLabelStartImage","labelImageMarker","caret","labelStartLink","tokenizeLabelStartLink","tokenizeLineEnding","tokenizeListStart","tokenizeListContinuation","tokenizeListEnd","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","kind","digit1","listItemValueSizeMax","onBlank","endOfPrefix","otherPrefix","initialBlankLine","_closeFlow","notBlank","furtherBlankLines","notInCurrentItem","setextUnderline","tokenizeSetextUnderline","resolveToSetextUnderline","setextHeadingLine","lineSuffix","tokenizeThematicBreak","thematicBreakSequence","sequence","thematicBreakMarkerCountMin","literalType","literalMarkerType","rawType","stringType","limit","POSITIVE_INFINITY","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","markerType","seen","linkReferenceSizeMax","labelInside","labelEscape","prefix","begin","escape","unicodePunctuationRegex","regexCheck","del","horizontalTab","nul","virtualSpace","unicodePunctuation","unicodeWhitespace","regex","items","parameters","v8MaxSafeChunkSize","characterGroupWhitespace","combineExtensions","syntaxExtension","hook","maybe","existing","add","combineHtmlExtensions","htmlExtensions","handlers","htmlExtension","ht","vt","cr","replacementCharacter","characterEscapeOrReference","decode","$0","$2","head","hex","toUpperCase","called","jumps","otherIndex","otherEvent","subevents","more","chunkFlow","_tokenizer","_isInFirstContentOfListItem","subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","stream","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","carriageReturn","lineFeed","carriageReturnLineFeed","soh","stx","etx","eot","enq","ack","bel","bs","lf","ff","so","si","dle","dc1","dc2","dc3","dc4","nak","syn","etb","can","em","sub","esc","fs","gs","rs","us","dollarSign","percentSign","comma","digit0","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","uppercaseA","uppercaseB","uppercaseC","uppercaseD","uppercaseE","uppercaseF","uppercaseG","uppercaseH","uppercaseI","uppercaseJ","uppercaseK","uppercaseL","uppercaseM","uppercaseN","uppercaseO","uppercaseP","uppercaseQ","uppercaseR","uppercaseS","uppercaseT","uppercaseU","uppercaseV","uppercaseW","uppercaseY","uppercaseZ","lowercaseA","lowercaseB","lowercaseC","lowercaseD","lowercaseE","lowercaseF","lowercaseG","lowercaseH","lowercaseI","lowercaseJ","lowercaseK","lowercaseL","lowercaseM","lowercaseN","lowercaseO","lowercaseP","lowercaseQ","lowercaseR","lowercaseS","lowercaseT","lowercaseU","lowercaseV","lowercaseW","lowercaseY","lowercaseZ","leftCurlyBrace","verticalBar","rightCurlyBrace","byteOrderMarker","attentionSideBefore","attentionSideAfter","contentTypeDocument","contentTypeFlow","hardBreakPrefixSizeMin","chunkDocument","resolver","resolveText","contentInitial","flowInitial","createTokenizer","initialize","_index","columnStart","resolveAllConstructs","chunks","consumed","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","expectedCode","main","addResult","expandTabs","serializeChunks","sliceChunks","accountForPotentialSkip","chunkIndex","chunk","go","fields","construct","_","restore","onreturn","bogusState","listOfConstructs","constructIndex","currentConstruct","handleListOfConstructs","handleMapOfConstructs","def","handleConstruct","store","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","startIndex","startBufferIndex","endIndex","endBufferIndex","view","atTab","initializeContent","afterContentStartConstruct","paragraphInitial","initializeDocument","containerConstruct","tokenizeContainer","continued","childFlow","childToken","lineStartOffset","item","documentContinue","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","flowStart","_gfmTableDynamicInterruptHack","thereIsANewContainer","thereIsNoNewContainer","containerContinue","flowContinue","writeToChild","initializeFlow","initial","atBlankEnding","afterConstruct","createResolver","initializeFactory","field","initializeText","resolveAllLineSuffixes","notText","extraResolver","resolveAllText","bufferIndex","tabs","defaultConstructs","creator","search","atCarriageReturn","preprocessor","endPosition","lastIndex","ceil","pos","compare","Assertion","opts","captureStackTrace","details","generated","operator","expects","actual","bool","detailer","backup","msg","is","exp","equal","unreachable","instance","snapshot","lineNums","x","fixture","throws","not","kleur","TITLE","TAB","SPACE","NL","LOG","sym","PRETTY","LINE","num","padStart","pad","out","arrays","input","expect","isObj","linenum","l1","l2","p1","p2","repeat","direct","lenA","lenB","gutter","lenC","typeA","typeB","delA","delB","isArr","circular","cache","print","isA","isB"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63]}