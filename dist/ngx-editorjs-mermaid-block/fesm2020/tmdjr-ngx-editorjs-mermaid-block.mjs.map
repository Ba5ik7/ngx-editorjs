{"version":3,"file":"tmdjr-ngx-editorjs-mermaid-block.mjs","sources":["../../../projects/ngx-editorjs-mermaid-block/src/lib/ngx-editorjs-mermaid-block.service.ts","../../../projects/ngx-editorjs-mermaid-block/src/lib/image-config/mermaid-config.component.ts","../../../projects/ngx-editorjs-mermaid-block/src/lib/ngx-editorjs-mermaid-block.component.ts","../../../projects/ngx-editorjs-mermaid-block/src/lib/ngx-editorjs-mermaid-block.mediator.ts","../../../projects/ngx-editorjs-mermaid-block/src/public-api.ts","../../../projects/ngx-editorjs-mermaid-block/src/tmdjr-ngx-editorjs-mermaid-block.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsMermaidBlockService {\n\n  constructor() { }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\n\n@Component({\n  selector: 'mermaid-config',\n  standalone: true,\n  imports: [\n    CommonModule,\n    CodemirrorModule,\n    FormsModule,\n    MatButtonModule\n  ],\n  template: `\n    <div class=\"container\">\n    <ngx-codemirror\n      (ngModelChange)=\"changeValue($event)\"\n      [ngModel]=\"value\"\n      [options]=\"codeMirrorOptions\">\n    </ngx-codemirror>\n    </div>\n    <div class=\"action-group\">\n      <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"updateMermaid()\">Update</button>\n    </div>\n  `,\n  styles: [`\n    :host {\n      width: 100%;\n      display: flex;\n      flex-direction: column;\n      border-radius: 5px;\n      margin: 16px auto;\n      position: relative;\n      z-index: 1;\n    }\n    :host .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n    :host .answers-action-group {\n      padding-bottom: 20px;\n    }\n    :host ::ng-deep .CodeMirror{\n      height:250px\n    }\n    .container {\n      padding-bottom: 20px;\n    }\n  `]\n})\nexport class MermaidConfigComponent {  \n  codeMirrorOptions ={ \n    lineNumbers: true,\n    theme: 'material-palenight',\n    mode: 'text/typescript',\n    extraKeys: { 'Ctrl-Space': 'autocomplete' },\n  }\n\n  @Input() value: string = '';\n  @Output() mermaidValue = new EventEmitter<string>();\n\n  changeValue(newValue: string) {\n    this.value = newValue;\n  }\n\n  updateMermaid() {\n    this.mermaidValue.emit(this.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgZone, Component, ElementRef, OnInit, Pipe, PipeTransform, ViewChild } from '@angular/core';\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AutofocusDirective, BaseBlockComponent } from '@tmdjr/ngx-editorjs';\nimport { MermaidConfigComponent } from './image-config/mermaid-config.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport mermaid from 'mermaid';\n\nmermaid.parseError = function(err: any, hash: any) {\n  console.warn(`Error parsing mermaid diagram: ${err} ${hash}`);\n};\n\n@Pipe({ name: 'safeHtml', standalone: true })\nexport class SafeHtmlPipe implements PipeTransform  {\n  constructor(private sanitized: DomSanitizer) {}\n  transform(value: string) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-mermaid-block',\n  template: `\n  <ng-container *ngIf=\"_openEditMermaidOverlay; else elseTemplate\">\n    <mermaid-config [value]=\"_value\" (mermaidValue)=\"updateMermaid($event)\"></mermaid-config>\n  </ng-container>\n  <ng-template #elseTemplate>\n    <div class=\"mermaid-container\"> \n      <div\n        #mermaidContainer\n        [ngClass]=\"activeImageClass\"\n        [innerHTML]=\"_mermaidDiagramSVG | safeHtml\"\n        class=\"mermaid\"></div>\n      <button  \n        mat-mini-fab \n        class=\"mermaid-block-button mat-elevation-z2\"\n        (click)=\"openEditUrlOverlay()\">\n          <mat-icon>edit</mat-icon>\n      </button>\n    </div>\n  </ng-template>\n  `,\n  styles: [`\n  :host { display: flex; flex-direction: column; position: relative; padding-bottom: 22px; }\n  .mermaid { width: 100%; display: flex; }\n  .mermaid:hover ~ .mermaid-block-button, .mermaid-block-button:hover {\n      display: block;\n    }\n  .mermaid-block-button {\n      position: absolute;\n      top: 6px;\n      left: 6px;\n      z-index: 1;\n      display: none;\n      width: 32px;\n      height: 32px; \n    }\n    .mermaid-container {\n      display: flex;\n    }\n    :host .flex-start { justify-content: flex-start; }\n    :host .flex-end { justify-content: flex-end; }\n    :host .center { justify-content: center; }\n    :host .stretch img { width: 100%; }\n    ::ng-deep .mermaid-block-button .mat-button-wrapper .mat-icon {\n      font-size: 1.6rem;\n      vertical-align: baseline;\n    }\n  `],\n  imports: [\n    CommonModule,\n    AutofocusDirective,\n    MatButtonModule,\n    MatIconModule,\n    MermaidConfigComponent,\n    SafeHtmlPipe\n  ]\n})\nexport class NgxEditorjsMermaidBlockComponent extends BaseBlockComponent implements OnInit {\n  override useInlineToolbar = false;\n  override useInputType = false;\n  override useOnPasteHTMLRemoval = false;\n\n  @ViewChild('paragraph') element!: ElementRef;\n  @ViewChild('mermaidContainer') mermaidContainer!: ElementRef;\n\n  _mermaidAPI = mermaid.mermaidAPI;\n  _openEditMermaidOverlay: boolean = false;\n  _value = '';\n  _mermaidDiagramSVG = '';\n  activeImageClass: string = 'flex-start';\n\n  override blockOptionActions: { action: string, icon: string }[] = [\n    { action: 'flex-start', icon: 'format_align_left' },\n    { action: 'center', icon: 'format_align_center' },\n    { action: 'flex-end', icon: 'format_align_right' }\n  ];\n\n  renderMermaidDiagram(mermaidDiagram: string): void {\n    const uniqueId = `mermaid-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n    this.ngZone.runOutsideAngular(() => {\n      this._mermaidAPI.render(uniqueId, mermaidDiagram).then(\n        data => this.ngZone.run(() => this._mermaidDiagramSVG = data.svg),\n        error => console.warn(`Error: ${error}`)\n      );\n    });\n  }\n\n  override ngOnInit() {\n    this.ngZone.runOutsideAngular(() => {\n      this._mermaidAPI.initialize({ startOnLoad: false });\n    });\n    if(this.value) {\n      this.renderMermaidDiagram(this.value);\n      this._value = this.value;\n    } else {\n      this.openEditUrlOverlay();\n    }\n    super.ngOnInit();\n  }\n\n  override changeValue(value: string) {\n    super.changeValue(value);\n  }\n\n  override handleBlockOptionAction(action: string) {\n    this.activeImageClass = action ?? 'flex-start';\n    super.handleBlockOptionAction(action);\n  }\n\n  openEditUrlOverlay() {\n    this._openEditMermaidOverlay = true;\n  }\n\n  updateMermaid(value: string) {\n    this._value = value;\n    this.renderMermaidDiagram(value);\n    this.changeValue(value);\n    this._openEditMermaidOverlay = false;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsMermaidBlockComponent } from './ngx-editorjs-mermaid-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-mermaid-blockquotes-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-mermaid-block [blockId]=\"blockId\" [formControlName]=\"formControlName\" [savedAction]=\"savedAction\"></ngx-editorjs-mermaid-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsMermaidBlockComponent\n  ],\n})\nexport class NgxEditorjsMermaidBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n  @Input() savedAction!: string;\n}\n","/*\n * Public API Surface of ngx-editorjs-mermaid-block\n */\n\nexport * from './lib/ngx-editorjs-mermaid-block.service';\nexport * from './lib/ngx-editorjs-mermaid-block.component';\nexport * from './lib/ngx-editorjs-mermaid-block.mediator';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","MatButtonModule","i1"],"mappings":"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"}