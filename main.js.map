{"version":3,"file":"main.js","mappings":"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","sources":["./projects/ngx-editor-demo/src/app/app-routing.module.ts","./projects/ngx-editor-demo/src/app/app.component.ts","./projects/ngx-editor-demo/src/app/app.component.html","./projects/ngx-editor-demo/src/app/app.module.ts","./projects/ngx-editor-demo/src/app/components/navbar/navbar.component.ts","./projects/ngx-editor-demo/src/app/components/navbar/navbar.component.html","./projects/ngx-editor-demo/src/app/components/navbar/navbar.module.ts","./projects/ngx-editor-demo/src/app/components/theme-picker/theme-picker.component.ts","./projects/ngx-editor-demo/src/app/components/theme-picker/theme-picker.component.html","./projects/ngx-editor-demo/src/app/components/theme-picker/theme-picker.module.ts","./projects/ngx-editor-demo/src/app/components/theme-picker/theme-picker.service.ts","./projects/ngx-editor-demo/src/app/services/webstorage/webstorage.service.ts","./projects/ngx-editor-demo/src/environments/environment.ts","./projects/ngx-editor-demo/src/main.ts","./projects/ngx-editorjs-blockquotes-block/src/lib/ngx-editorjs-blockquotes-block.service.ts","./projects/ngx-editorjs-blockquotes-block/src/lib/ngx-editorjs-blockquotes-client-block.component.ts","./projects/ngx-editorjs-blockquotes-block/src/lib/ngx-editorjs-blockquotes-block.component.ts","./projects/ngx-editorjs-blockquotes-block/src/lib/ngx-editorjs-blockquotes-block.mediator.ts","./projects/ngx-editorjs-blockquotes-block/src/lib/ngx-editorjs-blockquotes-block.module.ts","./projects/ngx-editorjs-blockquotes-block/src/public-api.ts","./projects/ngx-editorjs-blockquotes-block/src/tmdjr-ngx-editorjs-blockquotes-block.ts","./projects/ngx-editorjs-client/src/lib/ngx-editorjs-client.service.ts","./projects/ngx-editorjs-client/src/lib/components/ngx-editorjs-header-client-block/ngx-editorjs-header-client-block.component.ts","./projects/ngx-editorjs-client/src/lib/ngx-editorjs-client.component.ts","./projects/ngx-editorjs-client/src/lib/ngx-editorjs-client.module.ts","./projects/ngx-editorjs-client/src/public-api.ts","./projects/ngx-editorjs-client/src/tmdjr-ngx-editorjs-client.ts","./projects/ngx-editorjs-code-block/src/lib/ngx-editorjs-code-block.service.ts","./projects/ngx-editorjs-code-block/src/lib/ngx-editorjs-code-client-block.component.ts","./projects/ngx-editorjs-code-block/src/lib/ngx-editorjs-code-block.component.ts","./projects/ngx-editorjs-code-block/src/lib/ngx-editorjs-code-block.mediator.ts","./projects/ngx-editorjs-code-block/src/lib/ngx-editorjs-code-block.module.ts","./projects/ngx-editorjs-code-block/src/public-api.ts","./projects/ngx-editorjs-code-block/src/tmdjr-ngx-editorjs-code-block.ts","./projects/ngx-editorjs-image-block/src/lib/ngx-editorjs-image-block.service.ts","./projects/ngx-editorjs-image-block/src/lib/ngx-editorjs-image-client-block.component.ts","./projects/ngx-editorjs-image-block/src/lib/image-config/image-config.component.ts","./projects/ngx-editorjs-image-block/src/lib/ngx-editorjs-image-block.component.ts","./projects/ngx-editorjs-image-block/src/lib/ngx-editorjs-image-block.mediator.ts","./projects/ngx-editorjs-image-block/src/lib/ngx-editorjs-image-block.module.ts","./projects/ngx-editorjs-image-block/src/public-api.ts","./projects/ngx-editorjs-image-block/src/tmdjr-ngx-editorjs-image-block.ts","./projects/ngx-editorjs-paragraph-block/src/lib/ngx-editorjs-paragraph-block.service.ts","./projects/ngx-editorjs-paragraph-block/src/lib/ngx-editorjs-paragraph-block.component.ts","./projects/ngx-editorjs-paragraph-block/src/lib/ngx-editorjs-paragraph-client-block.component.ts","./projects/ngx-editorjs-paragraph-block/src/lib/ngx-editorjs-paragraph-block.mediator.ts","./projects/ngx-editorjs-paragraph-block/src/lib/ngx-editorjs-paragraph-block.module.ts","./projects/ngx-editorjs-paragraph-block/src/public-api.ts","./projects/ngx-editorjs-paragraph-block/src/tmdjr-ngx-editorjs-paragraph-block.ts","./projects/ngx-editorjs/src/lib/ngx-editorjs.service.ts","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/searchable-block-list/searchable-block-list.component.html","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/searchable-block-list/searchable-block-list.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/block-options-list/block-options-list.component.html","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/block-options-list/block-options-list.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/toolbar-block.component.html","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/toolbar-block.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/inline-toolbar-block/inline-toolbar-block.component.html","./projects/ngx-editorjs/src/lib/components/blocks/inline-toolbar-block/inline-toolbar-block.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/base-block/base-block.component.ts","./projects/ngx-editorjs/src/lib/directives/autofocus/autofocus.directive.ts","./projects/ngx-editorjs/src/lib/components/blocks/ngx-editorjs-header-block/ngx-editorjs-header-block.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/ngx-editorjs-header-block/ngx-editorjs-header-block.mediator.ts","./projects/ngx-editorjs/src/lib/ngx-editorjs.component.ts","./projects/ngx-editorjs/src/lib/components/blocks/ngx-editorjs-header-block/ngx-editorjs-header-block.module.ts","./projects/ngx-editorjs/src/lib/directives/autofocus/autofocus.module.ts","./projects/ngx-editorjs/src/lib/components/blocks/toolbar-block/toolbar-block.module.ts","./projects/ngx-editorjs/src/lib/components/blocks/inline-toolbar-block/inline-toolbar-block.mediator.ts","./projects/ngx-editorjs/src/lib/components/blocks/inline-toolbar-block/inline-toolbar-block.module.ts","./projects/ngx-editorjs/src/lib/ngx-editorjs.module.ts","./projects/ngx-editorjs/src/public-api.ts","./projects/ngx-editorjs/src/tmdjr-ngx-editorjs.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { \n    path: '',\n    pathMatch: 'full',\n    loadChildren: () => import('./pages/home/home.module').then(m => m.HomeModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'demo-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'demo';\n}\n","<navbar class=\"mat-elevation-z6\"></navbar>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { NavbarModule } from './components/navbar/navbar.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NGX_EDITORJS_OPTIONS } from '@tmdjr/ngx-editorjs';\nimport { NGX_EDITORJS_CLIENT_OPTIONS } from '@tmdjr/ngx-editorjs-client';\n\nimport { NgxEditorjsParagraphBlockMediator, NgxEditorjsParagraphClientBlockComponent } from '@tmdjr/ngx-editorjs-paragraph-block';\nimport { NgxEditorjsBlockquotesBlockMediator, NgxEditorjsBlockquotesClientBlockComponent } from '@tmdjr/ngx-editorjs-blockquotes-block';\nimport { NgxEditorjsImageBlockMediator, NgxEditorjsImageClientBlockComponent } from '@tmdjr/ngx-editorjs-image-block';\nimport { NgxEditorjsCodeBlockMediator, NgxEditorjsCodeClientBlockComponent } from '@tmdjr/ngx-editorjs-code-block';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatIconModule,\n    NavbarModule\n  ],\n  providers: [\n    {\n      provide: NGX_EDITORJS_OPTIONS,\n      useValue: {\n        blocks: [\n          {\n            name: 'Paragraph',\n            component: NgxEditorjsParagraphBlockMediator,\n            componentInstanceName: 'NgxEditorjsParagraphBlockMediator'\n          },\n          {\n            name: 'Blockquotes',\n            component: NgxEditorjsBlockquotesBlockMediator,\n            componentInstanceName: 'NgxEditorjsBlockquotesBlockMediator'\n          },\n          {\n            name: 'Image',\n            component: NgxEditorjsImageBlockMediator,\n            componentInstanceName: 'NgxEditorjsImageBlockMediator'\n          },\n          {\n            name: 'Code',\n            component: NgxEditorjsCodeBlockMediator,\n            componentInstanceName: 'NgxEditorjsCodeBlockMediator'\n          }\n        ]\n      }\n    },\n    {\n      provide: NGX_EDITORJS_CLIENT_OPTIONS,\n      useValue: {\n        blocks: [\n          {\n            name: 'Paragraph',\n            component: NgxEditorjsParagraphClientBlockComponent,\n            componentInstanceName: 'NgxEditorjsParagraphBlockMediator'\n          },\n          {\n            name: 'Blockquotes',\n            component: NgxEditorjsBlockquotesClientBlockComponent,\n            componentInstanceName: 'NgxEditorjsBlockquotesBlockMediator'\n          },\n          {\n            name: 'Image',\n            component: NgxEditorjsImageClientBlockComponent,\n            componentInstanceName: 'NgxEditorjsImageBlockMediator'\n          },\n          {\n            name: 'Code',\n            component: NgxEditorjsCodeClientBlockComponent,\n            componentInstanceName: 'NgxEditorjsCodeBlockMediator'\n          }\n        ]\n      }\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NavbarComponent {\n\n  constructor() { }\n\n}\n","<nav class=\"navbar-header\">\n  <a mat-button routerLink=\"/\">\n    <mat-icon class=\"workshop-logo\">format_size</mat-icon>\n    <span>Ngx EditorJs</span>\n  </a>\n  <div class=\"flex-spacer\"></div>\n  <theme-picker></theme-picker>\n</nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar.component';\nimport { ThemePickerModule } from '../theme-picker/theme-picker.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ThemePickerModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  declarations: [NavbarComponent],\n  exports: [NavbarComponent]\n})\nexport class NavbarModule { }\n","import { Component, OnInit, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ThemePickerService } from './theme-picker.service';\n\n@Component({\n  selector: 'theme-picker',\n  templateUrl: './theme-picker.component.html',\n  styleUrls: ['./theme-picker.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ThemePickerComponent implements OnInit {\n\n  currentTheme: string | undefined;\n  themes: Map<string, string> = new Map([\n    ['deeppurple-amber', 'Deep Purple & Amber'],\n    ['indigo-pink', 'Indigo & Pink'],\n    ['pink-bluegrey', 'Pink & Blue-grey'],\n    ['purple-green', 'Purple & Green']\n  ]);\n\n  constructor(\n      private themePickerService: ThemePickerService,\n      iconRegistry: MatIconRegistry,\n      sanitizer: DomSanitizer\n  ) {\n    const themeExampleIconURL = sanitizer.bypassSecurityTrustResourceUrl(ThemePickerService.THEME_EXAMPLE_ICON);\n    iconRegistry.addSvgIcon('theme-example', themeExampleIconURL);\n\n    const themeName = themePickerService.getStoredThemeName();\n    this.selectTheme(themeName.value !== ThemePickerService.NOT_FOUND ? themeName.value : ThemePickerService.DEFAULT_THEME);\n  }\n\n  ngOnInit(): void { }\n\n  selectTheme(theme: string): void {\n    this.themePickerService.setStyle('theme', `${theme}.css`);\n    this.themePickerService.storeTheme(theme);\n    this.currentTheme = theme;\n  }\n\n}\n","<button mat-icon-button\n        [mat-menu-trigger-for]=\"themeMenu\"\n        matTooltip=\"Select a theme for the documentation\">\n  <mat-icon>format_color_fill</mat-icon>\n</button>\n\n<mat-menu #themeMenu=\"matMenu\" xPosition=\"before\" class=\"theme-picker-menu\">\n  <button mat-menu-item *ngFor=\"let theme of themes | keyvalue\" (click)=\"selectTheme(theme.key)\">\n    <mat-icon \n      [ngClass]=\"{'docs-theme-selected-icon': currentTheme === theme.key}\"\n      [color]=\"currentTheme === theme.key ? 'accent' : undefined\">\n      {{currentTheme === theme.key ? 'radio_button_checked' : 'radio_button_unchecked'}}\n    </mat-icon>\n    <span>{{theme.value}}</span>\n    <mat-icon [class]=\"'theme-example-icon ' + theme.key\" svgIcon=\"theme-example\"></mat-icon>\n  </button>\n</mat-menu>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\nimport { ThemePickerComponent } from './theme-picker.component';\nimport { ThemePickerService } from './theme-picker.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTooltipModule\n  ],\n  declarations: [ThemePickerComponent],\n  exports: [ThemePickerComponent],\n  providers: [ThemePickerService]\n})\nexport class ThemePickerModule { }\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { LocalStorage, WebstorageService } from '../../services/webstorage/webstorage.service';\n\n@Injectable()\nexport class ThemePickerService {\n  static THEME_EXAMPLE_ICON = 'assets/img/theme-demo-icon.svg';\n  static DEFAULT_THEME = 'indigo-pink';\n  static STRORAGE_KEY: string = 'theme-picker-current-name';\n  static NOT_FOUND: string = 'NOT_FOUND';\n\n  constructor(@Inject(DOCUMENT) private document: Document, private webstorageService: WebstorageService ) { }\n\n  storeTheme(theme: string): void {\n    this.webstorageService.setLocalstorageItem({ key: ThemePickerService.STRORAGE_KEY, value: theme });\n  }\n  \n  getStoredThemeName(): LocalStorage {\n    return this.webstorageService.getLocalstorageItem(ThemePickerService.STRORAGE_KEY);\n  }\n\n  setStyle(key: string, href: string): void {\n    this.getLinkElementForKey(key).setAttribute('href', href);\n  }\n\n  removeStyle(key: string): void {\n    const existingLinkElement = this.getExistingLinkElementByKey(key);\n    if (existingLinkElement) {\n      this.document.head.removeChild(existingLinkElement);\n    }\n  }\n\n  private getLinkElementForKey(key: string): HTMLLinkElement {\n    return this.getExistingLinkElementByKey(key) ?? this.createLinkElementWithKey(key);\n  }\n  \n  private getExistingLinkElementByKey(key: string): HTMLLinkElement | null {\n    return this.document.head.querySelector(`link[rel=\"stylesheet\"].style-manager-${key}`);\n  }\n  \n  private createLinkElementWithKey(key: string): HTMLLinkElement {\n    const linkEl = this.document.createElement('link');\n    linkEl.setAttribute('rel', 'stylesheet');\n    linkEl.classList.add(`style-manager-${key}`);\n    this.document.head.appendChild(linkEl);\n    return linkEl;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { empty, Observable, Subject } from 'rxjs';\n\n\nexport interface LocalStorage {\n  key: string,\n  value: any\n}\n\nexport interface SessionStorage {\n  key: string,\n  value: any\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebstorageService {\n\n  LOCAL_STORAGE_ITEM_NOT_FOUND_ERROR = 'LOCAL_STORAGE_ITEM_NOT_FOUND_ERROR';\n  LOCAL_STORAGE_MAX_SIZE_REACHED = 'LOCAL_STORAGE_MAX_SIZE_REACHED';\n\n  localStorageValueChangeSub: Subject<LocalStorage> = new Subject();\n  localStorageValueChange$: Observable<LocalStorage> = this.localStorageValueChangeSub.asObservable();\n\n  getLocalStorageSize(): number {\n    return new Blob(Object.values(localStorage)).size;\n  }\n\n  getLocalstorageItem(key: string): LocalStorage {\n    const item = { key, value: localStorage.getItem(key) ?? this.LOCAL_STORAGE_ITEM_NOT_FOUND_ERROR };\n    this.localStorageValueChangeSub.next(item);\n    return item;\n  }\n  \n  setLocalstorageItem({ key, value }: LocalStorage): void {\n    localStorage.setItem(key, value);\n    this.localStorageValueChangeSub.next({ key, value });\n  }\n  \n  removeLocalstorageItem(key: string): void {\n    const item = { key, value: localStorage.getItem(key) ?? this.LOCAL_STORAGE_ITEM_NOT_FOUND_ERROR };\n    item.value !== this.LOCAL_STORAGE_ITEM_NOT_FOUND_ERROR && localStorage.removeItem(key); \n    this.localStorageValueChangeSub.next(item);\n  }\n\n  clearLocalstorage(): void {\n    localStorage.clear();\n  }\n\n  SESSION_STORAGE_ITEM_NOT_FOUND_ERROR = 'SESSION_STORAGE_ITEM_NOT_FOUND_ERROR';\n  SESSIONSTORAGE_MAX_SIZE_REACHED = 'SESSIONSTORAGE_MAX_SIZE_REACHED';\n\n  sessionStorageValueChangeSub: Subject<SessionStorage> = new Subject();\n  sessionStorageValueChange$: Observable<SessionStorage> = this.sessionStorageValueChangeSub.asObservable();\n\n  getSessionStorageSize(): number {\n    return new Blob(Object.values(sessionStorage)).size;\n  }\n\n  getSessionStorageItem(key: string): SessionStorage {\n    const item = { key, value: sessionStorage.getItem(key) ?? this.SESSION_STORAGE_ITEM_NOT_FOUND_ERROR };\n    this.sessionStorageValueChangeSub.next(item);\n    return item;\n  }\n  \n  setSessionStorageItem({ key, value }: SessionStorage): void {\n    sessionStorage.setItem(key, value);\n    this.sessionStorageValueChangeSub.next({ key, value });\n  }\n  \n  removeSessionStorageItem(key: string): void {\n    const item = { key, value: sessionStorage.getItem(key) ?? this.SESSION_STORAGE_ITEM_NOT_FOUND_ERROR };\n    item.value !== this.SESSION_STORAGE_ITEM_NOT_FOUND_ERROR && sessionStorage.removeItem(key); \n    this.sessionStorageValueChangeSub.next(item);\n  }\n\n  clearSessionStorage(): void {\n    sessionStorage.clear();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/xml/xml';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorBlockquotesBlockService {\n\n  constructor() { }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-blockquotes-client-block',\n  template: `\n    <blockquote class=\"flex-spacer\" [innerHTML]=\"value\"></blockquote>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; }\n    blockquote {\n      margin: 20px 0;\n      padding-left: 1.5rem;\n    }\n  `],\n  imports: []\n})\nexport class NgxEditorjsBlockquotesClientBlockComponent {\n  @Input() value = '';\n}\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { BaseBlockComponent, AutofocusDirective } from '@tmdjr/ngx-editorjs';\n\n@Component({\n  standalone: true,\n  imports: [\n    AutofocusDirective\n  ],\n  selector: 'ngx-editorjs-blockquotes-block',\n  template: `\n    <blockquote class=\"flex-spacer\" #blockquotes contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></blockquote>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; }\n    blockquote {\n      margin: 20px 0;\n      padding-left: 1.5rem;\n    }\n  `]\n})\nexport class NgxEditorjsBlockquotesBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('blockquotes') element!: ElementRef;\n\n  override ngOnInit() {\n    super.ngOnInit();\n  }\n\n  ngAfterViewInit(): void {\n    super.viewChild = this.element;\n  }\n\n  override onMouseEnter(event: Event) {\n    super.onMouseEnter(event);\n  }\n}\n","import { Component, Input, ViewRef } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsBlockquotesBlockComponent } from './ngx-editorjs-blockquotes-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-meditator-blockquotes-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-blockquotes-block [blockId]=\"blockId\" [formControlName]=\"formControlName\"></ngx-editorjs-blockquotes-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsBlockquotesBlockComponent\n  ],\n})\nexport class NgxEditorjsBlockquotesBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n}\n","import { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ]\n})\nexport class NgxEditorBlockquotesBlockModule { }\n","/*\n * Public API Surface of ngx-editorjs-blockquotes-block\n */\n\nexport * from './lib/ngx-editorjs-blockquotes-block.service';\nexport * from './lib/ngx-editorjs-blockquotes-client-block.component';\nexport * from './lib/ngx-editorjs-blockquotes-block.component';\nexport * from './lib/ngx-editorjs-blockquotes-block.mediator';\nexport * from './lib/ngx-editorjs-blockquotes-block.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Inject, InjectionToken, Optional } from '@angular/core';\nimport { Type } from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n\nexport const NGX_EDITORJS_CLIENT_OPTIONS = new InjectionToken<NgxEditorjsOptions>('NGX_EDITORJS_CLIENT_OPTIONS');\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsClientService {\n\n  constructor(@Optional() @Inject(NGX_EDITORJS_CLIENT_OPTIONS) options: NgxEditorjsOptions) {\n    this.blocks = options?.blocks || [];\n  }\n\n  blocks: SearchableBlock[];\n}\n\nexport interface NgxEditorjsOptions {\n  blocks?: SearchableBlock[];\n}\n\nexport interface SearchableBlock {\n  name: string;\n  component: Type<unknown> | null;\n  componentInstanceName?: string;\n  type?: string;\n}\n\nexport interface NgxEditorjsOutputBlock {\n  blockId: string;\n  sortIndex: number;\n  componentInstanceName: string;\n  dataClean: string;\n  savedAction?: string;\n}\n\nexport interface CreateBlockAction {\n  blockId: string | null;\n  componentInstanceName: string;\n  component: Type<unknown> | null;\n  value?: string;\n  componentSortIndex?: number;\n  savedAction?: string;\n}\n\nexport declare interface BaseClientBlock {\n  value: string;\n  savedAction: string;\n}\n\nexport interface SearchableBlock {\n  name: string;\n  component: Type<unknown> | null;\n  componentInstanceName?: string;\n  type?: string;\n}","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'lib-ngx-editorjs-header-client-block',\n  template: `\n    <ng-container [ngSwitch]=\"whichHeader\">\n        <h2 *ngSwitchCase=\"'h2'\" class=\"flex-spacer\" [innerHTML]=\"value\"></h2>\n        <h3 *ngSwitchCase=\"'h3'\" class=\"flex-spacer\" [innerHTML]=\"value\"></h3>\n        <h4 *ngSwitchCase=\"'h4'\" class=\"flex-spacer\" [innerHTML]=\"value\"></h4>\n        <h5 *ngSwitchCase=\"'h5'\" class=\"flex-spacer\" [innerHTML]=\"value\"></h5>\n        <h6 *ngSwitchCase=\"'h6'\" class=\"flex-spacer\" [innerHTML]=\"value\"></h6>\n        <h1 *ngSwitchDefault class=\"flex-spacer\" [innerHTML]=\"value\"></h1>\n    </ng-container>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule\n  ],\n})\nexport class NgxEditorjsHeaderClientBlockComponent {\n\n  @Input() value = '';\n\n  whichHeader!: string\n  @Input() \n  set savedAction(action: string) {\n    this.whichHeader = action;\n  }\n}\n","import { Component, Input, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { NgxEditorjsHeaderClientBlockComponent } from './components/ngx-editorjs-header-client-block/ngx-editorjs-header-client-block.component';\nimport { BaseClientBlock, CreateBlockAction, NgxEditorjsClientService, NgxEditorjsOutputBlock, SearchableBlock } from './ngx-editorjs-client.service';\n\n\nexport const HeaderSearchableBlock: SearchableBlock = {\n  name: 'Header',\n  component: NgxEditorjsHeaderClientBlockComponent,\n  componentInstanceName: 'NgxEditorjsHeaderBlockMediator',\n};\n\n@Component({\n  selector: 'ngx-editorjs-client',\n  template: `<ng-container #ngxEditorClient></ng-container>`,\n  styles: [\n  ]\n})\nexport class NgxEditorjsClientComponent implements OnInit {\n\n  constructor(private ngxEditorjsClientService: NgxEditorjsClientService) { }\n\n  @ViewChild('ngxEditorClient', { read: ViewContainerRef, static: true }) ngxEditorClient!: ViewContainerRef;\n\n  @Input() \n  set inputData(blocks: NgxEditorjsOutputBlock[]) {\n    requestAnimationFrame(() => this.clearSortCreateNgxEditorjsBlocks(blocks));\n  }\n\n  ngOnInit(): void {\n    this.ngxEditorjsClientService.blocks.unshift(HeaderSearchableBlock);\n  }\n\n  clearSortCreateNgxEditorjsBlocks(blocks: NgxEditorjsOutputBlock[]): void {\n    this.ngxEditorClient.clear();\n    if(blocks) {\n      blocks.sort((a, b) => a.sortIndex - b.sortIndex);\n      blocks.forEach((block) => {\n        const componentInstanceObject = \n          this.ngxEditorjsClientService.blocks.find((b) => b.componentInstanceName === block.componentInstanceName)\n            ?? this.ngxEditorjsClientService.blocks[0];\n  \n        const createBlockAction: CreateBlockAction = { \n          blockId: block.blockId,\n          component: componentInstanceObject.component,\n          componentInstanceName: block.componentInstanceName,\n          value: block.dataClean,\n          componentSortIndex: block.sortIndex,\n          savedAction: block.savedAction\n        };\n        this.loadNgxEditorjsBlock(createBlockAction);\n      });\n    }\n  }\n\n  loadNgxEditorjsBlock({ component, value, savedAction }: CreateBlockAction): void {\n    const componentRef = this.ngxEditorClient.createComponent(component!, { index: this.ngxEditorClient.length });\n    const blockMediator = componentRef.instance as BaseClientBlock;\n    blockMediator.value = value!;\n    blockMediator.savedAction = savedAction!;\n  };\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxEditorjsClientComponent } from './ngx-editorjs-client.component';\nimport { NgxEditorjsHeaderClientBlockComponent } from './components/ngx-editorjs-header-client-block/ngx-editorjs-header-client-block.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    NgxEditorjsClientComponent\n  ],\n  imports: [\n    NgxEditorjsHeaderClientBlockComponent\n  ],\n  exports: [\n    NgxEditorjsClientComponent\n  ]\n})\nexport class NgxEditorjsClientModule { }\n","/*\n * Public API Surface of ngx-editorjs-client\n */\n\nexport * from './lib/ngx-editorjs-client.service';\nexport * from './lib/ngx-editorjs-client.component';\nexport * from './lib/ngx-editorjs-client.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsCodeBlockService {\n\n  constructor() { }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\n@Component({\n  standalone: true,\n  imports: [\n    CodemirrorModule,\n    FormsModule\n  ],\n  selector: 'ngx-editorjs-code-client-block',\n  template: `\n    <ngx-codemirror\n      [ngModel]=\"value\"\n      [options]=\"codeMirrorOptions\">\n    </ngx-codemirror>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex-direction: column;\n      border-radius: 5px;\n      margin: 16px auto;\n      position: relative;\n      z-index: 1;\n    }\n  `]\n})\nexport class NgxEditorjsCodeClientBlockComponent {\n  \n  @Input() value = '';\n\n  codeMirrorOptions = { \n    lineNumbers: true,\n    theme: 'material-palenight',\n    mode: 'text/typescript',\n    readOnly: true\n  }\n\n  @Input() \n  set savedAction(action: string) {\n    this.codeMirrorOptions.mode = action;\n  }\n}\n","import { Component } from '@angular/core';\nimport { BaseBlockComponent, AutofocusDirective } from '@tmdjr/ngx-editorjs';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  standalone: true,\n  imports: [\n    CodemirrorModule,\n    FormsModule\n  ],\n  selector: 'ngx-editorjs-code-block',\n  template: `\n  <!-- <pre class=\"prettyprint\">\n    <code #code contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></code>\n  </pre> -->\n    <ngx-codemirror\n      (ngModelChange)=\"changeValue($event)\"\n      [ngModel]=\"value\"\n      [options]=\"codeMirrorOptions\">\n    </ngx-codemirror>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex-direction: column;\n      border-radius: 5px;\n      margin: 16px auto;\n      position: relative;\n      z-index: 1;\n    }\n  `]\n})\nexport class NgxEditorjsCodeBlockComponent extends BaseBlockComponent {\n\n  override useInlineToolbar = false;\n  override useInputType = false;\n  override useOnPasteHTMLRemoval = false;\n\n  override blockOptionActions: { action: string, icon: string }[] = [\n    { action: 'text/typescript', icon: 'javascript' },\n    { action: 'css', icon: 'css' },\n    { action: 'xml', icon: 'html' }\n  ];\n\n  codeMirrorOptions ={ \n    lineNumbers: true,\n    theme: 'material-palenight',\n    mode: 'text/typescript',\n  }\n\n  override ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    // setTimeout(() => {\n    //   this.codeMirrorOptions.theme = 'material';\n    // }, 5000);\n    super.ngOnInit();\n  }\n\n  override handleBlockOptionAction(action: any) {\n    this.codeMirrorOptions.mode = action;\n    super.handleBlockOptionAction(action);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsCodeBlockComponent } from './ngx-editorjs-code-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-meditator-code-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-code-block [blockId]=\"blockId\" [formControlName]=\"formControlName\" [savedAction]=\"savedAction\"></ngx-editorjs-code-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsCodeBlockComponent\n  ],\n})\nexport class NgxEditorjsCodeBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n  @Input() savedAction!: string;\n}\n","import { NgModule } from '@angular/core';\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ]\n})\nexport class NgxEditorjsCodeBlockModule { }\n","/*\n * Public API Surface of ngx-editorjs-code-block\n */\n\nexport * from './lib/ngx-editorjs-code-block.service';\nexport * from './lib/ngx-editorjs-code-client-block.component';\nexport * from './lib/ngx-editorjs-code-block.component';\nexport * from './lib/ngx-editorjs-code-block.mediator';\nexport * from './lib/ngx-editorjs-code-block.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsImageBlockService {\n\n  constructor() { }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-image-client-block',\n  imports: [CommonModule],\n  template: `\n    <div class=\"image-conatiner\" [ngClass]=\"activeImageClass\">\n      <img\n        class=\"image-block\"\n        [src]=\"_value.url\"\n        [title]=\"_value.title\"\n        (click)=\"onImageClick()\"\n        onerror=\"this.onerror=null;this.src='https://dummyimage.com/640x360/000/AAF'\"/>\n    </div>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; position: relative; margin-bottom: 22px; }\n    :host .flex-start { justify-content: flex-start; }\n    :host .flex-end { justify-content: flex-end; }\n    :host .center { justify-content: center; }\n    :host .stretch img { width: 100%; cursor: pointer; }\n    .image-conatiner {\n      display: flex;\n    }\n    .image-block {\n      min-width: 0;\n    }\n  `]\n})\nexport class NgxEditorjsImageClientBlockComponent {\n\n  _value: { url: string, title: string } = { url: '', title: '' };\n  @Input() \n  set value(value: string) {\n    !!value && (this._value = JSON.parse(value));\n  }\n\n  activeImageClass: string = 'flex-start';\n  @Input()\n  set savedAction(action: string) {\n    this.activeImageClass = action ?? 'flex-start';\n  }\n\n  onImageClick() {\n    console.log('Image clicked');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'image-config',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n  ],\n  template: `\n    <div class=\"image-block-modal\" >\n      <form [formGroup]=\"imageConfigForm\">\n        <h2 mat-dialog-title>Image Configurations</h2>\n        <mat-form-field appearance=\"outline\" color=\"accent\">\n          <mat-label>Title</mat-label>\n          <input #title matInput type=\"text\" formControlName=\"title\" />\n          <mat-error *ngIf=\"imageConfigForm.get('title')?.errors\">{{imageConfigFormErrorMessages['title']}}</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" color=\"accent\">\n          <mat-label>URL</mat-label>\n          <input #url matInput type=\"text\" title=\"URL\" formControlName=\"url\" />\n          <mat-error *ngIf=\"imageConfigForm.get('url')?.errors\">{{imageConfigFormErrorMessages['url']}}</mat-error>\n        </mat-form-field>\n        <div class=\"action-group\">\n          <button mat-flat-button color=\"accent\" type=\"button\" (click)=\"updateImage()\" [disabled]=\"imageConfigForm.invalid\">Save</button>\n          <button mat-flat-button color=\"warn\" type=\"button\" (click)=\"closeConfig()\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  `,\n  styles: [`\n  :host {\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    padding: 20px;\n   }\n\n   :host form {\n      display: flex;\n      flex-direction: column;\n    }\n\n    :host form .action-group {\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n  `]\n})\nexport class ImageConfigComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder) { }\n  \n  destory: Subject<boolean> = new Subject();\n  \n  imageObject: any;\n\n  errorMessages: { [key: string]: string } = {\n    required: 'Required',\n  };\n\n  imageConfigFormErrorMessages: { [key: string]: string } = {\n    url: '', title: ''\n  }\n\n  imageConfigForm!: FormGroup;\n\n  @Input() value!: { url: string, title: string };\n\n  @Output() imageValue = new EventEmitter<{ url: string, title: string }>();\n\n\n  ngOnInit(): void {\n    this.imageConfigForm = this.formBuilder.group({\n      url: [this.value.url ?? '', [Validators.required]],\n      title: [this.value.title ?? '', [Validators.required]]\n    });\n\n    this.imageConfigForm.statusChanges\n    .pipe(takeUntil(this.destory))\n    .subscribe(() => this.setErrorsMessages(this.imageConfigForm, this.imageConfigFormErrorMessages));\n  }\n\n  ngOnDestroy(): void {\n    this.destory.next(true);\n  }\n\n  updateImage() {\n    this.imageValue.emit(this.imageConfigForm.value);\n  }\n\n  closeConfig() {\n    this.imageValue.emit(this.value);\n  }\n\n  setErrorsMessages(formGroup: FormGroup, formControlMessages: { [key: string]: string }): void {\n    Object.keys(formGroup.controls).forEach(element => {\n      const errors = formGroup.get(element)?.errors;\n      if(errors) {         \n        const error = Object.keys(errors)[0];\n        formControlMessages[element] = this.errorMessages[error];\n      }\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AutofocusDirective, BaseBlockComponent } from '@tmdjr/ngx-editorjs';\nimport { ImageConfigComponent } from './image-config/image-config.component';\n\n@Component({\n  selector: 'ngx-editorjs-image-block',\n  standalone: true,\n  imports: [\n    CommonModule,\n    AutofocusDirective,\n    MatButtonModule,\n    MatIconModule,\n    ImageConfigComponent,\n  ],\n  template: `\n    <div *ngIf=\"!_openEditUrlOverlay\" class=\"image-conatiner\" [ngClass]=\"activeImageClass\">\n      <img\n        #image\n        class=\"image-block\"\n        [src]=\"_value.url\"\n        [title]=\"_value.title\"\n        onerror=\"this.onerror=null;this.src='https://dummyimage.com/640x360/000/AAF'\"/>\n      <button  \n        mat-mini-fab \n        class=\"image-block-button mat-elevation-z2\"\n        (click)=\"openEditUrlOverlay()\">\n          <mat-icon>edit</mat-icon>\n      </button>\n    </div>\n    <image-config *ngIf=\"_openEditUrlOverlay\" [value]=\"_value\" (imageValue)=\"updateImage($event)\"></image-config>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; position: relative; margin-bottom: 22px; }\n    :host .flex-start { justify-content: flex-start; }\n    :host .flex-end { justify-content: flex-end; }\n    :host .center { justify-content: center; }\n    :host .stretch img { width: 100%; }\n\n    .image-block:hover ~ .image-block-button, .image-block-button:hover {\n      display: block;\n    }\n\n    .image-block {\n      min-width: 0;\n    }\n\n    .image-block-button {\n      position: absolute;\n      top: 6px;\n      left: 6px;\n      z-index: 1;\n      display: none;\n      width: 32px;\n      height: 32px; \n    }\n\n    .image-conatiner {\n      display: flex;\n    }\n\n    ::ng-deep .image-block-button .mat-button-wrapper .mat-icon {\n        font-size: 1.6rem;\n        vertical-align: baseline;\n    }\n  `]\n})\nexport class NgxEditorjsImageBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  override useInlineToolbar = false;\n  override useInputType = false;\n\n  @ViewChild('image') element!: ElementRef;\n\n  _openEditUrlOverlay: boolean = false;\n\n  _value: { url: string, title: string } = { url: '', title: '' };\n\n  activeImageClass: string = 'flex-start';\n\n  //   flex-start | flex-end | center\n  override blockOptionActions: { action: string, icon: string }[] = [\n    { action: 'flex-start', icon: 'format_align_left' },\n    { action: 'center', icon: 'format_align_center' },\n    { action: 'flex-end', icon: 'format_align_right' },\n    { action: 'stretch', icon: 'format_align_justify' }\n  ];\n\n  override ngOnInit() {\n    !!this.value && (this._value = JSON.parse(this.value));\n    !this.value && this.openEditUrlOverlay();\n    super.ngOnInit();\n  }\n\n  ngAfterViewInit(): void {\n    super.viewChild = this.element;\n  }\n\n  override changeValue(value: string) {\n    super.changeValue(value);\n  }\n\n  override handleBlockOptionAction(action: string) {\n    this.activeImageClass = action ?? 'flex-start';\n    super.handleBlockOptionAction(action);\n  }\n\n  openEditUrlOverlay() {\n    this._openEditUrlOverlay = true;\n  }\n\n  updateImage(value: { url: string, title: string }) {\n    this._value = value;\n    this.changeValue(JSON.stringify(value));\n    this._openEditUrlOverlay = false;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsImageBlockComponent } from './ngx-editorjs-image-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-image-blockquotes-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-image-block [blockId]=\"blockId\" [formControlName]=\"formControlName\" [savedAction]=\"savedAction\"></ngx-editorjs-image-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsImageBlockComponent\n  ],\n})\nexport class NgxEditorjsImageBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n  @Input() savedAction!: string;\n}\n","import { NgModule } from '@angular/core';\nimport { NgxEditorjsImageBlockComponent } from './ngx-editorjs-image-block.component';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ]\n})\nexport class NgxEditorjsImageBlockModule { }\n","/*\n * Public API Surface of ngx-editorjs-image-block\n */\n\nexport * from './lib/ngx-editorjs-image-block.service';\nexport * from './lib/ngx-editorjs-image-client-block.component';\nexport * from './lib/ngx-editorjs-image-block.component';\nexport * from './lib/ngx-editorjs-image-block.mediator';\nexport * from './lib/ngx-editorjs-image-block.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorParagraphBlockService {\n\n  constructor() { }\n}\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { BaseBlockComponent, AutofocusDirective } from '@tmdjr/ngx-editorjs';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-paragraph-block',\n  template: `\n    <p class=\"flex-spacer\" #paragraph contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></p>\n  `,\n  styles: [`:host { display: flex; flex-direction: column; } p { font-size: 1.6rem; line-height: 3.2rem; }`],\n  imports: [\n    AutofocusDirective\n  ]\n})\nexport class NgxEditorjsParagraphBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('paragraph') element!: ElementRef;\n\n  override ngOnInit() {\n    super.ngOnInit();\n  }\n\n  ngAfterViewInit(): void {\n    super.viewChild = this.element;\n  }\n\n  override onMouseEnter(event: Event) {\n    super.onMouseEnter(event);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-paragraph-client-block',\n  template: `\n    <p class=\"flex-spacer\" [innerHTML]=\"value\"></p>\n  `,\n  styles: [`:host { display: flex; flex-direction: column; } p { font-size: 1.6rem; line-height: 3.2rem; }`],\n  imports: []\n})\nexport class NgxEditorjsParagraphClientBlockComponent {\n  @Input() value = '';\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsParagraphBlockComponent } from './ngx-editorjs-paragraph-block.component';\n\n@Component({\n  standalone: true,\n  selector: 'ngx-editorjs-meditator-paragraph-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-paragraph-block [blockId]=\"blockId\" [formControlName]=\"formControlName\"></ngx-editorjs-paragraph-block>\n    </div>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    NgxEditorjsParagraphBlockComponent\n  ],\n})\nexport class NgxEditorjsParagraphBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n}\n","import { NgModule } from '@angular/core';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ]\n})\nexport class NgxEditorParagraphBlockModule { }\n","/*\n * Public API Surface of ngx-editorjs-paragraph-block\n */\n\nexport * from './lib/ngx-editorjs-paragraph-block.service';\nexport * from './lib/ngx-editorjs-paragraph-block.component';\nexport * from './lib/ngx-editorjs-paragraph-client-block.component';\nexport * from './lib/ngx-editorjs-paragraph-block.mediator';\nexport * from './lib/ngx-editorjs-paragraph-block.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { ComponentRef, Inject, Injectable, InjectionToken, Optional, Type, ViewRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\nexport const NGX_EDITORJS_OPTIONS = new InjectionToken<NgxEditorjsOptions>('NGX_EDITORJS_OPTIONS');\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorjsService {\n\n  blocks: SearchableBlock[];\n\n  requestValue!: Subject<boolean>;\n\n  constructor(@Optional() @Inject(NGX_EDITORJS_OPTIONS) options: NgxEditorjsOptions) {\n    this.blocks = options?.blocks || [];\n  }\n\n  toolbarComponentDetachSubject = new Subject<boolean>();\n  toolbarComponentDetach$: Observable<boolean> = this.toolbarComponentDetachSubject.asObservable();\n\n  adjustBlockPositionSubject = new Subject<AdjustBlockPosition>();\n  adjustBlockPosition$: Observable<AdjustBlockPosition> = this.adjustBlockPositionSubject.asObservable();\n\n  addNewBlockSubject = new Subject<CreateBlockAction>();\n  addNewBlock$: Observable<CreateBlockAction> = this.addNewBlockSubject.asObservable();\n\n  updateBlockOptionActionSubject = new Subject<UpdateBlockOptionAction>();\n  updateBlockOptionAction$: Observable<UpdateBlockOptionAction> = this.updateBlockOptionActionSubject.asObservable();\n  \n}\n\n// Create interface for NgxEditorjsValue\nexport interface NgxEditorjsOutputBlock {\n  blockId: string;\n  sortIndex: number;\n  componentInstanceName: string;\n  dataClean: string;\n  savedAction?: string;\n}\n\n// Create interface for Block\nexport interface Block {\n  sortIndex: number;\n  componentRef: ComponentRef<unknown>;\n  dataClean: string;\n  savedAction?: string;\n  componentInstanceName: string;\n}\n\nexport interface NgxEditorjsOptions {\n  blocks?: SearchableBlock[];\n}\n\nexport enum AdjustBlockPositionActions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  DELETE = 'DELETE'\n}\n\nexport interface AdjustBlockPosition {\n  blockId: string;\n  action: AdjustBlockPositionActions;\n}\n\nexport interface BlockMediatorComponent {\n  blockId: string;\n  form: FormGroup;\n  formControlName: string;\n  savedAction?: string;\n}\n\nexport interface SearchableBlock {\n  name: string;\n  component: Type<unknown> | null;\n  componentInstanceName: string;\n  type?: string;\n}\n\nexport interface CreateBlockAction {\n  blockId: string | null\n  componentInstanceName: string;\n  component: Type<unknown> | null;\n  value?: string;\n  componentSortIndex?: number;\n  savedAction?: string;\n}\n\nexport interface BlockOptionAction {\n  action: string;\n  icon?: string;\n  text?: string;\n}\n\nexport interface UpdateBlockOptionAction {\n  blockId: string;\n  action: string;\n}","<div class=\"block-list-container mat-elevation-z8\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input class=\"filter-text\"\n      matInput\n      [formControl]=\"blockCtrl\"\n      [autofocus]=\"true\">\n  </mat-form-field>\n  <mat-list class=\"block-list-panel\"\n    *ngIf=\"filteredBlocks$ | async; let filteredBlocks\">\n    <mat-list-item class=\"block-list-item\"\n      *ngIf=\"filteredBlocks.length <= 0\"\n      matRipple\n      mat-list-item>\n      No Results\n    </mat-list-item>\n    <mat-list-item class=\"block-list-item\"\n      *ngFor=\"let block of filteredBlocks\"\n      matRipple\n      mat-list-item\n      (click)=\"addBlock(block)\">\n      {{block.name}}\n    </mat-list-item>\n  </mat-list>\n</div>","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { NgxEditorjsService, SearchableBlock } from '../../../../ngx-editorjs.service';\nimport { combineLatest, map, Observable, of, startWith, Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'searchable-block-list',\n  templateUrl: './searchable-block-list.component.html',\n  styleUrls: ['./searchable-block-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchableBlockListComponent implements OnInit {\n\n  @Output('addBlock') addBlockEmitter = new EventEmitter();\n\n  blockCtrl = new FormControl([]);\n  blocks!: SearchableBlock[];\n  // blocksDefaults: SearchableBlock[] = [\n  //   { type: 'HeaderBlockMediator', name: 'Header', component: null },\n  // ];\n\n  filter$ = this.blockCtrl.valueChanges.pipe(startWith(''));\n  filteredBlocks$!: Observable<SearchableBlock[]>;\n  destory: Subject<boolean> = new Subject();\n\n  constructor(private ngxEdotorjsService: NgxEditorjsService) { }\n\n  ngOnInit(): void {\n    // this.blocks = this.blocksDefaults.concat(this.ngxEdotorjsService.blocks);\n    this.blocks = this.ngxEdotorjsService.blocks;\n    this.filteredBlocks$ = combineLatest([ of(this.blocks), this.filter$ ])\n    .pipe(\n      takeUntil(this.destory),\n      map(([blocks, filterString]) => {\n        if(typeof filterString !== 'string') filterString = '';\n        filterString = filterString.replace(/\\\\/g, '');\n        const pattern = filterString?.split('').map((v: string) => `(?=.*${v})`).join('');\n        const regex = new RegExp(`${pattern}`, 'gi');\n\n        // return blocks.filter(block => regex.exec(block));\n        return blocks.filter(block => block.name.match(regex));\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.destory.next(true);\n  }\n\n  addBlock(block: SearchableBlock) {\n    this.addBlockEmitter.emit(block);\n  }\n}\n","<div class=\"block-list-container mat-elevation-z8\">\n  <div class=\"block-option-list-panel\">\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"adjustBlockPosition(AdjustBlockPositionActions.UP)\">\n      <mat-icon>arrow_upward</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"adjustBlockPosition(AdjustBlockPositionActions.DELETE)\">\n      <mat-icon>delete</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"adjustBlockPosition(AdjustBlockPositionActions.DOWN)\">\n      <mat-icon>arrow_downward</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      *ngFor=\"let blockOptionAction of blockOptionActions\"\n      (click)=\"handleBlockOptionAction(blockOptionAction.action)\"\n      matRipple>\n      <mat-icon *ngIf=\"blockOptionAction.icon\">{{blockOptionAction.icon}}</mat-icon>\n      <span *ngIf=\"blockOptionAction.text\" class=\"block-option-list-item-text\">{{blockOptionAction.text}}</span>\n    </div>\n  </div>\n</div>","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewRef } from '@angular/core';\nimport { AdjustBlockPositionActions, BlockOptionAction } from '../../../../ngx-editorjs.service';\n\n@Component({\n  selector: 'block-options-list',\n  templateUrl: './block-options-list.component.html',\n  styleUrls: ['./block-options-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BlockOptionsListComponent {\n\n  @Input() blockOptionActions: BlockOptionAction[] | undefined;\n  @Output('handleBlockOptionAction') handleBlockOptionActionEmitter = new EventEmitter();\n\n  readonly AdjustBlockPositionActions = AdjustBlockPositionActions; \n  @Output('adjustBlockPosition') adjustBlockPositionEmitter = new EventEmitter();\n\n  constructor() { }\n\n  adjustBlockPosition(action: AdjustBlockPositionActions) {\n    this.adjustBlockPositionEmitter.emit(action);\n  }\n\n  handleBlockOptionAction(action: string) {\n    this.handleBlockOptionActionEmitter.emit(action);\n  }\n}\n","<div class=\"toolbar-container\">\n  <div class=\"toolbar-buttons-container\">\n    <div class=\"toolbar-buttons mat-elevation-z4\"\n      #blockListTigger=\"cdkOverlayOrigin\"\n      cdkOverlayOrigin\n      matRipple \n      (click)=\"openBlocksList()\">\n      <span class=\"material-icons\">add</span>\n    </div>\n    <div class=\"toolbar-buttons mat-elevation-z4\"\n      cdkOverlayOrigin\n      #blockOptionListTigger=\"cdkOverlayOrigin\"\n      matRipple\n      (click)=\"openBlocksOptionList()\">\n      <span class=\"material-icons\">drag_indicator</span>\n    </div>\n  </div>\n</div>\n\n<!-- Block type search list -->\n<ng-template cdkConnectedOverlay\n  (overlayOutsideClick)=\"openBlocks = false\"\n  [cdkConnectedOverlayOrigin]=\"blockListTigger\"\n  [cdkConnectedOverlayOpen]=\"openBlocks\"\n  [cdkConnectedOverlayHasBackdrop]=\"true\"\n  [cdkConnectedOverlayOffsetY]=\"15\"\n  [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\">\n  <searchable-block-list (addBlock)=\"addBlock($event)\"></searchable-block-list>\n</ng-template>\n\n\n<!-- Options List-->\n<ng-template\n  cdkConnectedOverlay\n  (overlayOutsideClick)=\"openBlocksOption = false\"\n  [cdkConnectedOverlayOrigin]=\"blockOptionListTigger\"\n  [cdkConnectedOverlayOpen]=\"openBlocksOption\"\n  [cdkConnectedOverlayHasBackdrop]=\"true\"\n  [cdkConnectedOverlayOffsetX]=\"-49\"\n  [cdkConnectedOverlayOffsetY]=\"15\"\n  [cdkConnectedOverlayBackdropClass]=\"'cdk-overlay-transparent-backdrop'\">\n  <block-options-list\n    [blockOptionActions]=\"blockOptionActions\"\n    (handleBlockOptionAction)=\"handleBlockOptionAction($event)\"\n    (adjustBlockPosition)=\"adjustBlockPosition($event)\"></block-options-list>\n</ng-template>\n\n\n\n","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { AdjustBlockPositionActions, BlockOptionAction, NgxEditorjsService, SearchableBlock } from '../../../ngx-editorjs.service';\n@Component({\n  selector: 'toolbar-block',\n  templateUrl: './toolbar-block.component.html',\n  styleUrls: ['./toolbar-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarBlockComponent {\n\n  @Output('handleBlockOptionAction') handleBlockOptionActionEmitter = new EventEmitter();\n\n  @Input() blockId!: string;\n  @Input() blockOptionActions: BlockOptionAction[] | undefined;\n\n  openBlocks = false;\n  openBlocksOption = false;\n\n  constructor(private ngxEdotorjsService: NgxEditorjsService) {}\n  \n  openBlocksList() {\n    this.openBlocks = !this.openBlocks;\n  }\n  \n  openBlocksOptionList() {\n    this.openBlocksOption = !this.openBlocksOption;\n  }\n  \n  adjustBlockPosition(action: AdjustBlockPositionActions) {\n    this.ngxEdotorjsService.adjustBlockPositionSubject.next({ blockId: this.blockId, action });\n    this.closeLists();\n  }\n\n  addBlock({ componentInstanceName, component }: SearchableBlock) {\n    this.ngxEdotorjsService.addNewBlockSubject.next({ blockId: this.blockId, component, componentInstanceName: componentInstanceName ?? '' });\n    this.closeLists();\n  }\n\n  closeLists() {\n    this.openBlocks = false;\n    this.openBlocksOption = false;\n  }\n\n  handleBlockOptionAction(action: string) {\n    this.handleBlockOptionActionEmitter.emit(action);\n  }\n}\n","<div class=\"block-list-container mat-elevation-z8\">\n  <div class=\"block-option-list-panel\">\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('bold')\">\n      <mat-icon>format_bold</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('italic')\">\n      <mat-icon>format_italic</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('underlined')\">\n      <mat-icon>format_underlined</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('strikethrough')\">\n      <mat-icon>strikethrough_s</mat-icon>\n    </div>\n    <!-- <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('hiliteColor', 'red')\">\n      <mat-icon>highlight</mat-icon>\n    </div> -->\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addCustomInlineTag('code', 'inline-code-example')\">\n      <mat-icon>code</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"openUrlInput()\">\n      <mat-icon>insert_link</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"clearTags()\">\n      <mat-icon>format_clear</mat-icon>\n    </div>\n\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('justifyLeft')\">\n      <mat-icon>format_align_left</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('justifyCenter')\">\n      <mat-icon>format_align_center</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('justifyRight')\">\n      <mat-icon>format_align_right</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('justifyFull')\">\n      <mat-icon>format_align_justify</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('insertUnorderedList')\">\n      <mat-icon>format_list_bulleted</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('insertOrderedList')\">\n      <mat-icon>format_list_numbered</mat-icon>\n    </div>\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"addInlineTag('hiliteColor', 'yellow')\">\n      <mat-icon>highlight</mat-icon>\n    </div>\n  </div>\n  <div *ngIf=\"showURLInputField\" class=\"block-option-list-panel\">\n    <input type=\"text\" placeholder=\"Enter URL\" class=\"block-option-input\" [(ngModel)]=\"url\" />\n    <div class=\"block-option-list-item\"\n      matRipple\n      (click)=\"createLink()\">\n      <mat-icon>add</mat-icon>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'inline-toolbar-block',\n  templateUrl: './inline-toolbar-block.component.html',\n  styleUrls: ['./inline-toolbar-block.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InlineToolbarBlockComponent implements OnInit {\n\n  @Input() selection!: Selection;\n\n  @Output('closeInlineToobarOverlay') closeInlineToobarOverlayEmitter = new EventEmitter();\n\n  url: string = '';\n  showURLInputField: boolean = false;\n  savedRanges: Range[] = [];\n\n  constructor(private readonly renderer: Renderer2) { }\n\n  ngOnInit(): void {\n  }\n  \n  closeInlineToobarOverlay() {\n    this.closeInlineToobarOverlayEmitter.emit();\n  }\n\n  addInlineTag(tag: string, optionValue?: string | null) {\n    // https://stackoverflow.com/questions/60581285/execcommand-is-now-obsolete-whats-the-alternative\n    document.execCommand(tag, true, optionValue!);\n    this.closeInlineToobarOverlay();\n  }\n\n  addCustomInlineTag(tag: string, className?: string | null) {\n    const range = this.selection.getRangeAt(0);\n    const element = this.renderer.createElement(tag);\n    element.className = className ?? '';\n    element.innerHTML = range.toString();\n    range.deleteContents();\n    range.insertNode(element);\n    this.closeInlineToobarOverlay();\n  }\n\n  clearTags() {\n      document.execCommand('removeFormat');\n      document.execCommand('unlink');\n      this.closeInlineToobarOverlay();\n    }\n\n  openUrlInput() {\n    this.savedRanges.push(this.selection.getRangeAt(0));\n    this.showURLInputField = true;\n  }\n\n  createLink() {\n    this.selection.removeAllRanges();\n    this.selection.addRange(this.savedRanges.pop()!);\n    document.execCommand('createLink', false, this.url);\n    this.closeInlineToobarOverlay();\n  }\n}\n","import { ComponentPortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport {\n  Component,\n  OnInit,\n  Self,\n  HostListener,\n  ElementRef,\n  ApplicationRef,\n  Injector,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  Input,\n  OnDestroy\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { merge, Subject, take, takeUntil } from 'rxjs';\nimport { BlockOptionAction, NgxEditorjsService } from '../../../ngx-editorjs.service';\nimport { ToolbarBlockComponent } from '../toolbar-block/toolbar-block.component';\nimport { InlineToolbarBlockComponent } from '../inline-toolbar-block/inline-toolbar-block.component';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\n\n@Component({ template: '' })\nexport class BaseBlockComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  constructor(\n    @Self() public controlDir: NgControl,\n    private appRef: ApplicationRef,\n    private injector: Injector,\n    private viewContainerRef: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private ngxEdotorjsService: NgxEditorjsService,\n    private overlay: Overlay\n  ) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  destory: Subject<boolean> = new Subject();\n\n  @Input() blockId!: string;\n  @Input() \n  set savedAction(action: string) {\n    this.handleBlockOptionAction(action);\n  }\n\n  blockOptionActions: BlockOptionAction[] | undefined;\n   \n  isActive: boolean = false;\n  error: string = '';\n  escalateMsg: boolean = true;\n  value: string = '';\n  disabled: boolean = false;\n  valid: boolean = true;\n\n  basePortalOutlet = new DomPortalOutlet(\n    this.viewContainerRef.element.nativeElement,\n    this.componentFactoryResolver,\n    this.appRef,\n    this.injector\n  );\n\n  viewChild!: ElementRef;\n\n  toolbarBlockPortal!: ComponentPortal<ToolbarBlockComponent>;\n  overlayRef!: OverlayRef;\n\n  useInlineToolbar: boolean = true;\n  useInputType: boolean = true;\n  useOnPasteHTMLRemoval: boolean = true;\n\n  ngOnInit() {\n    this.controlDir.valueChanges?.subscribe((val) => this.valueChange(val));    \n  }\n\n  ngOnDestroy(): void {\n    this.destory.next(true);\n  }\n\n  valueChange(value: string): void {\n    this.valid = this.controlDir.control?.status !== 'INVALID';\n  }\n\n  writeValue(value: string): void {\n    this.value = value ?? '';\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onBlur(event?: InputEvent) {\n    this.isActive = event?.data !== '';\n    this.escalateMsg = this.valid === false;\n    this.onTouched();\n  }\n\n  onFocus() {\n    this.isActive = true;\n    this.escalateMsg = false;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  onTouched = () => {};\n\n  onChange: (value: string) => void = () => {};\n\n  changeValue(value: string) {\n    this.value = value;\n    this.onChange(value);\n  }\n\n  @HostListener('input')\n  onInput() {\n    this.useInputType && this.onChange(this.viewChild.nativeElement.innerHTML);\n  }\n\n  @HostListener('mouseup', ['$event.target'])\n  onMouseUp(event: Event) {\n    requestAnimationFrame(() => this.checkToDisplayInlineToolbarBlock());\n  }\n\n  @HostListener('mouseenter', ['$event.target'])\n  onMouseEnter(event: Event) {    \n    this.removeAndAddToolbarBlock();\n  }\n\n  @HostListener('paste', ['$event'])\n  onPaste(event: Event) {\n    if(this.useOnPasteHTMLRemoval) {\n      event.preventDefault();\n      const text = (event as ClipboardEvent).clipboardData?.getData('text/plain');\n      document.execCommand('insertText', false, text);\n    }\n  }\n\n  removeAndAddToolbarBlock() {\n    if(!this.basePortalOutlet.hasAttached()) {\n      this.ngxEdotorjsService.toolbarComponentDetachSubject.next(true);\n\n      this.toolbarBlockPortal = new ComponentPortal(ToolbarBlockComponent);\n      const toolbarComponent = this.basePortalOutlet.attach(this.toolbarBlockPortal);\n      \n      toolbarComponent.instance.blockId = this.blockId;\n      toolbarComponent.instance.blockOptionActions = this.blockOptionActions;\n\n      toolbarComponent.instance.handleBlockOptionActionEmitter\n      .pipe(takeUntil(this.destory))\n      .subscribe((action: string) => {\n        this.ngxEdotorjsService.updateBlockOptionActionSubject.next({ blockId: this.blockId, action });\n        this.handleBlockOptionAction(action);\n      });\n\n      this.ngxEdotorjsService.toolbarComponentDetach$\n      .pipe(take(1))\n      .subscribe(() => this.detachToolbarComponent())\n    }\n  }\n\n  // Override this method in child component\n  handleBlockOptionAction(action: string) { }\n\n  detachToolbarComponent() {\n    this.basePortalOutlet.detach();\n    // this.viewContainerRef.remove(0);\n  }\n\n  checkToDisplayInlineToolbarBlock() {\n    const selection = window.getSelection();\n    if(this.useInlineToolbar && selection && selection.toString() !== '') {\n      const range = selection.getRangeAt(0);\n      const selectionRect = range.getBoundingClientRect();\n      // console.log({\n      //   event,\n      //   selection,\n      //   selectionText: selection?.toString(),\n      //   range,\n      //   selectionRect\n      // });\n\n      this.overlayRef = this.overlay.create({\n        hasBackdrop: true,\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n        positionStrategy: this.overlay.position()\n          .flexibleConnectedTo(selectionRect!)\n          .withPositions([{\n            offsetY: 8,\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top',\n          }])\n      });\n      const inlineToolbar = this.overlayRef.attach(new ComponentPortal(InlineToolbarBlockComponent));\n      inlineToolbar.instance.selection = selection;\n\n      merge(this.overlayRef.backdropClick(), inlineToolbar.instance.closeInlineToobarOverlayEmitter)\n      .pipe(take(1))\n      .subscribe(() => this.overlayRef.dispose());\n    }\n  }\n}\n","import { AfterContentInit, AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\n\n@Directive({\n  standalone: true,\n  selector: '[autofocus]'\n})\nexport class AutofocusDirective implements AfterContentInit {\n  _autofocus!: boolean;\n  @Input() set autofocus(condition: boolean) {\n    this._autofocus = condition !== false;\n  }\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngAfterContentInit() {\n    if (this._autofocus || typeof this._autofocus === 'undefined') {\n      const nativeElement = this.elementRef.nativeElement;\n      setTimeout(() => nativeElement.focus?.());\n    }\n  }\n}\n","import { Component, OnInit, ViewChild, AfterViewInit, ElementRef, Input, ViewChildren, QueryList } from '@angular/core';\nimport { BlockOptionAction } from '../../../ngx-editorjs.service';\nimport { BaseBlockComponent } from '../base-block/base-block.component';\n\n@Component({\n  selector: 'ngx-editorjs-header-block',\n  template: `\n    <span #header [ngSwitch]=\"whichHeader\">\n        <h2 *ngSwitchCase=\"'h2'\" class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h2>\n        <h3 *ngSwitchCase=\"'h3'\" class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h3>\n        <h4 *ngSwitchCase=\"'h4'\" class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h4>\n        <h5 *ngSwitchCase=\"'h5'\" class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h5>\n        <h6 *ngSwitchCase=\"'h6'\" class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h6>\n        <h1 *ngSwitchDefault class=\"flex-spacer\" contenteditable [autofocus]=\"true\" (focus)=\"onMouseEnter($event)\" [innerHTML]=\"value\"></h1>\n    </span>\n  `,\n  styles: [`\n    :host { display: flex; flex-direction: column; }\n  `]\n})\nexport class NgxEditorjsHeaderBlockComponent extends BaseBlockComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('header', { read: ElementRef }) element!: ElementRef<HTMLHeadingElement>;\n\n  whichHeader!: string\n\n  override blockOptionActions: BlockOptionAction[] = [\n    { action: 'h1', text: 'H1' },\n    { action: 'h2', text: 'H2' },\n    { action: 'h3', text: 'H3' },\n    { action: 'h4', text: 'H4' },\n    { action: 'h5', text: 'H5' },\n    { action: 'h6', text: 'H6' }\n  ];\n\n  ngAfterViewInit(): void {\n    super.viewChild = new ElementRef(this.element.nativeElement.firstElementChild);\n  }\n\n  override handleBlockOptionAction(action: string) {\n    this.whichHeader = action;\n    // Have to wait for the next frame to get the new element\n    if (this.element) {\n      requestAnimationFrame(() => {\n        super.viewChild = new ElementRef(this.element.nativeElement.firstElementChild);\n        this.value = this.controlDir.control?.value ?? '';\n      });\n    }\n  }\n}\n","import { Component, Input, ViewRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n@Component({\n  selector: 'ngx-editorjs-meditator-header-block',\n  template: `\n    <div [formGroup]=\"form\">\n      <ngx-editorjs-header-block [blockId]=\"blockId\" [formControlName]=\"formControlName\" [savedAction]=\"savedAction\"></ngx-editorjs-header-block>\n    </div>\n  `,\n})\nexport class NgxEditorjsHeaderBlockMediator {\n  @Input() blockId!: string;\n  @Input() form!: FormGroup;\n  @Input() formControlName!: string;\n  @Input() savedAction!: string;\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, ViewContainerRef, ViewRef } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { combineLatest, concatMap, forkJoin, from, map, of, Subject, takeUntil, tap } from 'rxjs';\nimport { NgxEditorjsHeaderBlockMediator } from './components/blocks/ngx-editorjs-header-block/ngx-editorjs-header-block.mediator';\nimport { \n  AdjustBlockPosition,\n  AdjustBlockPositionActions,\n  Block,\n  BlockMediatorComponent,\n  CreateBlockAction,\n  NgxEditorjsService,\n  NgxEditorjsOutputBlock,\n  SearchableBlock,\n  UpdateBlockOptionAction\n} from './ngx-editorjs.service';\n\n// ['header',{ type: 'header', dataClean: '' }],\n// ['paragraph', { type: 'paragraph', dataClean: '' }],\n// ['list', { type: 'list', dataClean: '' }],\n// ['image', { type: 'image', dataClean: '' }],\n// ['quote', { type: 'quote', dataClean: '' }],\n// ['code', { type: 'code', dataClean: '' }],\n// ['delimiter', { type: 'delimiter', dataClean: '' }],\n// ['raw', { type: 'raw', dataClean: '' }],\n// ['table', { type: 'table', dataClean: '' }],\n// ['linkTool', { type: 'linkTool', dataClean: '' }],\n// ['embed', { type: 'embed', dataClean: '' }],\n// ['marker', { type: 'marker', dataClean: '' }],\n// ['warning', { type: 'warning', dataClean: '' }],\n// ['checklist', { type: 'checklist', dataClean: '' }],\n// ['inlineCode', { type: 'inlineCode', dataClean: '' }],\n// ['delimiter', { type: 'delimiter', dataClean: '' }],\n\nexport const HeaderSearchableBlock: SearchableBlock = {\n  name: 'Header',\n  component: NgxEditorjsHeaderBlockMediator,\n  componentInstanceName: 'NgxEditorjsHeaderBlockMediator',\n};\n\n@Component({\n  selector: 'ngx-editorjs',\n  template: `\n    <form [formGroup]=\"formGroup\">\n      <ng-container #ngxEditor></ng-container>\n    </form>\n  `,\n  styles: []\n})\nexport class NgxEditorjsComponent implements OnInit, OnDestroy {\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private ngxEditorjsService: NgxEditorjsService\n  ) {}\n\n  @Input() \n  set inputData(blocks: NgxEditorjsOutputBlock[]) {\n    requestAnimationFrame(() => this.clearSortCreateNgxEditorjsBlocks(blocks));\n  }\n\n  @Input() requestValue!: Subject<boolean>;\n  @Output() valueRequested = new EventEmitter<NgxEditorjsOutputBlock[]>();\n\n  // @Output('ngxOnInitForm') ngxOnInitForm = new EventEmitter<FormGroup>();\n\n  @ViewChild('ngxEditor', { read: ViewContainerRef, static: true }) ngxEditor!: ViewContainerRef;\n\n  formGroup: FormGroup = this.formBuilder.group({});\n  blockControlMap: Map<string, Block> = new Map();\n\n  destroy: Subject<void> = new Subject();\n\n\n  ngOnInit(): void {\n    // @TODO: add a way only add on first load\n    this.ngxEditorjsService.blocks.unshift(HeaderSearchableBlock);\n    \n    // this.ngxOnInitForm.emit(this.formGroup);\n    this.requestValue\n    .pipe(takeUntil(this.destroy))\n    .subscribe(() => this.parentRequestCurrentValue());\n\n    this.ngxEditorjsService.adjustBlockPosition$\n    .pipe(takeUntil(this.destroy))\n    .subscribe((adjustBlockPosition: AdjustBlockPosition) => {\n      adjustBlockPosition.action === AdjustBlockPositionActions.DELETE ? \n      this.deleteNgxEditorjsBlock(adjustBlockPosition) : this.moveNgxEditorjsBlock(adjustBlockPosition);\n    });\n\n    this.ngxEditorjsService.addNewBlock$\n    .pipe(takeUntil(this.destroy))\n    .subscribe((block) => this.createNgxEditorjsBlock(block));\n\n    this.ngxEditorjsService.updateBlockOptionAction$\n    .pipe(takeUntil(this.destroy))\n    .subscribe((block) => this.updateNgxEditorjsBlock(block));\n\n    // this.clearSortCreateNgxEditorjsBlocks([]);\n  }\n\n  ngOnDestroy(): void {\n    // @todo: add a way only add on first load\n    this.ngxEditorjsService.blocks.shift();\n    this.destroy.next();\n  }\n\n  loadNgxEditorjsBlock({ blockId, component, value, savedAction, componentInstanceName }: CreateBlockAction): void {\n    this.formGroup.addControl(blockId!, this.formBuilder.control(value, []));\n\n    const componentRef = this.ngxEditor.createComponent(component!, { index: this.ngxEditor.length });\n    const blockMediator = componentRef.instance as BlockMediatorComponent;\n    blockMediator.blockId = blockId!;\n    blockMediator.form = this.formGroup;\n    blockMediator.formControlName = blockId!;      \n    blockMediator.savedAction = savedAction;\n\n    this.blockControlMap.set(blockId!, {\n      sortIndex: this.ngxEditor.length - 1,\n      componentRef: componentRef,\n      componentInstanceName: componentInstanceName,\n      dataClean: value!,\n      savedAction\n    });\n  };\n\n  createNgxEditorjsBlock({ blockId, component, componentInstanceName }: CreateBlockAction): void {\n    \n    if(!component || !blockId) return;\n    const block = component ?? NgxEditorjsHeaderBlockMediator;\n    const controlName = Math.random().toString(36).slice(2);\n    \n    let viewRef: ViewRef | undefined;\n    if(blockId) viewRef = this.blockControlMap.get(blockId)!.componentRef.hostView;\n\n    this.formGroup.addControl(controlName, this.formBuilder.control('', []));\n\n    const sortIndex = viewRef ? this.ngxEditor.indexOf(viewRef) + 1 : 0;\n    const componentRef = this.ngxEditor.createComponent(block, { index: sortIndex });\n    const blockMediator = componentRef.instance as BlockMediatorComponent;\n    blockMediator.blockId = controlName;\n    blockMediator.form = this.formGroup;\n    blockMediator.formControlName = controlName;\n\n    this.blockControlMap.forEach((block) => { if(block.sortIndex >= sortIndex) block.sortIndex++ });\n    this.blockControlMap.set(controlName, { sortIndex, dataClean: '', componentRef, componentInstanceName });\n  }\n\n  moveNgxEditorjsBlock({ blockId, action }: AdjustBlockPosition): void {\n    const viewRef = this.blockControlMap.get(blockId)!.componentRef.hostView;\n    const sortIndex = this.ngxEditor.indexOf(viewRef);\n    const newSortIndex = action === AdjustBlockPositionActions.UP ? sortIndex - 1 : sortIndex + 1;\n    const inRange = newSortIndex >= 0 && newSortIndex <= this.ngxEditor.length - 1;\n    this.ngxEditor.move(viewRef, inRange ? newSortIndex : sortIndex);\n\n    this.blockControlMap.forEach((block) => {\n      if(block.sortIndex === sortIndex) block.sortIndex = newSortIndex;\n      else if(block.sortIndex === newSortIndex) block.sortIndex = sortIndex;\n    });\n  }\n\n  updateNgxEditorjsBlock({ blockId, action }: UpdateBlockOptionAction): void {\n    this.blockControlMap.forEach((block, blockIdKey) => {\n      if(blockIdKey === blockId) block.savedAction = action;\n    });\n  }\n\n  deleteNgxEditorjsBlock({ blockId }: AdjustBlockPosition): void {\n    const viewRef = this.blockControlMap.get(blockId)!.componentRef.hostView;\n    const index = this.ngxEditor.indexOf(viewRef);\n    if (this.ngxEditor.length - 1 !== 0) {\n      this.blockControlMap.delete(blockId);\n      this.ngxEditor.remove(index);\n      this.blockControlMap.forEach((block) => {\n        if(block.sortIndex > index) block.sortIndex--;\n      });\n    }\n  }\n\n  parentRequestCurrentValue(): void {\n\n    console.log({\n      blockControlMap: this.blockControlMap,\n    });\n    \n    const blocks: NgxEditorjsOutputBlock[] = [];\n    this.blockControlMap.forEach((block, key) => {\n      blocks.push({\n        blockId: key,\n        sortIndex: block.sortIndex,\n        componentInstanceName: block.componentInstanceName,\n        dataClean: this.formGroup.get(key)?.value,\n        savedAction: block.savedAction\n      })\n    });\n    this.valueRequested.emit(blocks);\n  }\n\n  clearSortCreateNgxEditorjsBlocks(blocks: NgxEditorjsOutputBlock[]): void {\n    if(blocks === undefined || blocks.length === 0 ) {\n      this.createNgxEditorjsBlock({ blockId: null, component: null, componentInstanceName: '' });\n      return;\n    }\n    // Clear\n    this.ngxEditor.clear();\n    this.blockControlMap.clear();\n    // Sort\n    blocks.sort((a, b) => a.sortIndex - b.sortIndex);\n    // Create\n    blocks.forEach((block) => {\n      const componentInstanceObject = \n        this.ngxEditorjsService.blocks.find((b) => b.componentInstanceName === block.componentInstanceName)\n          ?? this.ngxEditorjsService.blocks[0];\n\n      const createBlockAction: CreateBlockAction = { \n        blockId: block.blockId,\n        component: componentInstanceObject?.component,\n        componentInstanceName: block.componentInstanceName,\n        value: block.dataClean,\n        componentSortIndex: block.sortIndex,\n        savedAction: block.savedAction\n      };\n      this.loadNgxEditorjsBlock(createBlockAction);\n    });\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutofocusDirective } from '../../../directives/autofocus/autofocus.directive';\n\nimport { NgxEditorjsHeaderBlockComponent } from './ngx-editorjs-header-block.component';\nimport { NgxEditorjsHeaderBlockMediator } from './ngx-editorjs-header-block.mediator';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    NgxEditorjsHeaderBlockComponent,\n    NgxEditorjsHeaderBlockMediator\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AutofocusDirective\n  ],\n  exports: [\n    NgxEditorjsHeaderBlockMediator\n  ]\n})\nexport class NgxEditorjsHeaderBlockModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { AutofocusDirective } from './autofocus.directive';\n\n\n\n@NgModule({\n  declarations: [\n    // AutofocusDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    // AutofocusDirective\n  ]\n})\nexport class AutofocusModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToolbarBlockComponent } from './toolbar-block.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { AutofocusModule } from '../../../directives/autofocus/autofocus.module';\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatRippleModule } from '@angular/material/core';\nimport { SearchableBlockListComponent } from './searchable-block-list/searchable-block-list.component';\nimport { BlockOptionsListComponent } from './block-options-list/block-options-list.component'\n\n\n@NgModule({\n  declarations: [\n    ToolbarBlockComponent,\n    SearchableBlockListComponent,\n    BlockOptionsListComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    OverlayModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatIconModule,\n    MatRippleModule,\n    AutofocusModule\n  ],\n  exports: [\n    ToolbarBlockComponent\n  ]\n})\nexport class ToolbarBlockModule { }\n","import { Component, Input } from '@angular/core';\n@Component({\n  selector: 'meditator-inline-toolbar-block',\n  template: `<inline-toolbar-block></inline-toolbar-block>`,\n})\nexport class InlineToolbarBlockMediator {\n  @Input() attachPosition!: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InlineToolbarBlockComponent } from './inline-toolbar-block.component';\nimport { InlineToolbarBlockMediator } from './inline-toolbar-block.mediator';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    InlineToolbarBlockMediator,\n    InlineToolbarBlockComponent\n  ],\n  imports: [\n    CommonModule,\n    MatListModule,\n    MatIconModule,\n    MatRippleModule,\n    FormsModule\n  ]\n})\nexport class InlineToolbarBlockModule { }\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxEditorjsComponent } from './ngx-editorjs.component';\nimport { NgxEditorjsHeaderBlockModule } from './components/blocks/ngx-editorjs-header-block/ngx-editorjs-header-block.module';\nimport { ToolbarBlockModule } from './components/blocks/toolbar-block/toolbar-block.module';\nimport { AutofocusModule } from './directives/autofocus/autofocus.module';\nimport { CommonModule } from '@angular/common';\nimport { InlineToolbarBlockModule } from './components/blocks/inline-toolbar-block/inline-toolbar-block.module';\n@NgModule({\n  declarations: [\n    NgxEditorjsComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgxEditorjsHeaderBlockModule,\n    ToolbarBlockModule,\n    AutofocusModule,\n    InlineToolbarBlockModule,\n  ],\n  exports: [\n    NgxEditorjsComponent\n  ]\n})\nexport class NgxEditorjsModule { }\n","/*\n * Public API Surface of ngx-editorjs\n */\n\nexport * from './lib/ngx-editorjs.service';\nexport * from './lib/ngx-editorjs.component';\nexport * from './lib/ngx-editorjs.module';\n\nexport * from './lib/components/blocks/base-block/base-block.component';\nexport * from './lib/directives/autofocus/autofocus.directive';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["NgxEditorBlockquotesBlockService","constructor","Injectable","args","providedIn","NgxEditorjsBlockquotesClientBlockComponent","value","Component","selector","template","imports","styles","Input","NgxEditorjsBlockquotesBlockComponent","BaseBlockComponent","ngOnInit","ngAfterViewInit","viewChild","element","onMouseEnter","event","AutofocusDirective","standalone","ViewChild","NgxEditorjsBlockquotesBlockMediator","ReactiveFormsModule","i1","blockId","form","formControlName","NgxEditorBlockquotesBlockModule","NgModule","declarations","exports","i0","NGX_EDITORJS_CLIENT_OPTIONS","InjectionToken","NgxEditorjsClientService","options","blocks","Optional","Inject","NgxEditorjsHeaderClientBlockComponent","savedAction","action","whichHeader","CommonModule","changeDetection","OnPush","name","component","componentInstanceName","NgxEditorjsClientComponent","ngxEditorjsClientService","inputData","requestAnimationFrame","clearSortCreateNgxEditorjsBlocks","unshift","HeaderSearchableBlock","ngxEditorClient","clear","sort","a","b","sortIndex","forEach","block","componentInstanceObject","find","_a","createBlockAction","dataClean","componentSortIndex","loadNgxEditorjsBlock","componentRef","createComponent","index","length","blockMediator","instance","i1.NgxEditorjsClientService","ViewContainerRef","read","static","NgxEditorjsClientModule","NgxEditorjsCodeBlockService","NgxEditorjsCodeClientBlockComponent","lineNumbers","theme","mode","readOnly","codeMirrorOptions","CodemirrorModule","FormsModule","i2","NgxEditorjsCodeBlockComponent","useInlineToolbar","useInputType","useOnPasteHTMLRemoval","icon","handleBlockOptionAction","NgxEditorjsCodeBlockMediator","NgxEditorjsCodeBlockModule","NgxEditorjsImageBlockService","NgxEditorjsImageClientBlockComponent","_value","url","title","activeImageClass","JSON","parse","onImageClick","console","log","ImageConfigComponent","formBuilder","Subject","required","EventEmitter","imageConfigForm","group","Validators","_b","statusChanges","pipe","takeUntil","destory","subscribe","setErrorsMessages","imageConfigFormErrorMessages","ngOnDestroy","next","updateImage","imageValue","emit","closeConfig","formGroup","formControlMessages","Object","keys","controls","errors","get","error","errorMessages","MatInputModule","i3","i4","MatButtonModule","i5","MatFormFieldModule","Output","NgxEditorjsImageBlockComponent","_openEditUrlOverlay","openEditUrlOverlay","changeValue","stringify","MatIconModule","i3$1","NgxEditorjsImageBlockMediator","i1$1","NgxEditorjsImageBlockModule","NgxEditorParagraphBlockService","NgxEditorjsParagraphBlockComponent","NgxEditorjsParagraphClientBlockComponent","NgxEditorjsParagraphBlockMediator","NgxEditorParagraphBlockModule","NGX_EDITORJS_OPTIONS","NgxEditorjsService","toolbarComponentDetachSubject","asObservable","adjustBlockPositionSubject","addNewBlockSubject","updateBlockOptionActionSubject","factory","AdjustBlockPositionActions","block_r4","SearchableBlockListComponent_mat_list_5_mat_list_item_1_Template","SearchableBlockListComponent_mat_list_5_mat_list_item_2_Template","filteredBlocks_r1","SearchableBlockListComponent","ngxEdotorjsService","FormControl","blockCtrl","valueChanges","startWith","filteredBlocks$","combineLatest","of","filter$","map","filterString","replace","pattern","split","v","join","regex","RegExp","filter","match","addBlock","addBlockEmitter","selectors","outputs","decls","vars","consts","SearchableBlockListComponent_mat_list_5_Template","ChangeDetectionStrategy","blockOptionAction_r1","BlockOptionsListComponent_div_11_mat_icon_1_Template","BlockOptionsListComponent_div_11_span_2_Template","BlockOptionsListComponent","adjustBlockPosition","adjustBlockPositionEmitter","handleBlockOptionActionEmitter","inputs","blockOptionActions","ctx","BlockOptionsListComponent_div_11_Template","$event","ctx_r3","ToolbarBlockComponent","openBlocks","openBlocksOption","openBlocksList","openBlocksOptionList","closeLists","ToolbarBlockComponent_ng_template_10_Template","ToolbarBlockComponent_ng_template_11_Template","_r0","ctx_r0","InlineToolbarBlockComponent","renderer","showURLInputField","savedRanges","closeInlineToobarOverlay","closeInlineToobarOverlayEmitter","addInlineTag","tag","optionValue","document","execCommand","addCustomInlineTag","className","range","selection","getRangeAt","createElement","innerHTML","toString","deleteContents","insertNode","clearTags","openUrlInput","push","createLink","removeAllRanges","addRange","pop","InlineToolbarBlockComponent_div_44_Template","controlDir","appRef","injector","viewContainerRef","componentFactoryResolver","overlay","isActive","escalateMsg","disabled","valid","basePortalOutlet","DomPortalOutlet","nativeElement","valueAccessor","val","valueChange","control","status","writeValue","registerOnChange","fn","onChange","registerOnTouched","onTouched","onBlur","data","onFocus","setDisabledState","isDisabled","onInput","onMouseUp","checkToDisplayInlineToolbarBlock","removeAndAddToolbarBlock","onPaste","preventDefault","text","clipboardData","getData","hasAttached","toolbarBlockPortal","ComponentPortal","toolbarComponent","attach","toolbarComponentDetach$","take","detachToolbarComponent","detach","window","getSelection","selectionRect","getBoundingClientRect","overlayRef","create","hasBackdrop","backdropClass","positionStrategy","position","flexibleConnectedTo","withPositions","offsetY","originX","originY","overlayX","overlayY","inlineToolbar","merge","backdropClick","dispose","hostBindings","Self","HostListener","elementRef","autofocus","condition","_autofocus","ngAfterContentInit","setTimeout","focus","Directive","ctx_r1","ctx_r2","ctx_r4","ctx_r5","ctx_r6","NgxEditorjsHeaderBlockComponent","ElementRef","firstElementChild","t","viewQuery","NgxEditorjsHeaderBlockComponent_h2_2_Template","NgxEditorjsHeaderBlockComponent_h3_3_Template","NgxEditorjsHeaderBlockComponent_h4_4_Template","NgxEditorjsHeaderBlockComponent_h5_5_Template","NgxEditorjsHeaderBlockComponent_h6_6_Template","NgxEditorjsHeaderBlockComponent_h1_7_Template","NgxEditorjsHeaderBlockMediator","NgxEditorjsComponent","ngxEditorjsService","Map","requestValue","destroy","parentRequestCurrentValue","adjustBlockPosition$","DELETE","deleteNgxEditorjsBlock","moveNgxEditorjsBlock","addNewBlock$","createNgxEditorjsBlock","updateBlockOptionAction$","updateNgxEditorjsBlock","shift","addControl","ngxEditor","blockControlMap","set","controlName","Math","random","slice","viewRef","hostView","indexOf","newSortIndex","UP","inRange","move","blockIdKey","delete","remove","key","valueRequested","undefined","NgxEditorjsHeaderBlockModule","AutofocusModule","ToolbarBlockModule","OverlayModule","MatListModule","MatRippleModule","InlineToolbarBlockMediator","attachPosition","InlineToolbarBlockModule","NgxEditorjsModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}